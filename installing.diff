28d27
< 
498d496
< 
607c605
< <simpara>Depending on your workload needs, you might need to take extra steps before you begin deploying applications. For example, after you prepare infrastructure to support your application <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/cicd/#build-strategies">build strategy</link>, you might need to make provisions for <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/scalability_and_performance/#cnf-low-latency-tuning">low-latency</link> workloads or to <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/nodes/#nodes-pods-secrets">protect sensitive workloads</link>. You can also configure <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/monitoring/#enabling-monitoring-for-user-defined-projects">monitoring</link> for application workloads.
---
> <simpara>Depending on your workload needs, you might need to take extra steps before you begin deploying applications. For example, after you prepare infrastructure to support your application <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/builds_using_buildconfig/#build-strategies">build strategy</link>, you might need to make provisions for <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/scalability_and_performance/#cnf-low-latency-tuning">low-latency</link> workloads or to <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/nodes/#nodes-pods-secrets">protect sensitive workloads</link>. You can also configure <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/monitoring/#enabling-monitoring-for-user-defined-projects">monitoring</link> for application workloads.
980d977
< 
1319d1315
< 
1340d1335
< 
2077d2071
< 
2177,2178c2171
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
2179a2173
> <title>Procedure</title>
2206,2207c2200
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
2208a2202
> <title>Procedure</title>
2880d2873
< 
4434d4426
< 
4507d4498
< 
4842d4832
< 
5363,5364c5353
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
5365a5355
> <title>Procedure</title>
5392,5393c5382
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
5394a5384
> <title>Procedure</title>
5532d5521
< 
6215,6216c6204
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
6217a6206
> <title>Procedure</title>
6244,6245c6233
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
6246a6235
> <title>Procedure</title>
6387d6375
< 
7520,7521c7508
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
7522a7510
> <title>Procedure</title>
7549,7550c7537
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
7551a7539
> <title>Procedure</title>
7692d7679
< 
8430,8431c8417
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
8432a8419
> <title>Procedure</title>
8459,8460c8446
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
8461a8448
> <title>Procedure</title>
8599d8585
< 
9148d9133
< 
9199d9183
< 
9275d9258
< 
10631d10613
< 
10961,10962c10943
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
10963a10945
> <title>Procedure</title>
10990,10991c10972
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
10992a10974
> <title>Procedure</title>
11136d11117
< 
11513c11494,11540
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
11524c11551,11558
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
11781,11782c11815
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
11783a11817
> <title>Procedure</title>
11810,11811c11844
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
11812a11846
> <title>Procedure</title>
12668d12701
< 
13034c13067,13113
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
13045c13124,13131
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
13302,13303c13388
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
13304a13390
> <title>Procedure</title>
13331,13332c13417
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
13333a13419
> <title>Procedure</title>
14793d14878
< 
15729,15730c15814
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
15731a15816
> <title>Procedure</title>
15758,15759c15843
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
15760a15845
> <title>Procedure</title>
16593d16677
< 
17262c17346,17392
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
17273c17403,17410
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
17611,17612c17748
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
17613a17750
> <title>Procedure</title>
17640,17641c17777
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
17642a17779
> <title>Procedure</title>
18498d18634
< 
19122c19258,19304
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
19133c19315,19322
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
19475,19476c19664
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
19477a19666
> <title>Procedure</title>
19504,19505c19693
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
19506a19695
> <title>Procedure</title>
20362d20550
< 
21064c21252,21298
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
21075c21309,21316
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
21416,21417c21657
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
21418a21659
> <title>Procedure</title>
21445,21446c21686
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
21447a21688
> <title>Procedure</title>
22303d22543
< 
23465,23466c23705
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
23467a23707
> <title>Procedure</title>
23494,23495c23734
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
23496a23736
> <title>Procedure</title>
24352d24591
< 
25301c25540,25586
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
25312c25597,25604
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
25507,25508c25799
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
25509a25801
> <title>Procedure</title>
25536,25537c25828
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
25538a25830
> <title>Procedure</title>
26391d26682
< 
26572c26863,26909
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
26583c26920,26927
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
28708c29052,29362
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/01_vpc.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for Best Practice VPC with 1-3 AZs
> 
> Parameters:
>   VpcCidr:
>     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
>     ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
>     Default: 10.0.0.0/16
>     Description: CIDR block for VPC.
>     Type: String
>   AvailabilityZoneCount:
>     ConstraintDescription: "The number of availability zones. (Min: 1, Max: 3)"
>     MinValue: 1
>     MaxValue: 3
>     Default: 1
>     Description: "How many AZs to create VPC subnets for. (Min: 1, Max: 3)"
>     Type: Number
>   SubnetBits:
>     ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/19-27.
>     MinValue: 5
>     MaxValue: 13
>     Default: 12
>     Description: "Size of each subnet to create within the availability zones. (Min: 5 = /27, Max: 13 = /19)"
>     Type: Number
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcCidr
>       - SubnetBits
>     - Label:
>         default: "Availability Zones"
>       Parameters:
>       - AvailabilityZoneCount
>     ParameterLabels:
>       AvailabilityZoneCount:
>         default: "Availability Zone Count"
>       VpcCidr:
>         default: "VPC CIDR"
>       SubnetBits:
>         default: "Bits Per Subnet"
> 
> Conditions:
>   DoAz3: !Equals [3, !Ref AvailabilityZoneCount]
>   DoAz2: !Or [!Equals [2, !Ref AvailabilityZoneCount], Condition: DoAz3]
> 
> Resources:
>   VPC:
>     Type: "AWS::EC2::VPC"
>     Properties:
>       EnableDnsSupport: "true"
>       EnableDnsHostnames: "true"
>       CidrBlock: !Ref VpcCidr
>   PublicSubnet:
>     Type: "AWS::EC2::Subnet"
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [0, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 0
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PublicSubnet2:
>     Type: "AWS::EC2::Subnet"
>     Condition: DoAz2
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [1, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 1
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PublicSubnet3:
>     Type: "AWS::EC2::Subnet"
>     Condition: DoAz3
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [2, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 2
>       - Fn::GetAZs: !Ref "AWS::Region"
>   InternetGateway:
>     Type: "AWS::EC2::InternetGateway"
>   GatewayToInternet:
>     Type: "AWS::EC2::VPCGatewayAttachment"
>     Properties:
>       VpcId: !Ref VPC
>       InternetGatewayId: !Ref InternetGateway
>   PublicRouteTable:
>     Type: "AWS::EC2::RouteTable"
>     Properties:
>       VpcId: !Ref VPC
>   PublicRoute:
>     Type: "AWS::EC2::Route"
>     DependsOn: GatewayToInternet
>     Properties:
>       RouteTableId: !Ref PublicRouteTable
>       DestinationCidrBlock: 0.0.0.0/0
>       GatewayId: !Ref InternetGateway
>   PublicSubnetRouteTableAssociation:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Properties:
>       SubnetId: !Ref PublicSubnet
>       RouteTableId: !Ref PublicRouteTable
>   PublicSubnetRouteTableAssociation2:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Condition: DoAz2
>     Properties:
>       SubnetId: !Ref PublicSubnet2
>       RouteTableId: !Ref PublicRouteTable
>   PublicSubnetRouteTableAssociation3:
>     Condition: DoAz3
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Properties:
>       SubnetId: !Ref PublicSubnet3
>       RouteTableId: !Ref PublicRouteTable
>   PrivateSubnet:
>     Type: "AWS::EC2::Subnet"
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [3, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 0
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PrivateRouteTable:
>     Type: "AWS::EC2::RouteTable"
>     Properties:
>       VpcId: !Ref VPC
>   PrivateSubnetRouteTableAssociation:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Properties:
>       SubnetId: !Ref PrivateSubnet
>       RouteTableId: !Ref PrivateRouteTable
>   NAT:
>     DependsOn:
>     - GatewayToInternet
>     Type: "AWS::EC2::NatGateway"
>     Properties:
>       AllocationId:
>         "Fn::GetAtt":
>         - EIP
>         - AllocationId
>       SubnetId: !Ref PublicSubnet
>   EIP:
>     Type: "AWS::EC2::EIP"
>     Properties:
>       Domain: vpc
>   Route:
>     Type: "AWS::EC2::Route"
>     Properties:
>       RouteTableId:
>         Ref: PrivateRouteTable
>       DestinationCidrBlock: 0.0.0.0/0
>       NatGatewayId:
>         Ref: NAT
>   PrivateSubnet2:
>     Type: "AWS::EC2::Subnet"
>     Condition: DoAz2
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [4, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 1
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PrivateRouteTable2:
>     Type: "AWS::EC2::RouteTable"
>     Condition: DoAz2
>     Properties:
>       VpcId: !Ref VPC
>   PrivateSubnetRouteTableAssociation2:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Condition: DoAz2
>     Properties:
>       SubnetId: !Ref PrivateSubnet2
>       RouteTableId: !Ref PrivateRouteTable2
>   NAT2:
>     DependsOn:
>     - GatewayToInternet
>     Type: "AWS::EC2::NatGateway"
>     Condition: DoAz2
>     Properties:
>       AllocationId:
>         "Fn::GetAtt":
>         - EIP2
>         - AllocationId
>       SubnetId: !Ref PublicSubnet2
>   EIP2:
>     Type: "AWS::EC2::EIP"
>     Condition: DoAz2
>     Properties:
>       Domain: vpc
>   Route2:
>     Type: "AWS::EC2::Route"
>     Condition: DoAz2
>     Properties:
>       RouteTableId:
>         Ref: PrivateRouteTable2
>       DestinationCidrBlock: 0.0.0.0/0
>       NatGatewayId:
>         Ref: NAT2
>   PrivateSubnet3:
>     Type: "AWS::EC2::Subnet"
>     Condition: DoAz3
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [5, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 2
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PrivateRouteTable3:
>     Type: "AWS::EC2::RouteTable"
>     Condition: DoAz3
>     Properties:
>       VpcId: !Ref VPC
>   PrivateSubnetRouteTableAssociation3:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Condition: DoAz3
>     Properties:
>       SubnetId: !Ref PrivateSubnet3
>       RouteTableId: !Ref PrivateRouteTable3
>   NAT3:
>     DependsOn:
>     - GatewayToInternet
>     Type: "AWS::EC2::NatGateway"
>     Condition: DoAz3
>     Properties:
>       AllocationId:
>         "Fn::GetAtt":
>         - EIP3
>         - AllocationId
>       SubnetId: !Ref PublicSubnet3
>   EIP3:
>     Type: "AWS::EC2::EIP"
>     Condition: DoAz3
>     Properties:
>       Domain: vpc
>   Route3:
>     Type: "AWS::EC2::Route"
>     Condition: DoAz3
>     Properties:
>       RouteTableId:
>         Ref: PrivateRouteTable3
>       DestinationCidrBlock: 0.0.0.0/0
>       NatGatewayId:
>         Ref: NAT3
>   S3Endpoint:
>     Type: AWS::EC2::VPCEndpoint
>     Properties:
>       PolicyDocument:
>         Version: 2012-10-17
>         Statement:
>         - Effect: Allow
>           Principal: '*'
>           Action:
>           - '*'
>           Resource:
>           - '*'
>       RouteTableIds:
>       - !Ref PublicRouteTable
>       - !Ref PrivateRouteTable
>       - !If [DoAz2, !Ref PrivateRouteTable2, !Ref "AWS::NoValue"]
>       - !If [DoAz3, !Ref PrivateRouteTable3, !Ref "AWS::NoValue"]
>       ServiceName: !Join
>       - ''
>       - - com.amazonaws.
>         - !Ref 'AWS::Region'
>         - .s3
>       VpcId: !Ref VPC
> 
> Outputs:
>   VpcId:
>     Description: ID of the new VPC.
>     Value: !Ref VPC
>   PublicSubnetIds:
>     Description: Subnet IDs of the public subnets.
>     Value:
>       !Join [
>         ",",
>         [!Ref PublicSubnet, !If [DoAz2, !Ref PublicSubnet2, !Ref "AWS::NoValue"], !If [DoAz3, !Ref PublicSubnet3, !Ref "AWS::NoValue"]]
>       ]
>   PrivateSubnetIds:
>     Description: Subnet IDs of the private subnets.
>     Value:
>       !Join [
>         ",",
>         [!Ref PrivateSubnet, !If [DoAz2, !Ref PrivateSubnet2, !Ref "AWS::NoValue"], !If [DoAz3, !Ref PrivateSubnet3, !Ref "AWS::NoValue"]]
>       ]
>   PublicRouteTableId:
>     Description: Public Route table ID
>     Value: !Ref PublicRouteTable
>   PrivateRouteTableIds:
>     Description: Private Route table IDs
>     Value:
>       !Join [
>         ",",
>         [
>           !Join ["=", [
>             !Select [0, "Fn::GetAZs": !Ref "AWS::Region"],
>             !Ref PrivateRouteTable
>           ]],
>           !If [DoAz2,
>                !Join ["=", [!Select [1, "Fn::GetAZs": !Ref "AWS::Region"], !Ref PrivateRouteTable2]],
>                !Ref "AWS::NoValue"
>           ],
>           !If [DoAz3,
>                !Join ["=", [!Select [2, "Fn::GetAZs": !Ref "AWS::Region"], !Ref PrivateRouteTable3]],
>                !Ref "AWS::NoValue"
>           ]
>         ]
>       ]</programlisting>
28980c29634,30031
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/02_cluster_infra.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Network Elements (Route53 &amp; LBs)
> 
> Parameters:
>   ClusterName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Cluster name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, representative cluster name to use for host names and other identifying names.
>     Type: String
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag cloud resources and identify items owned or used by the cluster.
>     Type: String
>   HostedZoneId:
>     Description: The Route53 public zone ID to register the targets with, such as Z21IXYZABCZ2A4.
>     Type: String
>   HostedZoneName:
>     Description: The Route53 zone to register the targets with, such as example.com. Omit the trailing period.
>     Type: String
>     Default: "example.com"
>   PublicSubnets:
>     Description: The internet-facing subnets.
>     Type: List&lt;AWS::EC2::Subnet::Id&gt;
>   PrivateSubnets:
>     Description: The internal subnets.
>     Type: List&lt;AWS::EC2::Subnet::Id&gt;
>   VpcId:
>     Description: The VPC-scoped resources will belong to this VPC.
>     Type: AWS::EC2::VPC::Id
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - ClusterName
>       - InfrastructureName
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcId
>       - PublicSubnets
>       - PrivateSubnets
>     - Label:
>         default: "DNS"
>       Parameters:
>       - HostedZoneName
>       - HostedZoneId
>     ParameterLabels:
>       ClusterName:
>         default: "Cluster Name"
>       InfrastructureName:
>         default: "Infrastructure Name"
>       VpcId:
>         default: "VPC ID"
>       PublicSubnets:
>         default: "Public Subnets"
>       PrivateSubnets:
>         default: "Private Subnets"
>       HostedZoneName:
>         default: "Public Hosted Zone Name"
>       HostedZoneId:
>         default: "Public Hosted Zone ID"
> 
> Resources:
>   ExtApiElb:
>     Type: AWS::ElasticLoadBalancingV2::LoadBalancer
>     Properties:
>       Name: !Join ["-", [!Ref InfrastructureName, "ext"]]
>       IpAddressType: ipv4
>       Subnets: !Ref PublicSubnets
>       Type: network
> 
>   IntApiElb:
>     Type: AWS::ElasticLoadBalancingV2::LoadBalancer
>     Properties:
>       Name: !Join ["-", [!Ref InfrastructureName, "int"]]
>       Scheme: internal
>       IpAddressType: ipv4
>       Subnets: !Ref PrivateSubnets
>       Type: network
> 
>   IntDns:
>     Type: "AWS::Route53::HostedZone"
>     Properties:
>       HostedZoneConfig:
>         Comment: "Managed by CloudFormation"
>       Name: !Join [".", [!Ref ClusterName, !Ref HostedZoneName]]
>       HostedZoneTags:
>       - Key: Name
>         Value: !Join ["-", [!Ref InfrastructureName, "int"]]
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "owned"
>       VPCs:
>       - VPCId: !Ref VpcId
>         VPCRegion: !Ref "AWS::Region"
> 
>   ExternalApiServerRecord:
>     Type: AWS::Route53::RecordSetGroup
>     Properties:
>       Comment: Alias record for the API server
>       HostedZoneId: !Ref HostedZoneId
>       RecordSets:
>       - Name:
>           !Join [
>             ".",
>             ["api", !Ref ClusterName, !Join ["", [!Ref HostedZoneName, "."]]],
>           ]
>         Type: A
>         AliasTarget:
>           HostedZoneId: !GetAtt ExtApiElb.CanonicalHostedZoneID
>           DNSName: !GetAtt ExtApiElb.DNSName
> 
>   InternalApiServerRecord:
>     Type: AWS::Route53::RecordSetGroup
>     Properties:
>       Comment: Alias record for the API server
>       HostedZoneId: !Ref IntDns
>       RecordSets:
>       - Name:
>           !Join [
>             ".",
>             ["api", !Ref ClusterName, !Join ["", [!Ref HostedZoneName, "."]]],
>           ]
>         Type: A
>         AliasTarget:
>           HostedZoneId: !GetAtt IntApiElb.CanonicalHostedZoneID
>           DNSName: !GetAtt IntApiElb.DNSName
>       - Name:
>           !Join [
>             ".",
>             ["api-int", !Ref ClusterName, !Join ["", [!Ref HostedZoneName, "."]]],
>           ]
>         Type: A
>         AliasTarget:
>           HostedZoneId: !GetAtt IntApiElb.CanonicalHostedZoneID
>           DNSName: !GetAtt IntApiElb.DNSName
> 
>   ExternalApiListener:
>     Type: AWS::ElasticLoadBalancingV2::Listener
>     Properties:
>       DefaultActions:
>       - Type: forward
>         TargetGroupArn:
>           Ref: ExternalApiTargetGroup
>       LoadBalancerArn:
>         Ref: ExtApiElb
>       Port: 6443
>       Protocol: TCP
> 
>   ExternalApiTargetGroup:
>     Type: AWS::ElasticLoadBalancingV2::TargetGroup
>     Properties:
>       HealthCheckIntervalSeconds: 10
>       HealthCheckPath: "/readyz"
>       HealthCheckPort: 6443
>       HealthCheckProtocol: HTTPS
>       HealthyThresholdCount: 2
>       UnhealthyThresholdCount: 2
>       Port: 6443
>       Protocol: TCP
>       TargetType: ip
>       VpcId:
>         Ref: VpcId
>       TargetGroupAttributes:
>       - Key: deregistration_delay.timeout_seconds
>         Value: 60
> 
>   InternalApiListener:
>     Type: AWS::ElasticLoadBalancingV2::Listener
>     Properties:
>       DefaultActions:
>       - Type: forward
>         TargetGroupArn:
>           Ref: InternalApiTargetGroup
>       LoadBalancerArn:
>         Ref: IntApiElb
>       Port: 6443
>       Protocol: TCP
> 
>   InternalApiTargetGroup:
>     Type: AWS::ElasticLoadBalancingV2::TargetGroup
>     Properties:
>       HealthCheckIntervalSeconds: 10
>       HealthCheckPath: "/readyz"
>       HealthCheckPort: 6443
>       HealthCheckProtocol: HTTPS
>       HealthyThresholdCount: 2
>       UnhealthyThresholdCount: 2
>       Port: 6443
>       Protocol: TCP
>       TargetType: ip
>       VpcId:
>         Ref: VpcId
>       TargetGroupAttributes:
>       - Key: deregistration_delay.timeout_seconds
>         Value: 60
> 
>   InternalServiceInternalListener:
>     Type: AWS::ElasticLoadBalancingV2::Listener
>     Properties:
>       DefaultActions:
>       - Type: forward
>         TargetGroupArn:
>           Ref: InternalServiceTargetGroup
>       LoadBalancerArn:
>         Ref: IntApiElb
>       Port: 22623
>       Protocol: TCP
> 
>   InternalServiceTargetGroup:
>     Type: AWS::ElasticLoadBalancingV2::TargetGroup
>     Properties:
>       HealthCheckIntervalSeconds: 10
>       HealthCheckPath: "/healthz"
>       HealthCheckPort: 22623
>       HealthCheckProtocol: HTTPS
>       HealthyThresholdCount: 2
>       UnhealthyThresholdCount: 2
>       Port: 22623
>       Protocol: TCP
>       TargetType: ip
>       VpcId:
>         Ref: VpcId
>       TargetGroupAttributes:
>       - Key: deregistration_delay.timeout_seconds
>         Value: 60
> 
>   RegisterTargetLambdaIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       RoleName: !Join ["-", [!Ref InfrastructureName, "nlb", "lambda", "role"]]
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "lambda.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Path: "/"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "master", "policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action:
>               [
>                 "elasticloadbalancing:RegisterTargets",
>                 "elasticloadbalancing:DeregisterTargets",
>               ]
>             Resource: !Ref InternalApiTargetGroup
>           - Effect: "Allow"
>             Action:
>               [
>                 "elasticloadbalancing:RegisterTargets",
>                 "elasticloadbalancing:DeregisterTargets",
>               ]
>             Resource: !Ref InternalServiceTargetGroup
>           - Effect: "Allow"
>             Action:
>               [
>                 "elasticloadbalancing:RegisterTargets",
>                 "elasticloadbalancing:DeregisterTargets",
>               ]
>             Resource: !Ref ExternalApiTargetGroup
> 
>   RegisterNlbIpTargets:
>     Type: "AWS::Lambda::Function"
>     Properties:
>       Handler: "index.handler"
>       Role:
>         Fn::GetAtt:
>         - "RegisterTargetLambdaIamRole"
>         - "Arn"
>       Code:
>         ZipFile: |
>           import json
>           import boto3
>           import cfnresponse
>           def handler(event, context):
>             elb = boto3.client('elbv2')
>             if event['RequestType'] == 'Delete':
>               elb.deregister_targets(TargetGroupArn=event['ResourceProperties']['TargetArn'],Targets=[{'Id': event['ResourceProperties']['TargetIp']}])
>             elif event['RequestType'] == 'Create':
>               elb.register_targets(TargetGroupArn=event['ResourceProperties']['TargetArn'],Targets=[{'Id': event['ResourceProperties']['TargetIp']}])
>             responseData = {}
>             cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, event['ResourceProperties']['TargetArn']+event['ResourceProperties']['TargetIp'])
>       Runtime: "python3.8"
>       Timeout: 120
> 
>   RegisterSubnetTagsLambdaIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       RoleName: !Join ["-", [!Ref InfrastructureName, "subnet-tags-lambda-role"]]
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "lambda.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Path: "/"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "subnet-tagging-policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action:
>               [
>                 "ec2:DeleteTags",
>                 "ec2:CreateTags"
>               ]
>             Resource: "arn:aws:ec2:*:*:subnet/*"
>           - Effect: "Allow"
>             Action:
>               [
>                 "ec2:DescribeSubnets",
>                 "ec2:DescribeTags"
>               ]
>             Resource: "*"
> 
>   RegisterSubnetTags:
>     Type: "AWS::Lambda::Function"
>     Properties:
>       Handler: "index.handler"
>       Role:
>         Fn::GetAtt:
>         - "RegisterSubnetTagsLambdaIamRole"
>         - "Arn"
>       Code:
>         ZipFile: |
>           import json
>           import boto3
>           import cfnresponse
>           def handler(event, context):
>             ec2_client = boto3.client('ec2')
>             if event['RequestType'] == 'Delete':
>               for subnet_id in event['ResourceProperties']['Subnets']:
>                 ec2_client.delete_tags(Resources=[subnet_id], Tags=[{'Key': 'kubernetes.io/cluster/' + event['ResourceProperties']['InfrastructureName']}]);
>             elif event['RequestType'] == 'Create':
>               for subnet_id in event['ResourceProperties']['Subnets']:
>                 ec2_client.create_tags(Resources=[subnet_id], Tags=[{'Key': 'kubernetes.io/cluster/' + event['ResourceProperties']['InfrastructureName'], 'Value': 'shared'}]);
>             responseData = {}
>             cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, event['ResourceProperties']['InfrastructureName']+event['ResourceProperties']['Subnets'][0])
>       Runtime: "python3.8"
>       Timeout: 120
> 
>   RegisterPublicSubnetTags:
>     Type: Custom::SubnetRegister
>     Properties:
>       ServiceToken: !GetAtt RegisterSubnetTags.Arn
>       InfrastructureName: !Ref InfrastructureName
>       Subnets: !Ref PublicSubnets
> 
>   RegisterPrivateSubnetTags:
>     Type: Custom::SubnetRegister
>     Properties:
>       ServiceToken: !GetAtt RegisterSubnetTags.Arn
>       InfrastructureName: !Ref InfrastructureName
>       Subnets: !Ref PrivateSubnets
> 
> Outputs:
>   PrivateHostedZoneId:
>     Description: Hosted zone ID for the private DNS, which is required for private records.
>     Value: !Ref IntDns
>   ExternalApiLoadBalancerName:
>     Description: Full name of the external API load balancer.
>     Value: !GetAtt ExtApiElb.LoadBalancerFullName
>   InternalApiLoadBalancerName:
>     Description: Full name of the internal API load balancer.
>     Value: !GetAtt IntApiElb.LoadBalancerFullName
>   ApiServerDnsName:
>     Description: Full hostname of the API server, which is required for the Ignition config files.
>     Value: !Join [".", ["api-int", !Ref ClusterName, !Ref HostedZoneName]]
>   RegisterNlbIpTargetsLambda:
>     Description: Lambda ARN useful to help register or deregister IP targets for these load balancers.
>     Value: !GetAtt RegisterNlbIpTargets.Arn
>   ExternalApiTargetGroupArn:
>     Description: ARN of the external API target group.
>     Value: !Ref ExternalApiTargetGroup
>   InternalApiTargetGroupArn:
>     Description: ARN of the internal API target group.
>     Value: !Ref InternalApiTargetGroup
>   InternalServiceTargetGroupArn:
>     Description: ARN of the internal service target group.
>     Value: !Ref InternalServiceTargetGroup</programlisting>
29175c30226,30823
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/03_cluster_security.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Security Elements (Security Groups &amp; IAM)
> 
> Parameters:
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag cloud resources and identify items owned or used by the cluster.
>     Type: String
>   VpcCidr:
>     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
>     ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
>     Default: 10.0.0.0/16
>     Description: CIDR block for VPC.
>     Type: String
>   VpcId:
>     Description: The VPC-scoped resources will belong to this VPC.
>     Type: AWS::EC2::VPC::Id
>   PrivateSubnets:
>     Description: The internal subnets.
>     Type: List&lt;AWS::EC2::Subnet::Id&gt;
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - InfrastructureName
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcId
>       - VpcCidr
>       - PrivateSubnets
>     ParameterLabels:
>       InfrastructureName:
>         default: "Infrastructure Name"
>       VpcId:
>         default: "VPC ID"
>       VpcCidr:
>         default: "VPC CIDR"
>       PrivateSubnets:
>         default: "Private Subnets"
> 
> Resources:
>   MasterSecurityGroup:
>     Type: AWS::EC2::SecurityGroup
>     Properties:
>       GroupDescription: Cluster Master Security Group
>       SecurityGroupIngress:
>       - IpProtocol: icmp
>         FromPort: 0
>         ToPort: 0
>         CidrIp: !Ref VpcCidr
>       - IpProtocol: tcp
>         FromPort: 22
>         ToPort: 22
>         CidrIp: !Ref VpcCidr
>       - IpProtocol: tcp
>         ToPort: 6443
>         FromPort: 6443
>         CidrIp: !Ref VpcCidr
>       - IpProtocol: tcp
>         FromPort: 22623
>         ToPort: 22623
>         CidrIp: !Ref VpcCidr
>       VpcId: !Ref VpcId
> 
>   WorkerSecurityGroup:
>     Type: AWS::EC2::SecurityGroup
>     Properties:
>       GroupDescription: Cluster Worker Security Group
>       SecurityGroupIngress:
>       - IpProtocol: icmp
>         FromPort: 0
>         ToPort: 0
>         CidrIp: !Ref VpcCidr
>       - IpProtocol: tcp
>         FromPort: 22
>         ToPort: 22
>         CidrIp: !Ref VpcCidr
>       VpcId: !Ref VpcId
> 
>   MasterIngressEtcd:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: etcd
>       FromPort: 2379
>       ToPort: 2380
>       IpProtocol: tcp
> 
>   MasterIngressVxlan:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Vxlan packets
>       FromPort: 4789
>       ToPort: 4789
>       IpProtocol: udp
> 
>   MasterIngressWorkerVxlan:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Vxlan packets
>       FromPort: 4789
>       ToPort: 4789
>       IpProtocol: udp
> 
>   MasterIngressGeneve:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Geneve packets
>       FromPort: 6081
>       ToPort: 6081
>       IpProtocol: udp
> 
>   MasterIngressWorkerGeneve:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Geneve packets
>       FromPort: 6081
>       ToPort: 6081
>       IpProtocol: udp
> 
>   MasterIngressIpsecIke:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec IKE packets
>       FromPort: 500
>       ToPort: 500
>       IpProtocol: udp
> 
>   MasterIngressIpsecNat:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec NAT-T packets
>       FromPort: 4500
>       ToPort: 4500
>       IpProtocol: udp
> 
>   MasterIngressIpsecEsp:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec ESP packets
>       IpProtocol: 50
> 
>   MasterIngressWorkerIpsecIke:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec IKE packets
>       FromPort: 500
>       ToPort: 500
>       IpProtocol: udp
> 
>   MasterIngressWorkerIpsecNat:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec NAT-T packets
>       FromPort: 4500
>       ToPort: 4500
>       IpProtocol: udp
> 
>   MasterIngressWorkerIpsecEsp:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec ESP packets
>       IpProtocol: 50
> 
>   MasterIngressInternal:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: tcp
> 
>   MasterIngressWorkerInternal:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: tcp
> 
>   MasterIngressInternalUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: udp
> 
>   MasterIngressWorkerInternalUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: udp
> 
>   MasterIngressKube:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes kubelet, scheduler and controller manager
>       FromPort: 10250
>       ToPort: 10259
>       IpProtocol: tcp
> 
>   MasterIngressWorkerKube:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes kubelet, scheduler and controller manager
>       FromPort: 10250
>       ToPort: 10259
>       IpProtocol: tcp
> 
>   MasterIngressIngressServices:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: tcp
> 
>   MasterIngressWorkerIngressServices:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: tcp
> 
>   MasterIngressIngressServicesUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: udp
> 
>   MasterIngressWorkerIngressServicesUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: udp
> 
>   WorkerIngressVxlan:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Vxlan packets
>       FromPort: 4789
>       ToPort: 4789
>       IpProtocol: udp
> 
>   WorkerIngressMasterVxlan:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Vxlan packets
>       FromPort: 4789
>       ToPort: 4789
>       IpProtocol: udp
> 
>   WorkerIngressGeneve:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Geneve packets
>       FromPort: 6081
>       ToPort: 6081
>       IpProtocol: udp
> 
>   WorkerIngressMasterGeneve:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Geneve packets
>       FromPort: 6081
>       ToPort: 6081
>       IpProtocol: udp
> 
>   WorkerIngressIpsecIke:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec IKE packets
>       FromPort: 500
>       ToPort: 500
>       IpProtocol: udp
> 
>   WorkerIngressIpsecNat:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec NAT-T packets
>       FromPort: 4500
>       ToPort: 4500
>       IpProtocol: udp
> 
>   WorkerIngressIpsecEsp:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec ESP packets
>       IpProtocol: 50
> 
>   WorkerIngressMasterIpsecIke:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec IKE packets
>       FromPort: 500
>       ToPort: 500
>       IpProtocol: udp
> 
>   WorkerIngressMasterIpsecNat:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec NAT-T packets
>       FromPort: 4500
>       ToPort: 4500
>       IpProtocol: udp
> 
>   WorkerIngressMasterIpsecEsp:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec ESP packets
>       IpProtocol: 50
> 
>   WorkerIngressInternal:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: tcp
> 
>   WorkerIngressMasterInternal:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: tcp
> 
>   WorkerIngressInternalUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: udp
> 
>   WorkerIngressMasterInternalUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: udp
> 
>   WorkerIngressKube:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes secure kubelet port
>       FromPort: 10250
>       ToPort: 10250
>       IpProtocol: tcp
> 
>   WorkerIngressWorkerKube:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal Kubernetes communication
>       FromPort: 10250
>       ToPort: 10250
>       IpProtocol: tcp
> 
>   WorkerIngressIngressServices:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: tcp
> 
>   WorkerIngressMasterIngressServices:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: tcp
> 
>   WorkerIngressIngressServicesUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: udp
> 
>   WorkerIngressMasterIngressServicesUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: udp
> 
>   MasterIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "ec2.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "master", "policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action:
>             - "ec2:AttachVolume"
>             - "ec2:AuthorizeSecurityGroupIngress"
>             - "ec2:CreateSecurityGroup"
>             - "ec2:CreateTags"
>             - "ec2:CreateVolume"
>             - "ec2:DeleteSecurityGroup"
>             - "ec2:DeleteVolume"
>             - "ec2:Describe*"
>             - "ec2:DetachVolume"
>             - "ec2:ModifyInstanceAttribute"
>             - "ec2:ModifyVolume"
>             - "ec2:RevokeSecurityGroupIngress"
>             - "elasticloadbalancing:AddTags"
>             - "elasticloadbalancing:AttachLoadBalancerToSubnets"
>             - "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"
>             - "elasticloadbalancing:CreateListener"
>             - "elasticloadbalancing:CreateLoadBalancer"
>             - "elasticloadbalancing:CreateLoadBalancerPolicy"
>             - "elasticloadbalancing:CreateLoadBalancerListeners"
>             - "elasticloadbalancing:CreateTargetGroup"
>             - "elasticloadbalancing:ConfigureHealthCheck"
>             - "elasticloadbalancing:DeleteListener"
>             - "elasticloadbalancing:DeleteLoadBalancer"
>             - "elasticloadbalancing:DeleteLoadBalancerListeners"
>             - "elasticloadbalancing:DeleteTargetGroup"
>             - "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
>             - "elasticloadbalancing:DeregisterTargets"
>             - "elasticloadbalancing:Describe*"
>             - "elasticloadbalancing:DetachLoadBalancerFromSubnets"
>             - "elasticloadbalancing:ModifyListener"
>             - "elasticloadbalancing:ModifyLoadBalancerAttributes"
>             - "elasticloadbalancing:ModifyTargetGroup"
>             - "elasticloadbalancing:ModifyTargetGroupAttributes"
>             - "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
>             - "elasticloadbalancing:RegisterTargets"
>             - "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
>             - "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
>             - "kms:DescribeKey"
>             Resource: "*"
> 
>   MasterInstanceProfile:
>     Type: "AWS::IAM::InstanceProfile"
>     Properties:
>       Roles:
>       - Ref: "MasterIamRole"
> 
>   WorkerIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "ec2.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "worker", "policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action:
>             - "ec2:DescribeInstances"
>             - "ec2:DescribeRegions"
>             Resource: "*"
> 
>   WorkerInstanceProfile:
>     Type: "AWS::IAM::InstanceProfile"
>     Properties:
>       Roles:
>       - Ref: "WorkerIamRole"
> 
> Outputs:
>   MasterSecurityGroupId:
>     Description: Master Security Group ID
>     Value: !GetAtt MasterSecurityGroup.GroupId
> 
>   WorkerSecurityGroupId:
>     Description: Worker Security Group ID
>     Value: !GetAtt WorkerSecurityGroup.GroupId
> 
>   MasterInstanceProfile:
>     Description: Master IAM Instance Profile
>     Value: !Ref MasterInstanceProfile
> 
>   WorkerInstanceProfile:
>     Description: Worker IAM Instance Profile
>     Value: !Ref WorkerInstanceProfile</programlisting>
29977c31625,31839
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/04_cluster_bootstrap.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Bootstrap (EC2 Instance, Security Groups and IAM)
> 
> Parameters:
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag cloud resources and identify items owned or used by the cluster.
>     Type: String
>   RhcosAmi:
>     Description: Current Red Hat Enterprise Linux CoreOS AMI to use for bootstrap.
>     Type: AWS::EC2::Image::Id
>   AllowedBootstrapSshCidr:
>     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|1[0-9]|2[0-9]|3[0-2]))$
>     ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-32.
>     Default: 0.0.0.0/0
>     Description: CIDR block to allow SSH access to the bootstrap node.
>     Type: String
>   PublicSubnet:
>     Description: The public subnet to launch the bootstrap node into.
>     Type: AWS::EC2::Subnet::Id
>   MasterSecurityGroupId:
>     Description: The master security group ID for registering temporary rules.
>     Type: AWS::EC2::SecurityGroup::Id
>   VpcId:
>     Description: The VPC-scoped resources will belong to this VPC.
>     Type: AWS::EC2::VPC::Id
>   BootstrapIgnitionLocation:
>     Default: s3://my-s3-bucket/bootstrap.ign
>     Description: Ignition config file location.
>     Type: String
>   AutoRegisterELB:
>     Default: "yes"
>     AllowedValues:
>     - "yes"
>     - "no"
>     Description: Do you want to invoke NLB registration, which requires a Lambda ARN parameter?
>     Type: String
>   RegisterNlbIpTargetsLambdaArn:
>     Description: ARN for NLB IP target registration lambda.
>     Type: String
>   ExternalApiTargetGroupArn:
>     Description: ARN for external API load balancer target group.
>     Type: String
>   InternalApiTargetGroupArn:
>     Description: ARN for internal API load balancer target group.
>     Type: String
>   InternalServiceTargetGroupArn:
>     Description: ARN for internal service load balancer target group.
>     Type: String
>   BootstrapInstanceType:
>     Description: Instance type for the bootstrap EC2 instance
>     Default: "i3.large"
>     Type: String
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - InfrastructureName
>     - Label:
>         default: "Host Information"
>       Parameters:
>       - RhcosAmi
>       - BootstrapIgnitionLocation
>       - MasterSecurityGroupId
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcId
>       - AllowedBootstrapSshCidr
>       - PublicSubnet
>     - Label:
>         default: "Load Balancer Automation"
>       Parameters:
>       - AutoRegisterELB
>       - RegisterNlbIpTargetsLambdaArn
>       - ExternalApiTargetGroupArn
>       - InternalApiTargetGroupArn
>       - InternalServiceTargetGroupArn
>     ParameterLabels:
>       InfrastructureName:
>         default: "Infrastructure Name"
>       VpcId:
>         default: "VPC ID"
>       AllowedBootstrapSshCidr:
>         default: "Allowed SSH Source"
>       PublicSubnet:
>         default: "Public Subnet"
>       RhcosAmi:
>         default: "Red Hat Enterprise Linux CoreOS AMI ID"
>       BootstrapIgnitionLocation:
>         default: "Bootstrap Ignition Source"
>       MasterSecurityGroupId:
>         default: "Master Security Group ID"
>       AutoRegisterELB:
>         default: "Use Provided ELB Automation"
> 
> Conditions:
>   DoRegistration: !Equals ["yes", !Ref AutoRegisterELB]
> 
> Resources:
>   BootstrapIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "ec2.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Path: "/"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "bootstrap", "policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action: "ec2:Describe*"
>             Resource: "*"
>           - Effect: "Allow"
>             Action: "ec2:AttachVolume"
>             Resource: "*"
>           - Effect: "Allow"
>             Action: "ec2:DetachVolume"
>             Resource: "*"
>           - Effect: "Allow"
>             Action: "s3:GetObject"
>             Resource: "*"
> 
>   BootstrapInstanceProfile:
>     Type: "AWS::IAM::InstanceProfile"
>     Properties:
>       Path: "/"
>       Roles:
>       - Ref: "BootstrapIamRole"
> 
>   BootstrapSecurityGroup:
>     Type: AWS::EC2::SecurityGroup
>     Properties:
>       GroupDescription: Cluster Bootstrap Security Group
>       SecurityGroupIngress:
>       - IpProtocol: tcp
>         FromPort: 22
>         ToPort: 22
>         CidrIp: !Ref AllowedBootstrapSshCidr
>       - IpProtocol: tcp
>         ToPort: 19531
>         FromPort: 19531
>         CidrIp: 0.0.0.0/0
>       VpcId: !Ref VpcId
> 
>   BootstrapInstance:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       IamInstanceProfile: !Ref BootstrapInstanceProfile
>       InstanceType: !Ref BootstrapInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "true"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "BootstrapSecurityGroup"
>         - !Ref "MasterSecurityGroupId"
>         SubnetId: !Ref "PublicSubnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"replace":{"source":"${S3Loc}"}},"version":"3.1.0"}}'
>         - {
>           S3Loc: !Ref BootstrapIgnitionLocation
>         }
> 
>   RegisterBootstrapApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref ExternalApiTargetGroupArn
>       TargetIp: !GetAtt BootstrapInstance.PrivateIp
> 
>   RegisterBootstrapInternalApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalApiTargetGroupArn
>       TargetIp: !GetAtt BootstrapInstance.PrivateIp
> 
>   RegisterBootstrapInternalServiceTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalServiceTargetGroupArn
>       TargetIp: !GetAtt BootstrapInstance.PrivateIp
> 
> Outputs:
>   BootstrapInstanceId:
>     Description: Bootstrap Instance ID.
>     Value: !Ref BootstrapInstance
> 
>   BootstrapPublicIp:
>     Description: The bootstrap node public IP address.
>     Value: !GetAtt BootstrapInstance.PublicIp
> 
>   BootstrapPrivateIp:
>     Description: The bootstrap node private IP address.
>     Value: !GetAtt BootstrapInstance.PrivateIp</programlisting>
30282c32144,32442
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/05_cluster_master_nodes.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Node Launch (EC2 master instances)
> 
> Parameters:
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag nodes for the kubelet cloud provider.
>     Type: String
>   RhcosAmi:
>     Description: Current Red Hat Enterprise Linux CoreOS AMI to use for bootstrap.
>     Type: AWS::EC2::Image::Id
>   AutoRegisterDNS:
>     Default: ""
>     Description: unused
>     Type: String
>   PrivateHostedZoneId:
>     Default: ""
>     Description: unused
>     Type: String
>   PrivateHostedZoneName:
>     Default: ""
>     Description: unused
>     Type: String
>   Master0Subnet:
>     Description: The subnets, recommend private, to launch the master nodes into.
>     Type: AWS::EC2::Subnet::Id
>   Master1Subnet:
>     Description: The subnets, recommend private, to launch the master nodes into.
>     Type: AWS::EC2::Subnet::Id
>   Master2Subnet:
>     Description: The subnets, recommend private, to launch the master nodes into.
>     Type: AWS::EC2::Subnet::Id
>   MasterSecurityGroupId:
>     Description: The master security group ID to associate with master nodes.
>     Type: AWS::EC2::SecurityGroup::Id
>   IgnitionLocation:
>     Default: https://api-int.$CLUSTER_NAME.$DOMAIN:22623/config/master
>     Description: Ignition config file location.
>     Type: String
>   CertificateAuthorities:
>     Default: data:text/plain;charset=utf-8;base64,ABC...xYz==
>     Description: Base64 encoded certificate authority string to use.
>     Type: String
>   MasterInstanceProfileName:
>     Description: IAM profile to associate with master nodes.
>     Type: String
>   MasterInstanceType:
>     Default: m5.xlarge
>     Type: String
> 
>   AutoRegisterELB:
>     Default: "yes"
>     AllowedValues:
>     - "yes"
>     - "no"
>     Description: Do you want to invoke NLB registration, which requires a Lambda ARN parameter?
>     Type: String
>   RegisterNlbIpTargetsLambdaArn:
>     Description: ARN for NLB IP target registration lambda. Supply the value from the cluster infrastructure or select "no" for AutoRegisterELB.
>     Type: String
>   ExternalApiTargetGroupArn:
>     Description: ARN for external API load balancer target group. Supply the value from the cluster infrastructure or select "no" for AutoRegisterELB.
>     Type: String
>   InternalApiTargetGroupArn:
>     Description: ARN for internal API load balancer target group. Supply the value from the cluster infrastructure or select "no" for AutoRegisterELB.
>     Type: String
>   InternalServiceTargetGroupArn:
>     Description: ARN for internal service load balancer target group. Supply the value from the cluster infrastructure or select "no" for AutoRegisterELB.
>     Type: String
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - InfrastructureName
>     - Label:
>         default: "Host Information"
>       Parameters:
>       - MasterInstanceType
>       - RhcosAmi
>       - IgnitionLocation
>       - CertificateAuthorities
>       - MasterSecurityGroupId
>       - MasterInstanceProfileName
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcId
>       - AllowedBootstrapSshCidr
>       - Master0Subnet
>       - Master1Subnet
>       - Master2Subnet
>     - Label:
>         default: "Load Balancer Automation"
>       Parameters:
>       - AutoRegisterELB
>       - RegisterNlbIpTargetsLambdaArn
>       - ExternalApiTargetGroupArn
>       - InternalApiTargetGroupArn
>       - InternalServiceTargetGroupArn
>     ParameterLabels:
>       InfrastructureName:
>         default: "Infrastructure Name"
>       VpcId:
>         default: "VPC ID"
>       Master0Subnet:
>         default: "Master-0 Subnet"
>       Master1Subnet:
>         default: "Master-1 Subnet"
>       Master2Subnet:
>         default: "Master-2 Subnet"
>       MasterInstanceType:
>         default: "Master Instance Type"
>       MasterInstanceProfileName:
>         default: "Master Instance Profile Name"
>       RhcosAmi:
>         default: "Red Hat Enterprise Linux CoreOS AMI ID"
>       BootstrapIgnitionLocation:
>         default: "Master Ignition Source"
>       CertificateAuthorities:
>         default: "Ignition CA String"
>       MasterSecurityGroupId:
>         default: "Master Security Group ID"
>       AutoRegisterELB:
>         default: "Use Provided ELB Automation"
> 
> Conditions:
>   DoRegistration: !Equals ["yes", !Ref AutoRegisterELB]
> 
> Resources:
>   Master0:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       BlockDeviceMappings:
>       - DeviceName: /dev/xvda
>         Ebs:
>           VolumeSize: "120"
>           VolumeType: "gp2"
>       IamInstanceProfile: !Ref MasterInstanceProfileName
>       InstanceType: !Ref MasterInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "false"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "MasterSecurityGroupId"
>         SubnetId: !Ref "Master0Subnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}'
>         - {
>           SOURCE: !Ref IgnitionLocation,
>           CA_BUNDLE: !Ref CertificateAuthorities,
>         }
>       Tags:
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "shared"
> 
>   RegisterMaster0:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref ExternalApiTargetGroupArn
>       TargetIp: !GetAtt Master0.PrivateIp
> 
>   RegisterMaster0InternalApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalApiTargetGroupArn
>       TargetIp: !GetAtt Master0.PrivateIp
> 
>   RegisterMaster0InternalServiceTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalServiceTargetGroupArn
>       TargetIp: !GetAtt Master0.PrivateIp
> 
>   Master1:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       BlockDeviceMappings:
>       - DeviceName: /dev/xvda
>         Ebs:
>           VolumeSize: "120"
>           VolumeType: "gp2"
>       IamInstanceProfile: !Ref MasterInstanceProfileName
>       InstanceType: !Ref MasterInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "false"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "MasterSecurityGroupId"
>         SubnetId: !Ref "Master1Subnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}'
>         - {
>           SOURCE: !Ref IgnitionLocation,
>           CA_BUNDLE: !Ref CertificateAuthorities,
>         }
>       Tags:
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "shared"
> 
>   RegisterMaster1:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref ExternalApiTargetGroupArn
>       TargetIp: !GetAtt Master1.PrivateIp
> 
>   RegisterMaster1InternalApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalApiTargetGroupArn
>       TargetIp: !GetAtt Master1.PrivateIp
> 
>   RegisterMaster1InternalServiceTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalServiceTargetGroupArn
>       TargetIp: !GetAtt Master1.PrivateIp
> 
>   Master2:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       BlockDeviceMappings:
>       - DeviceName: /dev/xvda
>         Ebs:
>           VolumeSize: "120"
>           VolumeType: "gp2"
>       IamInstanceProfile: !Ref MasterInstanceProfileName
>       InstanceType: !Ref MasterInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "false"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "MasterSecurityGroupId"
>         SubnetId: !Ref "Master2Subnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}'
>         - {
>           SOURCE: !Ref IgnitionLocation,
>           CA_BUNDLE: !Ref CertificateAuthorities,
>         }
>       Tags:
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "shared"
> 
>   RegisterMaster2:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref ExternalApiTargetGroupArn
>       TargetIp: !GetAtt Master2.PrivateIp
> 
>   RegisterMaster2InternalApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalApiTargetGroupArn
>       TargetIp: !GetAtt Master2.PrivateIp
> 
>   RegisterMaster2InternalServiceTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalServiceTargetGroupArn
>       TargetIp: !GetAtt Master2.PrivateIp
> 
> Outputs:
>   PrivateIPs:
>     Description: The control-plane node private IP addresses.
>     Value:
>       !Join [
>         ",",
>         [!GetAtt Master0.PrivateIp, !GetAtt Master1.PrivateIp, !GetAtt Master2.PrivateIp]
>       ]</programlisting>
30497c32657,32762
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/06_cluster_worker_node.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Node Launch (EC2 worker instance)
> 
> Parameters:
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag nodes for the kubelet cloud provider.
>     Type: String
>   RhcosAmi:
>     Description: Current Red Hat Enterprise Linux CoreOS AMI to use for bootstrap.
>     Type: AWS::EC2::Image::Id
>   Subnet:
>     Description: The subnets, recommend private, to launch the master nodes into.
>     Type: AWS::EC2::Subnet::Id
>   WorkerSecurityGroupId:
>     Description: The master security group ID to associate with master nodes.
>     Type: AWS::EC2::SecurityGroup::Id
>   IgnitionLocation:
>     Default: https://api-int.$CLUSTER_NAME.$DOMAIN:22623/config/worker
>     Description: Ignition config file location.
>     Type: String
>   CertificateAuthorities:
>     Default: data:text/plain;charset=utf-8;base64,ABC...xYz==
>     Description: Base64 encoded certificate authority string to use.
>     Type: String
>   WorkerInstanceProfileName:
>     Description: IAM profile to associate with master nodes.
>     Type: String
>   WorkerInstanceType:
>     Default: m5.large
>     Type: String
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - InfrastructureName
>     - Label:
>         default: "Host Information"
>       Parameters:
>       - WorkerInstanceType
>       - RhcosAmi
>       - IgnitionLocation
>       - CertificateAuthorities
>       - WorkerSecurityGroupId
>       - WorkerInstanceProfileName
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - Subnet
>     ParameterLabels:
>       Subnet:
>         default: "Subnet"
>       InfrastructureName:
>         default: "Infrastructure Name"
>       WorkerInstanceType:
>         default: "Worker Instance Type"
>       WorkerInstanceProfileName:
>         default: "Worker Instance Profile Name"
>       RhcosAmi:
>         default: "Red Hat Enterprise Linux CoreOS AMI ID"
>       IgnitionLocation:
>         default: "Worker Ignition Source"
>       CertificateAuthorities:
>         default: "Ignition CA String"
>       WorkerSecurityGroupId:
>         default: "Worker Security Group ID"
> 
> Resources:
>   Worker0:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       BlockDeviceMappings:
>       - DeviceName: /dev/xvda
>         Ebs:
>           VolumeSize: "120"
>           VolumeType: "gp2"
>       IamInstanceProfile: !Ref WorkerInstanceProfileName
>       InstanceType: !Ref WorkerInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "false"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "WorkerSecurityGroupId"
>         SubnetId: !Ref "Subnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}'
>         - {
>           SOURCE: !Ref IgnitionLocation,
>           CA_BUNDLE: !Ref CertificateAuthorities,
>         }
>       Tags:
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "shared"
> 
> Outputs:
>   PrivateIP:
>     Description: The compute node private IP address.
>     Value: !GetAtt Worker0.PrivateIp</programlisting>
30631,30632c32896
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
30633a32898
> <title>Procedure</title>
30660,30661c32925
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
30662a32927
> <title>Procedure</title>
31321d33585
< 
31529,31530c33793
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
31531a33795
> <title>Procedure</title>
31558,31559c33822
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
31560a33824
> <title>Procedure</title>
33147d35410
< 
33372c35635,35681
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
33383c35692,35699
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/aws/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
35489c37805,38115
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/01_vpc.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for Best Practice VPC with 1-3 AZs
> 
> Parameters:
>   VpcCidr:
>     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
>     ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
>     Default: 10.0.0.0/16
>     Description: CIDR block for VPC.
>     Type: String
>   AvailabilityZoneCount:
>     ConstraintDescription: "The number of availability zones. (Min: 1, Max: 3)"
>     MinValue: 1
>     MaxValue: 3
>     Default: 1
>     Description: "How many AZs to create VPC subnets for. (Min: 1, Max: 3)"
>     Type: Number
>   SubnetBits:
>     ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/19-27.
>     MinValue: 5
>     MaxValue: 13
>     Default: 12
>     Description: "Size of each subnet to create within the availability zones. (Min: 5 = /27, Max: 13 = /19)"
>     Type: Number
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcCidr
>       - SubnetBits
>     - Label:
>         default: "Availability Zones"
>       Parameters:
>       - AvailabilityZoneCount
>     ParameterLabels:
>       AvailabilityZoneCount:
>         default: "Availability Zone Count"
>       VpcCidr:
>         default: "VPC CIDR"
>       SubnetBits:
>         default: "Bits Per Subnet"
> 
> Conditions:
>   DoAz3: !Equals [3, !Ref AvailabilityZoneCount]
>   DoAz2: !Or [!Equals [2, !Ref AvailabilityZoneCount], Condition: DoAz3]
> 
> Resources:
>   VPC:
>     Type: "AWS::EC2::VPC"
>     Properties:
>       EnableDnsSupport: "true"
>       EnableDnsHostnames: "true"
>       CidrBlock: !Ref VpcCidr
>   PublicSubnet:
>     Type: "AWS::EC2::Subnet"
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [0, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 0
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PublicSubnet2:
>     Type: "AWS::EC2::Subnet"
>     Condition: DoAz2
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [1, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 1
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PublicSubnet3:
>     Type: "AWS::EC2::Subnet"
>     Condition: DoAz3
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [2, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 2
>       - Fn::GetAZs: !Ref "AWS::Region"
>   InternetGateway:
>     Type: "AWS::EC2::InternetGateway"
>   GatewayToInternet:
>     Type: "AWS::EC2::VPCGatewayAttachment"
>     Properties:
>       VpcId: !Ref VPC
>       InternetGatewayId: !Ref InternetGateway
>   PublicRouteTable:
>     Type: "AWS::EC2::RouteTable"
>     Properties:
>       VpcId: !Ref VPC
>   PublicRoute:
>     Type: "AWS::EC2::Route"
>     DependsOn: GatewayToInternet
>     Properties:
>       RouteTableId: !Ref PublicRouteTable
>       DestinationCidrBlock: 0.0.0.0/0
>       GatewayId: !Ref InternetGateway
>   PublicSubnetRouteTableAssociation:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Properties:
>       SubnetId: !Ref PublicSubnet
>       RouteTableId: !Ref PublicRouteTable
>   PublicSubnetRouteTableAssociation2:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Condition: DoAz2
>     Properties:
>       SubnetId: !Ref PublicSubnet2
>       RouteTableId: !Ref PublicRouteTable
>   PublicSubnetRouteTableAssociation3:
>     Condition: DoAz3
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Properties:
>       SubnetId: !Ref PublicSubnet3
>       RouteTableId: !Ref PublicRouteTable
>   PrivateSubnet:
>     Type: "AWS::EC2::Subnet"
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [3, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 0
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PrivateRouteTable:
>     Type: "AWS::EC2::RouteTable"
>     Properties:
>       VpcId: !Ref VPC
>   PrivateSubnetRouteTableAssociation:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Properties:
>       SubnetId: !Ref PrivateSubnet
>       RouteTableId: !Ref PrivateRouteTable
>   NAT:
>     DependsOn:
>     - GatewayToInternet
>     Type: "AWS::EC2::NatGateway"
>     Properties:
>       AllocationId:
>         "Fn::GetAtt":
>         - EIP
>         - AllocationId
>       SubnetId: !Ref PublicSubnet
>   EIP:
>     Type: "AWS::EC2::EIP"
>     Properties:
>       Domain: vpc
>   Route:
>     Type: "AWS::EC2::Route"
>     Properties:
>       RouteTableId:
>         Ref: PrivateRouteTable
>       DestinationCidrBlock: 0.0.0.0/0
>       NatGatewayId:
>         Ref: NAT
>   PrivateSubnet2:
>     Type: "AWS::EC2::Subnet"
>     Condition: DoAz2
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [4, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 1
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PrivateRouteTable2:
>     Type: "AWS::EC2::RouteTable"
>     Condition: DoAz2
>     Properties:
>       VpcId: !Ref VPC
>   PrivateSubnetRouteTableAssociation2:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Condition: DoAz2
>     Properties:
>       SubnetId: !Ref PrivateSubnet2
>       RouteTableId: !Ref PrivateRouteTable2
>   NAT2:
>     DependsOn:
>     - GatewayToInternet
>     Type: "AWS::EC2::NatGateway"
>     Condition: DoAz2
>     Properties:
>       AllocationId:
>         "Fn::GetAtt":
>         - EIP2
>         - AllocationId
>       SubnetId: !Ref PublicSubnet2
>   EIP2:
>     Type: "AWS::EC2::EIP"
>     Condition: DoAz2
>     Properties:
>       Domain: vpc
>   Route2:
>     Type: "AWS::EC2::Route"
>     Condition: DoAz2
>     Properties:
>       RouteTableId:
>         Ref: PrivateRouteTable2
>       DestinationCidrBlock: 0.0.0.0/0
>       NatGatewayId:
>         Ref: NAT2
>   PrivateSubnet3:
>     Type: "AWS::EC2::Subnet"
>     Condition: DoAz3
>     Properties:
>       VpcId: !Ref VPC
>       CidrBlock: !Select [5, !Cidr [!Ref VpcCidr, 6, !Ref SubnetBits]]
>       AvailabilityZone: !Select
>       - 2
>       - Fn::GetAZs: !Ref "AWS::Region"
>   PrivateRouteTable3:
>     Type: "AWS::EC2::RouteTable"
>     Condition: DoAz3
>     Properties:
>       VpcId: !Ref VPC
>   PrivateSubnetRouteTableAssociation3:
>     Type: "AWS::EC2::SubnetRouteTableAssociation"
>     Condition: DoAz3
>     Properties:
>       SubnetId: !Ref PrivateSubnet3
>       RouteTableId: !Ref PrivateRouteTable3
>   NAT3:
>     DependsOn:
>     - GatewayToInternet
>     Type: "AWS::EC2::NatGateway"
>     Condition: DoAz3
>     Properties:
>       AllocationId:
>         "Fn::GetAtt":
>         - EIP3
>         - AllocationId
>       SubnetId: !Ref PublicSubnet3
>   EIP3:
>     Type: "AWS::EC2::EIP"
>     Condition: DoAz3
>     Properties:
>       Domain: vpc
>   Route3:
>     Type: "AWS::EC2::Route"
>     Condition: DoAz3
>     Properties:
>       RouteTableId:
>         Ref: PrivateRouteTable3
>       DestinationCidrBlock: 0.0.0.0/0
>       NatGatewayId:
>         Ref: NAT3
>   S3Endpoint:
>     Type: AWS::EC2::VPCEndpoint
>     Properties:
>       PolicyDocument:
>         Version: 2012-10-17
>         Statement:
>         - Effect: Allow
>           Principal: '*'
>           Action:
>           - '*'
>           Resource:
>           - '*'
>       RouteTableIds:
>       - !Ref PublicRouteTable
>       - !Ref PrivateRouteTable
>       - !If [DoAz2, !Ref PrivateRouteTable2, !Ref "AWS::NoValue"]
>       - !If [DoAz3, !Ref PrivateRouteTable3, !Ref "AWS::NoValue"]
>       ServiceName: !Join
>       - ''
>       - - com.amazonaws.
>         - !Ref 'AWS::Region'
>         - .s3
>       VpcId: !Ref VPC
> 
> Outputs:
>   VpcId:
>     Description: ID of the new VPC.
>     Value: !Ref VPC
>   PublicSubnetIds:
>     Description: Subnet IDs of the public subnets.
>     Value:
>       !Join [
>         ",",
>         [!Ref PublicSubnet, !If [DoAz2, !Ref PublicSubnet2, !Ref "AWS::NoValue"], !If [DoAz3, !Ref PublicSubnet3, !Ref "AWS::NoValue"]]
>       ]
>   PrivateSubnetIds:
>     Description: Subnet IDs of the private subnets.
>     Value:
>       !Join [
>         ",",
>         [!Ref PrivateSubnet, !If [DoAz2, !Ref PrivateSubnet2, !Ref "AWS::NoValue"], !If [DoAz3, !Ref PrivateSubnet3, !Ref "AWS::NoValue"]]
>       ]
>   PublicRouteTableId:
>     Description: Public Route table ID
>     Value: !Ref PublicRouteTable
>   PrivateRouteTableIds:
>     Description: Private Route table IDs
>     Value:
>       !Join [
>         ",",
>         [
>           !Join ["=", [
>             !Select [0, "Fn::GetAZs": !Ref "AWS::Region"],
>             !Ref PrivateRouteTable
>           ]],
>           !If [DoAz2,
>                !Join ["=", [!Select [1, "Fn::GetAZs": !Ref "AWS::Region"], !Ref PrivateRouteTable2]],
>                !Ref "AWS::NoValue"
>           ],
>           !If [DoAz3,
>                !Join ["=", [!Select [2, "Fn::GetAZs": !Ref "AWS::Region"], !Ref PrivateRouteTable3]],
>                !Ref "AWS::NoValue"
>           ]
>         ]
>       ]</programlisting>
35755c38381,38778
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/02_cluster_infra.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Network Elements (Route53 &amp; LBs)
> 
> Parameters:
>   ClusterName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Cluster name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, representative cluster name to use for host names and other identifying names.
>     Type: String
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag cloud resources and identify items owned or used by the cluster.
>     Type: String
>   HostedZoneId:
>     Description: The Route53 public zone ID to register the targets with, such as Z21IXYZABCZ2A4.
>     Type: String
>   HostedZoneName:
>     Description: The Route53 zone to register the targets with, such as example.com. Omit the trailing period.
>     Type: String
>     Default: "example.com"
>   PublicSubnets:
>     Description: The internet-facing subnets.
>     Type: List&lt;AWS::EC2::Subnet::Id&gt;
>   PrivateSubnets:
>     Description: The internal subnets.
>     Type: List&lt;AWS::EC2::Subnet::Id&gt;
>   VpcId:
>     Description: The VPC-scoped resources will belong to this VPC.
>     Type: AWS::EC2::VPC::Id
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - ClusterName
>       - InfrastructureName
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcId
>       - PublicSubnets
>       - PrivateSubnets
>     - Label:
>         default: "DNS"
>       Parameters:
>       - HostedZoneName
>       - HostedZoneId
>     ParameterLabels:
>       ClusterName:
>         default: "Cluster Name"
>       InfrastructureName:
>         default: "Infrastructure Name"
>       VpcId:
>         default: "VPC ID"
>       PublicSubnets:
>         default: "Public Subnets"
>       PrivateSubnets:
>         default: "Private Subnets"
>       HostedZoneName:
>         default: "Public Hosted Zone Name"
>       HostedZoneId:
>         default: "Public Hosted Zone ID"
> 
> Resources:
>   ExtApiElb:
>     Type: AWS::ElasticLoadBalancingV2::LoadBalancer
>     Properties:
>       Name: !Join ["-", [!Ref InfrastructureName, "ext"]]
>       IpAddressType: ipv4
>       Subnets: !Ref PublicSubnets
>       Type: network
> 
>   IntApiElb:
>     Type: AWS::ElasticLoadBalancingV2::LoadBalancer
>     Properties:
>       Name: !Join ["-", [!Ref InfrastructureName, "int"]]
>       Scheme: internal
>       IpAddressType: ipv4
>       Subnets: !Ref PrivateSubnets
>       Type: network
> 
>   IntDns:
>     Type: "AWS::Route53::HostedZone"
>     Properties:
>       HostedZoneConfig:
>         Comment: "Managed by CloudFormation"
>       Name: !Join [".", [!Ref ClusterName, !Ref HostedZoneName]]
>       HostedZoneTags:
>       - Key: Name
>         Value: !Join ["-", [!Ref InfrastructureName, "int"]]
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "owned"
>       VPCs:
>       - VPCId: !Ref VpcId
>         VPCRegion: !Ref "AWS::Region"
> 
>   ExternalApiServerRecord:
>     Type: AWS::Route53::RecordSetGroup
>     Properties:
>       Comment: Alias record for the API server
>       HostedZoneId: !Ref HostedZoneId
>       RecordSets:
>       - Name:
>           !Join [
>             ".",
>             ["api", !Ref ClusterName, !Join ["", [!Ref HostedZoneName, "."]]],
>           ]
>         Type: A
>         AliasTarget:
>           HostedZoneId: !GetAtt ExtApiElb.CanonicalHostedZoneID
>           DNSName: !GetAtt ExtApiElb.DNSName
> 
>   InternalApiServerRecord:
>     Type: AWS::Route53::RecordSetGroup
>     Properties:
>       Comment: Alias record for the API server
>       HostedZoneId: !Ref IntDns
>       RecordSets:
>       - Name:
>           !Join [
>             ".",
>             ["api", !Ref ClusterName, !Join ["", [!Ref HostedZoneName, "."]]],
>           ]
>         Type: A
>         AliasTarget:
>           HostedZoneId: !GetAtt IntApiElb.CanonicalHostedZoneID
>           DNSName: !GetAtt IntApiElb.DNSName
>       - Name:
>           !Join [
>             ".",
>             ["api-int", !Ref ClusterName, !Join ["", [!Ref HostedZoneName, "."]]],
>           ]
>         Type: A
>         AliasTarget:
>           HostedZoneId: !GetAtt IntApiElb.CanonicalHostedZoneID
>           DNSName: !GetAtt IntApiElb.DNSName
> 
>   ExternalApiListener:
>     Type: AWS::ElasticLoadBalancingV2::Listener
>     Properties:
>       DefaultActions:
>       - Type: forward
>         TargetGroupArn:
>           Ref: ExternalApiTargetGroup
>       LoadBalancerArn:
>         Ref: ExtApiElb
>       Port: 6443
>       Protocol: TCP
> 
>   ExternalApiTargetGroup:
>     Type: AWS::ElasticLoadBalancingV2::TargetGroup
>     Properties:
>       HealthCheckIntervalSeconds: 10
>       HealthCheckPath: "/readyz"
>       HealthCheckPort: 6443
>       HealthCheckProtocol: HTTPS
>       HealthyThresholdCount: 2
>       UnhealthyThresholdCount: 2
>       Port: 6443
>       Protocol: TCP
>       TargetType: ip
>       VpcId:
>         Ref: VpcId
>       TargetGroupAttributes:
>       - Key: deregistration_delay.timeout_seconds
>         Value: 60
> 
>   InternalApiListener:
>     Type: AWS::ElasticLoadBalancingV2::Listener
>     Properties:
>       DefaultActions:
>       - Type: forward
>         TargetGroupArn:
>           Ref: InternalApiTargetGroup
>       LoadBalancerArn:
>         Ref: IntApiElb
>       Port: 6443
>       Protocol: TCP
> 
>   InternalApiTargetGroup:
>     Type: AWS::ElasticLoadBalancingV2::TargetGroup
>     Properties:
>       HealthCheckIntervalSeconds: 10
>       HealthCheckPath: "/readyz"
>       HealthCheckPort: 6443
>       HealthCheckProtocol: HTTPS
>       HealthyThresholdCount: 2
>       UnhealthyThresholdCount: 2
>       Port: 6443
>       Protocol: TCP
>       TargetType: ip
>       VpcId:
>         Ref: VpcId
>       TargetGroupAttributes:
>       - Key: deregistration_delay.timeout_seconds
>         Value: 60
> 
>   InternalServiceInternalListener:
>     Type: AWS::ElasticLoadBalancingV2::Listener
>     Properties:
>       DefaultActions:
>       - Type: forward
>         TargetGroupArn:
>           Ref: InternalServiceTargetGroup
>       LoadBalancerArn:
>         Ref: IntApiElb
>       Port: 22623
>       Protocol: TCP
> 
>   InternalServiceTargetGroup:
>     Type: AWS::ElasticLoadBalancingV2::TargetGroup
>     Properties:
>       HealthCheckIntervalSeconds: 10
>       HealthCheckPath: "/healthz"
>       HealthCheckPort: 22623
>       HealthCheckProtocol: HTTPS
>       HealthyThresholdCount: 2
>       UnhealthyThresholdCount: 2
>       Port: 22623
>       Protocol: TCP
>       TargetType: ip
>       VpcId:
>         Ref: VpcId
>       TargetGroupAttributes:
>       - Key: deregistration_delay.timeout_seconds
>         Value: 60
> 
>   RegisterTargetLambdaIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       RoleName: !Join ["-", [!Ref InfrastructureName, "nlb", "lambda", "role"]]
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "lambda.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Path: "/"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "master", "policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action:
>               [
>                 "elasticloadbalancing:RegisterTargets",
>                 "elasticloadbalancing:DeregisterTargets",
>               ]
>             Resource: !Ref InternalApiTargetGroup
>           - Effect: "Allow"
>             Action:
>               [
>                 "elasticloadbalancing:RegisterTargets",
>                 "elasticloadbalancing:DeregisterTargets",
>               ]
>             Resource: !Ref InternalServiceTargetGroup
>           - Effect: "Allow"
>             Action:
>               [
>                 "elasticloadbalancing:RegisterTargets",
>                 "elasticloadbalancing:DeregisterTargets",
>               ]
>             Resource: !Ref ExternalApiTargetGroup
> 
>   RegisterNlbIpTargets:
>     Type: "AWS::Lambda::Function"
>     Properties:
>       Handler: "index.handler"
>       Role:
>         Fn::GetAtt:
>         - "RegisterTargetLambdaIamRole"
>         - "Arn"
>       Code:
>         ZipFile: |
>           import json
>           import boto3
>           import cfnresponse
>           def handler(event, context):
>             elb = boto3.client('elbv2')
>             if event['RequestType'] == 'Delete':
>               elb.deregister_targets(TargetGroupArn=event['ResourceProperties']['TargetArn'],Targets=[{'Id': event['ResourceProperties']['TargetIp']}])
>             elif event['RequestType'] == 'Create':
>               elb.register_targets(TargetGroupArn=event['ResourceProperties']['TargetArn'],Targets=[{'Id': event['ResourceProperties']['TargetIp']}])
>             responseData = {}
>             cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, event['ResourceProperties']['TargetArn']+event['ResourceProperties']['TargetIp'])
>       Runtime: "python3.8"
>       Timeout: 120
> 
>   RegisterSubnetTagsLambdaIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       RoleName: !Join ["-", [!Ref InfrastructureName, "subnet-tags-lambda-role"]]
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "lambda.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Path: "/"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "subnet-tagging-policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action:
>               [
>                 "ec2:DeleteTags",
>                 "ec2:CreateTags"
>               ]
>             Resource: "arn:aws:ec2:*:*:subnet/*"
>           - Effect: "Allow"
>             Action:
>               [
>                 "ec2:DescribeSubnets",
>                 "ec2:DescribeTags"
>               ]
>             Resource: "*"
> 
>   RegisterSubnetTags:
>     Type: "AWS::Lambda::Function"
>     Properties:
>       Handler: "index.handler"
>       Role:
>         Fn::GetAtt:
>         - "RegisterSubnetTagsLambdaIamRole"
>         - "Arn"
>       Code:
>         ZipFile: |
>           import json
>           import boto3
>           import cfnresponse
>           def handler(event, context):
>             ec2_client = boto3.client('ec2')
>             if event['RequestType'] == 'Delete':
>               for subnet_id in event['ResourceProperties']['Subnets']:
>                 ec2_client.delete_tags(Resources=[subnet_id], Tags=[{'Key': 'kubernetes.io/cluster/' + event['ResourceProperties']['InfrastructureName']}]);
>             elif event['RequestType'] == 'Create':
>               for subnet_id in event['ResourceProperties']['Subnets']:
>                 ec2_client.create_tags(Resources=[subnet_id], Tags=[{'Key': 'kubernetes.io/cluster/' + event['ResourceProperties']['InfrastructureName'], 'Value': 'shared'}]);
>             responseData = {}
>             cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, event['ResourceProperties']['InfrastructureName']+event['ResourceProperties']['Subnets'][0])
>       Runtime: "python3.8"
>       Timeout: 120
> 
>   RegisterPublicSubnetTags:
>     Type: Custom::SubnetRegister
>     Properties:
>       ServiceToken: !GetAtt RegisterSubnetTags.Arn
>       InfrastructureName: !Ref InfrastructureName
>       Subnets: !Ref PublicSubnets
> 
>   RegisterPrivateSubnetTags:
>     Type: Custom::SubnetRegister
>     Properties:
>       ServiceToken: !GetAtt RegisterSubnetTags.Arn
>       InfrastructureName: !Ref InfrastructureName
>       Subnets: !Ref PrivateSubnets
> 
> Outputs:
>   PrivateHostedZoneId:
>     Description: Hosted zone ID for the private DNS, which is required for private records.
>     Value: !Ref IntDns
>   ExternalApiLoadBalancerName:
>     Description: Full name of the external API load balancer.
>     Value: !GetAtt ExtApiElb.LoadBalancerFullName
>   InternalApiLoadBalancerName:
>     Description: Full name of the internal API load balancer.
>     Value: !GetAtt IntApiElb.LoadBalancerFullName
>   ApiServerDnsName:
>     Description: Full hostname of the API server, which is required for the Ignition config files.
>     Value: !Join [".", ["api-int", !Ref ClusterName, !Ref HostedZoneName]]
>   RegisterNlbIpTargetsLambda:
>     Description: Lambda ARN useful to help register or deregister IP targets for these load balancers.
>     Value: !GetAtt RegisterNlbIpTargets.Arn
>   ExternalApiTargetGroupArn:
>     Description: ARN of the external API target group.
>     Value: !Ref ExternalApiTargetGroup
>   InternalApiTargetGroupArn:
>     Description: ARN of the internal API target group.
>     Value: !Ref InternalApiTargetGroup
>   InternalServiceTargetGroupArn:
>     Description: ARN of the internal service target group.
>     Value: !Ref InternalServiceTargetGroup</programlisting>
35944c38967,39564
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/03_cluster_security.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Security Elements (Security Groups &amp; IAM)
> 
> Parameters:
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag cloud resources and identify items owned or used by the cluster.
>     Type: String
>   VpcCidr:
>     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-4]))$
>     ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-24.
>     Default: 10.0.0.0/16
>     Description: CIDR block for VPC.
>     Type: String
>   VpcId:
>     Description: The VPC-scoped resources will belong to this VPC.
>     Type: AWS::EC2::VPC::Id
>   PrivateSubnets:
>     Description: The internal subnets.
>     Type: List&lt;AWS::EC2::Subnet::Id&gt;
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - InfrastructureName
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcId
>       - VpcCidr
>       - PrivateSubnets
>     ParameterLabels:
>       InfrastructureName:
>         default: "Infrastructure Name"
>       VpcId:
>         default: "VPC ID"
>       VpcCidr:
>         default: "VPC CIDR"
>       PrivateSubnets:
>         default: "Private Subnets"
> 
> Resources:
>   MasterSecurityGroup:
>     Type: AWS::EC2::SecurityGroup
>     Properties:
>       GroupDescription: Cluster Master Security Group
>       SecurityGroupIngress:
>       - IpProtocol: icmp
>         FromPort: 0
>         ToPort: 0
>         CidrIp: !Ref VpcCidr
>       - IpProtocol: tcp
>         FromPort: 22
>         ToPort: 22
>         CidrIp: !Ref VpcCidr
>       - IpProtocol: tcp
>         ToPort: 6443
>         FromPort: 6443
>         CidrIp: !Ref VpcCidr
>       - IpProtocol: tcp
>         FromPort: 22623
>         ToPort: 22623
>         CidrIp: !Ref VpcCidr
>       VpcId: !Ref VpcId
> 
>   WorkerSecurityGroup:
>     Type: AWS::EC2::SecurityGroup
>     Properties:
>       GroupDescription: Cluster Worker Security Group
>       SecurityGroupIngress:
>       - IpProtocol: icmp
>         FromPort: 0
>         ToPort: 0
>         CidrIp: !Ref VpcCidr
>       - IpProtocol: tcp
>         FromPort: 22
>         ToPort: 22
>         CidrIp: !Ref VpcCidr
>       VpcId: !Ref VpcId
> 
>   MasterIngressEtcd:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: etcd
>       FromPort: 2379
>       ToPort: 2380
>       IpProtocol: tcp
> 
>   MasterIngressVxlan:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Vxlan packets
>       FromPort: 4789
>       ToPort: 4789
>       IpProtocol: udp
> 
>   MasterIngressWorkerVxlan:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Vxlan packets
>       FromPort: 4789
>       ToPort: 4789
>       IpProtocol: udp
> 
>   MasterIngressGeneve:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Geneve packets
>       FromPort: 6081
>       ToPort: 6081
>       IpProtocol: udp
> 
>   MasterIngressWorkerGeneve:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Geneve packets
>       FromPort: 6081
>       ToPort: 6081
>       IpProtocol: udp
> 
>   MasterIngressIpsecIke:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec IKE packets
>       FromPort: 500
>       ToPort: 500
>       IpProtocol: udp
> 
>   MasterIngressIpsecNat:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec NAT-T packets
>       FromPort: 4500
>       ToPort: 4500
>       IpProtocol: udp
> 
>   MasterIngressIpsecEsp:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec ESP packets
>       IpProtocol: 50
> 
>   MasterIngressWorkerIpsecIke:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec IKE packets
>       FromPort: 500
>       ToPort: 500
>       IpProtocol: udp
> 
>   MasterIngressWorkerIpsecNat:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec NAT-T packets
>       FromPort: 4500
>       ToPort: 4500
>       IpProtocol: udp
> 
>   MasterIngressWorkerIpsecEsp:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec ESP packets
>       IpProtocol: 50
> 
>   MasterIngressInternal:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: tcp
> 
>   MasterIngressWorkerInternal:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: tcp
> 
>   MasterIngressInternalUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: udp
> 
>   MasterIngressWorkerInternalUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: udp
> 
>   MasterIngressKube:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes kubelet, scheduler and controller manager
>       FromPort: 10250
>       ToPort: 10259
>       IpProtocol: tcp
> 
>   MasterIngressWorkerKube:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes kubelet, scheduler and controller manager
>       FromPort: 10250
>       ToPort: 10259
>       IpProtocol: tcp
> 
>   MasterIngressIngressServices:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: tcp
> 
>   MasterIngressWorkerIngressServices:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: tcp
> 
>   MasterIngressIngressServicesUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: udp
> 
>   MasterIngressWorkerIngressServicesUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt MasterSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: udp
> 
>   WorkerIngressVxlan:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Vxlan packets
>       FromPort: 4789
>       ToPort: 4789
>       IpProtocol: udp
> 
>   WorkerIngressMasterVxlan:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Vxlan packets
>       FromPort: 4789
>       ToPort: 4789
>       IpProtocol: udp
> 
>   WorkerIngressGeneve:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Geneve packets
>       FromPort: 6081
>       ToPort: 6081
>       IpProtocol: udp
> 
>   WorkerIngressMasterGeneve:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Geneve packets
>       FromPort: 6081
>       ToPort: 6081
>       IpProtocol: udp
> 
>   WorkerIngressIpsecIke:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec IKE packets
>       FromPort: 500
>       ToPort: 500
>       IpProtocol: udp
> 
>   WorkerIngressIpsecNat:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec NAT-T packets
>       FromPort: 4500
>       ToPort: 4500
>       IpProtocol: udp
> 
>   WorkerIngressIpsecEsp:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: IPsec ESP packets
>       IpProtocol: 50
> 
>   WorkerIngressMasterIpsecIke:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec IKE packets
>       FromPort: 500
>       ToPort: 500
>       IpProtocol: udp
> 
>   WorkerIngressMasterIpsecNat:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec NAT-T packets
>       FromPort: 4500
>       ToPort: 4500
>       IpProtocol: udp
> 
>   WorkerIngressMasterIpsecEsp:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: IPsec ESP packets
>       IpProtocol: 50
> 
>   WorkerIngressInternal:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: tcp
> 
>   WorkerIngressMasterInternal:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: tcp
> 
>   WorkerIngressInternalUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: udp
> 
>   WorkerIngressMasterInternalUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal cluster communication
>       FromPort: 9000
>       ToPort: 9999
>       IpProtocol: udp
> 
>   WorkerIngressKube:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes secure kubelet port
>       FromPort: 10250
>       ToPort: 10250
>       IpProtocol: tcp
> 
>   WorkerIngressWorkerKube:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Internal Kubernetes communication
>       FromPort: 10250
>       ToPort: 10250
>       IpProtocol: tcp
> 
>   WorkerIngressIngressServices:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: tcp
> 
>   WorkerIngressMasterIngressServices:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: tcp
> 
>   WorkerIngressIngressServicesUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt WorkerSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: udp
> 
>   WorkerIngressMasterIngressServicesUDP:
>     Type: AWS::EC2::SecurityGroupIngress
>     Properties:
>       GroupId: !GetAtt WorkerSecurityGroup.GroupId
>       SourceSecurityGroupId: !GetAtt MasterSecurityGroup.GroupId
>       Description: Kubernetes ingress services
>       FromPort: 30000
>       ToPort: 32767
>       IpProtocol: udp
> 
>   MasterIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "ec2.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "master", "policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action:
>             - "ec2:AttachVolume"
>             - "ec2:AuthorizeSecurityGroupIngress"
>             - "ec2:CreateSecurityGroup"
>             - "ec2:CreateTags"
>             - "ec2:CreateVolume"
>             - "ec2:DeleteSecurityGroup"
>             - "ec2:DeleteVolume"
>             - "ec2:Describe*"
>             - "ec2:DetachVolume"
>             - "ec2:ModifyInstanceAttribute"
>             - "ec2:ModifyVolume"
>             - "ec2:RevokeSecurityGroupIngress"
>             - "elasticloadbalancing:AddTags"
>             - "elasticloadbalancing:AttachLoadBalancerToSubnets"
>             - "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"
>             - "elasticloadbalancing:CreateListener"
>             - "elasticloadbalancing:CreateLoadBalancer"
>             - "elasticloadbalancing:CreateLoadBalancerPolicy"
>             - "elasticloadbalancing:CreateLoadBalancerListeners"
>             - "elasticloadbalancing:CreateTargetGroup"
>             - "elasticloadbalancing:ConfigureHealthCheck"
>             - "elasticloadbalancing:DeleteListener"
>             - "elasticloadbalancing:DeleteLoadBalancer"
>             - "elasticloadbalancing:DeleteLoadBalancerListeners"
>             - "elasticloadbalancing:DeleteTargetGroup"
>             - "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
>             - "elasticloadbalancing:DeregisterTargets"
>             - "elasticloadbalancing:Describe*"
>             - "elasticloadbalancing:DetachLoadBalancerFromSubnets"
>             - "elasticloadbalancing:ModifyListener"
>             - "elasticloadbalancing:ModifyLoadBalancerAttributes"
>             - "elasticloadbalancing:ModifyTargetGroup"
>             - "elasticloadbalancing:ModifyTargetGroupAttributes"
>             - "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
>             - "elasticloadbalancing:RegisterTargets"
>             - "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
>             - "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
>             - "kms:DescribeKey"
>             Resource: "*"
> 
>   MasterInstanceProfile:
>     Type: "AWS::IAM::InstanceProfile"
>     Properties:
>       Roles:
>       - Ref: "MasterIamRole"
> 
>   WorkerIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "ec2.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "worker", "policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action:
>             - "ec2:DescribeInstances"
>             - "ec2:DescribeRegions"
>             Resource: "*"
> 
>   WorkerInstanceProfile:
>     Type: "AWS::IAM::InstanceProfile"
>     Properties:
>       Roles:
>       - Ref: "WorkerIamRole"
> 
> Outputs:
>   MasterSecurityGroupId:
>     Description: Master Security Group ID
>     Value: !GetAtt MasterSecurityGroup.GroupId
> 
>   WorkerSecurityGroupId:
>     Description: Worker Security Group ID
>     Value: !GetAtt WorkerSecurityGroup.GroupId
> 
>   MasterInstanceProfile:
>     Description: Master IAM Instance Profile
>     Value: !Ref MasterInstanceProfile
> 
>   WorkerInstanceProfile:
>     Description: Worker IAM Instance Profile
>     Value: !Ref WorkerInstanceProfile</programlisting>
36582c40202,40416
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/04_cluster_bootstrap.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Bootstrap (EC2 Instance, Security Groups and IAM)
> 
> Parameters:
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag cloud resources and identify items owned or used by the cluster.
>     Type: String
>   RhcosAmi:
>     Description: Current Red Hat Enterprise Linux CoreOS AMI to use for bootstrap.
>     Type: AWS::EC2::Image::Id
>   AllowedBootstrapSshCidr:
>     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|1[0-9]|2[0-9]|3[0-2]))$
>     ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-32.
>     Default: 0.0.0.0/0
>     Description: CIDR block to allow SSH access to the bootstrap node.
>     Type: String
>   PublicSubnet:
>     Description: The public subnet to launch the bootstrap node into.
>     Type: AWS::EC2::Subnet::Id
>   MasterSecurityGroupId:
>     Description: The master security group ID for registering temporary rules.
>     Type: AWS::EC2::SecurityGroup::Id
>   VpcId:
>     Description: The VPC-scoped resources will belong to this VPC.
>     Type: AWS::EC2::VPC::Id
>   BootstrapIgnitionLocation:
>     Default: s3://my-s3-bucket/bootstrap.ign
>     Description: Ignition config file location.
>     Type: String
>   AutoRegisterELB:
>     Default: "yes"
>     AllowedValues:
>     - "yes"
>     - "no"
>     Description: Do you want to invoke NLB registration, which requires a Lambda ARN parameter?
>     Type: String
>   RegisterNlbIpTargetsLambdaArn:
>     Description: ARN for NLB IP target registration lambda.
>     Type: String
>   ExternalApiTargetGroupArn:
>     Description: ARN for external API load balancer target group.
>     Type: String
>   InternalApiTargetGroupArn:
>     Description: ARN for internal API load balancer target group.
>     Type: String
>   InternalServiceTargetGroupArn:
>     Description: ARN for internal service load balancer target group.
>     Type: String
>   BootstrapInstanceType:
>     Description: Instance type for the bootstrap EC2 instance
>     Default: "i3.large"
>     Type: String
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - InfrastructureName
>     - Label:
>         default: "Host Information"
>       Parameters:
>       - RhcosAmi
>       - BootstrapIgnitionLocation
>       - MasterSecurityGroupId
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcId
>       - AllowedBootstrapSshCidr
>       - PublicSubnet
>     - Label:
>         default: "Load Balancer Automation"
>       Parameters:
>       - AutoRegisterELB
>       - RegisterNlbIpTargetsLambdaArn
>       - ExternalApiTargetGroupArn
>       - InternalApiTargetGroupArn
>       - InternalServiceTargetGroupArn
>     ParameterLabels:
>       InfrastructureName:
>         default: "Infrastructure Name"
>       VpcId:
>         default: "VPC ID"
>       AllowedBootstrapSshCidr:
>         default: "Allowed SSH Source"
>       PublicSubnet:
>         default: "Public Subnet"
>       RhcosAmi:
>         default: "Red Hat Enterprise Linux CoreOS AMI ID"
>       BootstrapIgnitionLocation:
>         default: "Bootstrap Ignition Source"
>       MasterSecurityGroupId:
>         default: "Master Security Group ID"
>       AutoRegisterELB:
>         default: "Use Provided ELB Automation"
> 
> Conditions:
>   DoRegistration: !Equals ["yes", !Ref AutoRegisterELB]
> 
> Resources:
>   BootstrapIamRole:
>     Type: AWS::IAM::Role
>     Properties:
>       AssumeRolePolicyDocument:
>         Version: "2012-10-17"
>         Statement:
>         - Effect: "Allow"
>           Principal:
>             Service:
>             - "ec2.amazonaws.com"
>           Action:
>           - "sts:AssumeRole"
>       Path: "/"
>       Policies:
>       - PolicyName: !Join ["-", [!Ref InfrastructureName, "bootstrap", "policy"]]
>         PolicyDocument:
>           Version: "2012-10-17"
>           Statement:
>           - Effect: "Allow"
>             Action: "ec2:Describe*"
>             Resource: "*"
>           - Effect: "Allow"
>             Action: "ec2:AttachVolume"
>             Resource: "*"
>           - Effect: "Allow"
>             Action: "ec2:DetachVolume"
>             Resource: "*"
>           - Effect: "Allow"
>             Action: "s3:GetObject"
>             Resource: "*"
> 
>   BootstrapInstanceProfile:
>     Type: "AWS::IAM::InstanceProfile"
>     Properties:
>       Path: "/"
>       Roles:
>       - Ref: "BootstrapIamRole"
> 
>   BootstrapSecurityGroup:
>     Type: AWS::EC2::SecurityGroup
>     Properties:
>       GroupDescription: Cluster Bootstrap Security Group
>       SecurityGroupIngress:
>       - IpProtocol: tcp
>         FromPort: 22
>         ToPort: 22
>         CidrIp: !Ref AllowedBootstrapSshCidr
>       - IpProtocol: tcp
>         ToPort: 19531
>         FromPort: 19531
>         CidrIp: 0.0.0.0/0
>       VpcId: !Ref VpcId
> 
>   BootstrapInstance:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       IamInstanceProfile: !Ref BootstrapInstanceProfile
>       InstanceType: !Ref BootstrapInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "true"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "BootstrapSecurityGroup"
>         - !Ref "MasterSecurityGroupId"
>         SubnetId: !Ref "PublicSubnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"replace":{"source":"${S3Loc}"}},"version":"3.1.0"}}'
>         - {
>           S3Loc: !Ref BootstrapIgnitionLocation
>         }
> 
>   RegisterBootstrapApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref ExternalApiTargetGroupArn
>       TargetIp: !GetAtt BootstrapInstance.PrivateIp
> 
>   RegisterBootstrapInternalApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalApiTargetGroupArn
>       TargetIp: !GetAtt BootstrapInstance.PrivateIp
> 
>   RegisterBootstrapInternalServiceTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalServiceTargetGroupArn
>       TargetIp: !GetAtt BootstrapInstance.PrivateIp
> 
> Outputs:
>   BootstrapInstanceId:
>     Description: Bootstrap Instance ID.
>     Value: !Ref BootstrapInstance
> 
>   BootstrapPublicIp:
>     Description: The bootstrap node public IP address.
>     Value: !GetAtt BootstrapInstance.PublicIp
> 
>   BootstrapPrivateIp:
>     Description: The bootstrap node private IP address.
>     Value: !GetAtt BootstrapInstance.PrivateIp</programlisting>
36884c40718,41016
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/05_cluster_master_nodes.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Node Launch (EC2 master instances)
> 
> Parameters:
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag nodes for the kubelet cloud provider.
>     Type: String
>   RhcosAmi:
>     Description: Current Red Hat Enterprise Linux CoreOS AMI to use for bootstrap.
>     Type: AWS::EC2::Image::Id
>   AutoRegisterDNS:
>     Default: ""
>     Description: unused
>     Type: String
>   PrivateHostedZoneId:
>     Default: ""
>     Description: unused
>     Type: String
>   PrivateHostedZoneName:
>     Default: ""
>     Description: unused
>     Type: String
>   Master0Subnet:
>     Description: The subnets, recommend private, to launch the master nodes into.
>     Type: AWS::EC2::Subnet::Id
>   Master1Subnet:
>     Description: The subnets, recommend private, to launch the master nodes into.
>     Type: AWS::EC2::Subnet::Id
>   Master2Subnet:
>     Description: The subnets, recommend private, to launch the master nodes into.
>     Type: AWS::EC2::Subnet::Id
>   MasterSecurityGroupId:
>     Description: The master security group ID to associate with master nodes.
>     Type: AWS::EC2::SecurityGroup::Id
>   IgnitionLocation:
>     Default: https://api-int.$CLUSTER_NAME.$DOMAIN:22623/config/master
>     Description: Ignition config file location.
>     Type: String
>   CertificateAuthorities:
>     Default: data:text/plain;charset=utf-8;base64,ABC...xYz==
>     Description: Base64 encoded certificate authority string to use.
>     Type: String
>   MasterInstanceProfileName:
>     Description: IAM profile to associate with master nodes.
>     Type: String
>   MasterInstanceType:
>     Default: m5.xlarge
>     Type: String
> 
>   AutoRegisterELB:
>     Default: "yes"
>     AllowedValues:
>     - "yes"
>     - "no"
>     Description: Do you want to invoke NLB registration, which requires a Lambda ARN parameter?
>     Type: String
>   RegisterNlbIpTargetsLambdaArn:
>     Description: ARN for NLB IP target registration lambda. Supply the value from the cluster infrastructure or select "no" for AutoRegisterELB.
>     Type: String
>   ExternalApiTargetGroupArn:
>     Description: ARN for external API load balancer target group. Supply the value from the cluster infrastructure or select "no" for AutoRegisterELB.
>     Type: String
>   InternalApiTargetGroupArn:
>     Description: ARN for internal API load balancer target group. Supply the value from the cluster infrastructure or select "no" for AutoRegisterELB.
>     Type: String
>   InternalServiceTargetGroupArn:
>     Description: ARN for internal service load balancer target group. Supply the value from the cluster infrastructure or select "no" for AutoRegisterELB.
>     Type: String
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - InfrastructureName
>     - Label:
>         default: "Host Information"
>       Parameters:
>       - MasterInstanceType
>       - RhcosAmi
>       - IgnitionLocation
>       - CertificateAuthorities
>       - MasterSecurityGroupId
>       - MasterInstanceProfileName
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - VpcId
>       - AllowedBootstrapSshCidr
>       - Master0Subnet
>       - Master1Subnet
>       - Master2Subnet
>     - Label:
>         default: "Load Balancer Automation"
>       Parameters:
>       - AutoRegisterELB
>       - RegisterNlbIpTargetsLambdaArn
>       - ExternalApiTargetGroupArn
>       - InternalApiTargetGroupArn
>       - InternalServiceTargetGroupArn
>     ParameterLabels:
>       InfrastructureName:
>         default: "Infrastructure Name"
>       VpcId:
>         default: "VPC ID"
>       Master0Subnet:
>         default: "Master-0 Subnet"
>       Master1Subnet:
>         default: "Master-1 Subnet"
>       Master2Subnet:
>         default: "Master-2 Subnet"
>       MasterInstanceType:
>         default: "Master Instance Type"
>       MasterInstanceProfileName:
>         default: "Master Instance Profile Name"
>       RhcosAmi:
>         default: "Red Hat Enterprise Linux CoreOS AMI ID"
>       BootstrapIgnitionLocation:
>         default: "Master Ignition Source"
>       CertificateAuthorities:
>         default: "Ignition CA String"
>       MasterSecurityGroupId:
>         default: "Master Security Group ID"
>       AutoRegisterELB:
>         default: "Use Provided ELB Automation"
> 
> Conditions:
>   DoRegistration: !Equals ["yes", !Ref AutoRegisterELB]
> 
> Resources:
>   Master0:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       BlockDeviceMappings:
>       - DeviceName: /dev/xvda
>         Ebs:
>           VolumeSize: "120"
>           VolumeType: "gp2"
>       IamInstanceProfile: !Ref MasterInstanceProfileName
>       InstanceType: !Ref MasterInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "false"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "MasterSecurityGroupId"
>         SubnetId: !Ref "Master0Subnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}'
>         - {
>           SOURCE: !Ref IgnitionLocation,
>           CA_BUNDLE: !Ref CertificateAuthorities,
>         }
>       Tags:
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "shared"
> 
>   RegisterMaster0:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref ExternalApiTargetGroupArn
>       TargetIp: !GetAtt Master0.PrivateIp
> 
>   RegisterMaster0InternalApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalApiTargetGroupArn
>       TargetIp: !GetAtt Master0.PrivateIp
> 
>   RegisterMaster0InternalServiceTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalServiceTargetGroupArn
>       TargetIp: !GetAtt Master0.PrivateIp
> 
>   Master1:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       BlockDeviceMappings:
>       - DeviceName: /dev/xvda
>         Ebs:
>           VolumeSize: "120"
>           VolumeType: "gp2"
>       IamInstanceProfile: !Ref MasterInstanceProfileName
>       InstanceType: !Ref MasterInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "false"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "MasterSecurityGroupId"
>         SubnetId: !Ref "Master1Subnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}'
>         - {
>           SOURCE: !Ref IgnitionLocation,
>           CA_BUNDLE: !Ref CertificateAuthorities,
>         }
>       Tags:
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "shared"
> 
>   RegisterMaster1:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref ExternalApiTargetGroupArn
>       TargetIp: !GetAtt Master1.PrivateIp
> 
>   RegisterMaster1InternalApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalApiTargetGroupArn
>       TargetIp: !GetAtt Master1.PrivateIp
> 
>   RegisterMaster1InternalServiceTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalServiceTargetGroupArn
>       TargetIp: !GetAtt Master1.PrivateIp
> 
>   Master2:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       BlockDeviceMappings:
>       - DeviceName: /dev/xvda
>         Ebs:
>           VolumeSize: "120"
>           VolumeType: "gp2"
>       IamInstanceProfile: !Ref MasterInstanceProfileName
>       InstanceType: !Ref MasterInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "false"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "MasterSecurityGroupId"
>         SubnetId: !Ref "Master2Subnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}'
>         - {
>           SOURCE: !Ref IgnitionLocation,
>           CA_BUNDLE: !Ref CertificateAuthorities,
>         }
>       Tags:
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "shared"
> 
>   RegisterMaster2:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref ExternalApiTargetGroupArn
>       TargetIp: !GetAtt Master2.PrivateIp
> 
>   RegisterMaster2InternalApiTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalApiTargetGroupArn
>       TargetIp: !GetAtt Master2.PrivateIp
> 
>   RegisterMaster2InternalServiceTarget:
>     Condition: DoRegistration
>     Type: Custom::NLBRegister
>     Properties:
>       ServiceToken: !Ref RegisterNlbIpTargetsLambdaArn
>       TargetArn: !Ref InternalServiceTargetGroupArn
>       TargetIp: !GetAtt Master2.PrivateIp
> 
> Outputs:
>   PrivateIPs:
>     Description: The control-plane node private IP addresses.
>     Value:
>       !Join [
>         ",",
>         [!GetAtt Master0.PrivateIp, !GetAtt Master1.PrivateIp, !GetAtt Master2.PrivateIp]
>       ]</programlisting>
37090c41222,41327
< <programlisting language="yaml" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/aws/cloudformation/06_cluster_worker_node.yaml[role=include]</programlisting>
---
> <programlisting language="yaml" linenumbering="unnumbered">AWSTemplateFormatVersion: 2010-09-09
> Description: Template for OpenShift Cluster Node Launch (EC2 worker instance)
> 
> Parameters:
>   InfrastructureName:
>     AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
>     MaxLength: 27
>     MinLength: 1
>     ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
>     Description: A short, unique cluster ID used to tag nodes for the kubelet cloud provider.
>     Type: String
>   RhcosAmi:
>     Description: Current Red Hat Enterprise Linux CoreOS AMI to use for bootstrap.
>     Type: AWS::EC2::Image::Id
>   Subnet:
>     Description: The subnets, recommend private, to launch the master nodes into.
>     Type: AWS::EC2::Subnet::Id
>   WorkerSecurityGroupId:
>     Description: The master security group ID to associate with master nodes.
>     Type: AWS::EC2::SecurityGroup::Id
>   IgnitionLocation:
>     Default: https://api-int.$CLUSTER_NAME.$DOMAIN:22623/config/worker
>     Description: Ignition config file location.
>     Type: String
>   CertificateAuthorities:
>     Default: data:text/plain;charset=utf-8;base64,ABC...xYz==
>     Description: Base64 encoded certificate authority string to use.
>     Type: String
>   WorkerInstanceProfileName:
>     Description: IAM profile to associate with master nodes.
>     Type: String
>   WorkerInstanceType:
>     Default: m5.large
>     Type: String
> 
> Metadata:
>   AWS::CloudFormation::Interface:
>     ParameterGroups:
>     - Label:
>         default: "Cluster Information"
>       Parameters:
>       - InfrastructureName
>     - Label:
>         default: "Host Information"
>       Parameters:
>       - WorkerInstanceType
>       - RhcosAmi
>       - IgnitionLocation
>       - CertificateAuthorities
>       - WorkerSecurityGroupId
>       - WorkerInstanceProfileName
>     - Label:
>         default: "Network Configuration"
>       Parameters:
>       - Subnet
>     ParameterLabels:
>       Subnet:
>         default: "Subnet"
>       InfrastructureName:
>         default: "Infrastructure Name"
>       WorkerInstanceType:
>         default: "Worker Instance Type"
>       WorkerInstanceProfileName:
>         default: "Worker Instance Profile Name"
>       RhcosAmi:
>         default: "Red Hat Enterprise Linux CoreOS AMI ID"
>       IgnitionLocation:
>         default: "Worker Ignition Source"
>       CertificateAuthorities:
>         default: "Ignition CA String"
>       WorkerSecurityGroupId:
>         default: "Worker Security Group ID"
> 
> Resources:
>   Worker0:
>     Type: AWS::EC2::Instance
>     Properties:
>       ImageId: !Ref RhcosAmi
>       BlockDeviceMappings:
>       - DeviceName: /dev/xvda
>         Ebs:
>           VolumeSize: "120"
>           VolumeType: "gp2"
>       IamInstanceProfile: !Ref WorkerInstanceProfileName
>       InstanceType: !Ref WorkerInstanceType
>       NetworkInterfaces:
>       - AssociatePublicIpAddress: "false"
>         DeviceIndex: "0"
>         GroupSet:
>         - !Ref "WorkerSecurityGroupId"
>         SubnetId: !Ref "Subnet"
>       UserData:
>         Fn::Base64: !Sub
>         - '{"ignition":{"config":{"merge":[{"source":"${SOURCE}"}]},"security":{"tls":{"certificateAuthorities":[{"source":"${CA_BUNDLE}"}]}},"version":"3.1.0"}}'
>         - {
>           SOURCE: !Ref IgnitionLocation,
>           CA_BUNDLE: !Ref CertificateAuthorities,
>         }
>       Tags:
>       - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
>         Value: "shared"
> 
> Outputs:
>   PrivateIP:
>     Description: The compute node private IP address.
>     Value: !GetAtt Worker0.PrivateIp</programlisting>
37830d42066
< 
38813,38814c43049
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
38815a43051
> <title>Procedure</title>
38842,38843c43078
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
38844a43080
> <title>Procedure</title>
39682c43918
< <simpara>See <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/networking/#">Understanding the AWS Load Balancer Operator</link> for more information</simpara>
---
> <simpara>See <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/networking/#understanding-the-aws-load-balancer-operator">Understanding the AWS Load Balancer Operator</link> for more information</simpara>
39718d43953
< 
39796d44030
< 
39963d44196
< 
40583d44815
< 
40649d44880
< 
41936d46166
< 
42065d46294
< 
42402,42403c46631
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
42404a46633
> <title>Procedure</title>
42431,42432c46660
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
42433a46662
> <title>Procedure</title>
42533d46761
< 
43044c47272,47318
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
43052c47326,47333
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
43562,43563c47843
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
43564a47845
> <title>Procedure</title>
43591,43592c47872
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
43593a47874
> <title>Procedure</title>
44223d48503
< 
44612c48892,48938
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
44620c48946,48953
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
45566,45567c49899
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
45568a49901
> <title>Procedure</title>
45595,45596c49928
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
45597a49930
> <title>Procedure</title>
46227d50559
< 
46747c51079,51125
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
46755c51133,51140
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
47145,47146c51530
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
47147a51532
> <title>Procedure</title>
47174,47175c51559
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
47176a51561
> <title>Procedure</title>
47768d52152
< 
48298c52682,52728
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
48306c52736,52743
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
48703,48704c53140
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
48705a53142
> <title>Procedure</title>
48732,48733c53169
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
48734a53171
> <title>Procedure</title>
49516d53952
< 
50051c54487,54533
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
50586,50587c55068
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
50588a55070
> <title>Procedure</title>
50615,50616c55097
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
50617a55099
> <title>Procedure</title>
50717d55198
< 
52019c56500,56546
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
52027c56554,56561
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
53078c57612,57697
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/01_vnet.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(parameters('baseName'), '-vnet')]",
>     "addressPrefix" : "10.0.0.0/16",
>     "masterSubnetName" : "[concat(parameters('baseName'), '-master-subnet')]",
>     "masterSubnetPrefix" : "10.0.0.0/24",
>     "nodeSubnetName" : "[concat(parameters('baseName'), '-worker-subnet')]",
>     "nodeSubnetPrefix" : "10.0.1.0/24",
>     "clusterNsgName" : "[concat(parameters('baseName'), '-nsg')]"
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/virtualNetworks",
>       "name" : "[variables('virtualNetworkName')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[concat('Microsoft.Network/networkSecurityGroups/', variables('clusterNsgName'))]"
>       ],
>       "properties" : {
>         "addressSpace" : {
>           "addressPrefixes" : [
>             "[variables('addressPrefix')]"
>           ]
>         },
>         "subnets" : [
>           {
>             "name" : "[variables('masterSubnetName')]",
>             "properties" : {
>               "addressPrefix" : "[variables('masterSubnetPrefix')]",
>               "serviceEndpoints": [],
>               "networkSecurityGroup" : {
>                 "id" : "[resourceId('Microsoft.Network/networkSecurityGroups', variables('clusterNsgName'))]"
>               }
>             }
>           },
>           {
>             "name" : "[variables('nodeSubnetName')]",
>             "properties" : {
>               "addressPrefix" : "[variables('nodeSubnetPrefix')]",
>               "serviceEndpoints": [],
>               "networkSecurityGroup" : {
>                 "id" : "[resourceId('Microsoft.Network/networkSecurityGroups', variables('clusterNsgName'))]"
>               }
>             }
>           }
>         ]
>       }
>     },
>     {
>       "type" : "Microsoft.Network/networkSecurityGroups",
>       "name" : "[variables('clusterNsgName')]",
>       "apiVersion" : "2018-10-01",
>       "location" : "[variables('location')]",
>       "properties" : {
>         "securityRules" : [
>           {
>             "name" : "apiserver_in",
>             "properties" : {
>               "protocol" : "Tcp",
>               "sourcePortRange" : "*",
>               "destinationPortRange" : "6443",
>               "sourceAddressPrefix" : "*",
>               "destinationAddressPrefix" : "*",
>               "access" : "Allow",
>               "priority" : 101,
>               "direction" : "Inbound"
>             }
>           }
>         ]
>       }
>     }
>   ]
> }</programlisting>
53142c57761,57913
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/02_storage.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
>   "contentVersion": "1.0.0.0",
>   "parameters": {
>     "architecture": {
>       "type": "string",
>       "metadata": {
>         "description": "The architecture of the Virtual Machines"
>       },
>       "defaultValue": "x64",
>       "allowedValues": [
>         "Arm64",
>         "x64"
>       ]
>     },
>     "baseName": {
>       "type": "string",
>       "minLength": 1,
>       "metadata": {
>         "description": "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "storageAccount": {
>       "type": "string",
>       "metadata": {
>         "description": "The Storage Account name"
>       }
>     },
>     "vhdBlobURL": {
>       "type": "string",
>       "metadata": {
>         "description": "URL pointing to the blob where the VHD to be used to create master and worker machines is located"
>       }
>     }
>   },
>   "variables": {
>     "location": "[resourceGroup().location]",
>     "galleryName": "[concat('gallery_', replace(parameters('baseName'), '-', '_'))]",
>     "imageName": "[parameters('baseName')]",
>     "imageNameGen2": "[concat(parameters('baseName'), '-gen2')]",
>     "imageRelease": "1.0.0"
>   },
>   "resources": [
>     {
>       "apiVersion": "2021-10-01",
>       "type": "Microsoft.Compute/galleries",
>       "name": "[variables('galleryName')]",
>       "location": "[variables('location')]",
>       "resources": [
>         {
>           "apiVersion": "2021-10-01",
>           "type": "images",
>           "name": "[variables('imageName')]",
>           "location": "[variables('location')]",
>           "dependsOn": [
>             "[variables('galleryName')]"
>           ],
>           "properties": {
>             "architecture": "[parameters('architecture')]",
>             "hyperVGeneration": "V1",
>             "identifier": {
>               "offer": "rhcos",
>               "publisher": "RedHat",
>               "sku": "basic"
>             },
>             "osState": "Generalized",
>             "osType": "Linux"
>           },
>           "resources": [
>             {
>               "apiVersion": "2021-10-01",
>               "type": "versions",
>               "name": "[variables('imageRelease')]",
>               "location": "[variables('location')]",
>               "dependsOn": [
>                 "[variables('imageName')]"
>               ],
>               "properties": {
>                 "publishingProfile": {
>                   "storageAccountType": "Standard_LRS",
>                   "targetRegions": [
>                     {
>                       "name": "[variables('location')]",
>                       "regionalReplicaCount": "1"
>                     }
>                   ]
>                 },
>                 "storageProfile": {
>                   "osDiskImage": {
>                     "source": {
>                       "id": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount'))]",
>                       "uri": "[parameters('vhdBlobURL')]"
>                     }
>                   }
>                 }
>               }
>             }
>           ]
>         },
>         {
>           "apiVersion": "2021-10-01",
>           "type": "images",
>           "name": "[variables('imageNameGen2')]",
>           "location": "[variables('location')]",
>           "dependsOn": [
>             "[variables('galleryName')]"
>           ],
>           "properties": {
>             "architecture": "[parameters('architecture')]",
>             "hyperVGeneration": "V2",
>             "identifier": {
>               "offer": "rhcos-gen2",
>               "publisher": "RedHat-gen2",
>               "sku": "gen2"
>             },
>             "osState": "Generalized",
>             "osType": "Linux"
>           },
>           "resources": [
>             {
>               "apiVersion": "2021-10-01",
>               "type": "versions",
>               "name": "[variables('imageRelease')]",
>               "location": "[variables('location')]",
>               "dependsOn": [
>                 "[variables('imageNameGen2')]"
>               ],
>               "properties": {
>                 "publishingProfile": {
>                   "storageAccountType": "Standard_LRS",
>                   "targetRegions": [
>                     {
>                       "name": "[variables('location')]",
>                       "regionalReplicaCount": "1"
>                     }
>                   ]
>                 },
>                 "storageProfile": {
>                   "osDiskImage": {
>                     "source": {
>                       "id": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount'))]",
>                       "uri": "[parameters('vhdBlobURL')]"
>                     }
>                   }
>                 }
>               }
>             }
>           ]
>         }
>       ]
>     }
>   ]
> }</programlisting>
53348c58119,58365
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/03_infra.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "vnetBaseName": {
>       "type": "string",
>       "defaultValue": "",
>       "metadata" : {
>         "description" : "The specific customer vnet's base name (optional)"
>       }
>     },
>     "privateDNSZoneName" : {
>       "type" : "string",
>       "metadata" : {
>         "description" : "Name of the private DNS zone"
>       }
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-vnet')]",
>     "virtualNetworkID" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
>     "masterSubnetName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-master-subnet')]",
>     "masterSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('masterSubnetName'))]",
>     "masterPublicIpAddressName" : "[concat(parameters('baseName'), '-master-pip')]",
>     "masterPublicIpAddressID" : "[resourceId('Microsoft.Network/publicIPAddresses', variables('masterPublicIpAddressName'))]",
>     "masterLoadBalancerName" : "[parameters('baseName')]",
>     "masterLoadBalancerID" : "[resourceId('Microsoft.Network/loadBalancers', variables('masterLoadBalancerName'))]",
>     "internalLoadBalancerName" : "[concat(parameters('baseName'), '-internal-lb')]",
>     "internalLoadBalancerID" : "[resourceId('Microsoft.Network/loadBalancers', variables('internalLoadBalancerName'))]",
>     "skuName": "Standard"
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/publicIPAddresses",
>       "name" : "[variables('masterPublicIpAddressName')]",
>       "location" : "[variables('location')]",
>       "sku": {
>         "name": "[variables('skuName')]"
>       },
>       "properties" : {
>         "publicIPAllocationMethod" : "Static",
>         "dnsSettings" : {
>           "domainNameLabel" : "[variables('masterPublicIpAddressName')]"
>         }
>       }
>     },
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/loadBalancers",
>       "name" : "[variables('masterLoadBalancerName')]",
>       "location" : "[variables('location')]",
>       "sku": {
>         "name": "[variables('skuName')]"
>       },
>       "dependsOn" : [
>         "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIpAddressName'))]"
>       ],
>       "properties" : {
>         "frontendIPConfigurations" : [
>           {
>             "name" : "public-lb-ip-v4",
>             "properties" : {
>               "publicIPAddress" : {
>                 "id" : "[variables('masterPublicIpAddressID')]"
>               }
>             }
>           }
>         ],
>         "backendAddressPools" : [
>           {
>             "name" : "[variables('masterLoadBalancerName')]"
>           }
>         ],
>         "loadBalancingRules" : [
>           {
>             "name" : "api-internal",
>             "properties" : {
>               "frontendIPConfiguration" : {
>                 "id" :"[concat(variables('masterLoadBalancerID'), '/frontendIPConfigurations/public-lb-ip-v4')]"
>               },
>               "backendAddressPool" : {
>                 "id" : "[concat(variables('masterLoadBalancerID'), '/backendAddressPools/', variables('masterLoadBalancerName'))]"
>               },
>               "protocol" : "Tcp",
>               "loadDistribution" : "Default",
>               "idleTimeoutInMinutes" : 30,
>               "frontendPort" : 6443,
>               "backendPort" : 6443,
>               "probe" : {
>                 "id" : "[concat(variables('masterLoadBalancerID'), '/probes/api-internal-probe')]"
>               }
>             }
>           }
>         ],
>         "probes" : [
>           {
>             "name" : "api-internal-probe",
>             "properties" : {
>               "protocol" : "Https",
>               "port" : 6443,
>               "requestPath": "/readyz",
>               "intervalInSeconds" : 10,
>               "numberOfProbes" : 3
>             }
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/loadBalancers",
>       "name" : "[variables('internalLoadBalancerName')]",
>       "location" : "[variables('location')]",
>       "sku": {
>         "name": "[variables('skuName')]"
>       },
>       "properties" : {
>         "frontendIPConfigurations" : [
>           {
>             "name" : "internal-lb-ip",
>             "properties" : {
>               "privateIPAllocationMethod" : "Dynamic",
>               "subnet" : {
>                 "id" : "[variables('masterSubnetRef')]"
>               },
>               "privateIPAddressVersion" : "IPv4"
>             }
>           }
>         ],
>         "backendAddressPools" : [
>           {
>             "name" : "internal-lb-backend"
>           }
>         ],
>         "loadBalancingRules" : [
>           {
>             "name" : "api-internal",
>             "properties" : {
>               "frontendIPConfiguration" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/frontendIPConfigurations/internal-lb-ip')]"
>               },
>               "frontendPort" : 6443,
>               "backendPort" : 6443,
>               "enableFloatingIP" : false,
>               "idleTimeoutInMinutes" : 30,
>               "protocol" : "Tcp",
>               "enableTcpReset" : false,
>               "loadDistribution" : "Default",
>               "backendAddressPool" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/backendAddressPools/internal-lb-backend')]"
>               },
>               "probe" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/probes/api-internal-probe')]"
>               }
>             }
>           },
>           {
>             "name" : "sint",
>             "properties" : {
>               "frontendIPConfiguration" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/frontendIPConfigurations/internal-lb-ip')]"
>               },
>               "frontendPort" : 22623,
>               "backendPort" : 22623,
>               "enableFloatingIP" : false,
>               "idleTimeoutInMinutes" : 30,
>               "protocol" : "Tcp",
>               "enableTcpReset" : false,
>               "loadDistribution" : "Default",
>               "backendAddressPool" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/backendAddressPools/internal-lb-backend')]"
>               },
>               "probe" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/probes/sint-probe')]"
>               }
>             }
>           }
>         ],
>         "probes" : [
>           {
>             "name" : "api-internal-probe",
>             "properties" : {
>               "protocol" : "Https",
>               "port" : 6443,
>               "requestPath": "/readyz",
>               "intervalInSeconds" : 10,
>               "numberOfProbes" : 3
>             }
>           },
>           {
>             "name" : "sint-probe",
>             "properties" : {
>               "protocol" : "Https",
>               "port" : 22623,
>               "requestPath": "/healthz",
>               "intervalInSeconds" : 10,
>               "numberOfProbes" : 3
>             }
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion": "2018-09-01",
>       "type": "Microsoft.Network/privateDnsZones/A",
>       "name": "[concat(parameters('privateDNSZoneName'), '/api')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[concat('Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]"
>       ],
>       "properties": {
>         "ttl": 60,
>         "aRecords": [
>           {
>             "ipv4Address": "[reference(variables('internalLoadBalancerName')).frontendIPConfigurations[0].properties.privateIPAddress]"
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion": "2018-09-01",
>       "type": "Microsoft.Network/privateDnsZones/A",
>       "name": "[concat(parameters('privateDNSZoneName'), '/api-int')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[concat('Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]"
>       ],
>       "properties": {
>         "ttl": 60,
>         "aRecords": [
>           {
>             "ipv4Address": "[reference(variables('internalLoadBalancerName')).frontendIPConfigurations[0].properties.privateIPAddress]"
>           }
>         ]
>       }
>     }
>   ]
> }</programlisting>
53419c58436,58623
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/04_bootstrap.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "vnetBaseName": {
>       "type": "string",
>       "defaultValue": "",
>       "metadata" : {
>         "description" : "The specific customer vnet's base name (optional)"
>       }
>     },
>     "bootstrapIgnition" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Bootstrap ignition content for the bootstrap cluster"
>       }
>     },
>     "sshKeyData" : {
>       "type" : "securestring",
>       "defaultValue" : "Unused",
>       "metadata" : {
>         "description" : "Unused"
>       }
>     },
>     "bootstrapVMSize" : {
>       "type" : "string",
>       "defaultValue" : "Standard_D4s_v3",
>       "metadata" : {
>         "description" : "The size of the Bootstrap Virtual Machine"
>       }
>     },
>     "hyperVGen": {
>       "type": "string",
>       "metadata": {
>         "description": "VM generation image to use"
>       },
>       "defaultValue": "V2",
>       "allowedValues": [
>         "V1",
>         "V2"
>       ]
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-vnet')]",
>     "virtualNetworkID" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
>     "masterSubnetName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-master-subnet')]",
>     "masterSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('masterSubnetName'))]",
>     "masterLoadBalancerName" : "[parameters('baseName')]",
>     "internalLoadBalancerName" : "[concat(parameters('baseName'), '-internal-lb')]",
>     "sshKeyPath" : "/home/core/.ssh/authorized_keys",
>     "identityName" : "[concat(parameters('baseName'), '-identity')]",
>     "vmName" : "[concat(parameters('baseName'), '-bootstrap')]",
>     "nicName" : "[concat(variables('vmName'), '-nic')]",
>     "galleryName": "[concat('gallery_', replace(parameters('baseName'), '-', '_'))]",
>     "imageName" : "[concat(parameters('baseName'), if(equals(parameters('hyperVGen'), 'V2'), '-gen2', ''))]",
>     "clusterNsgName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-nsg')]",
>     "sshPublicIpAddressName" : "[concat(variables('vmName'), '-ssh-pip')]"
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/publicIPAddresses",
>       "name" : "[variables('sshPublicIpAddressName')]",
>       "location" : "[variables('location')]",
>       "sku": {
>         "name": "Standard"
>       },
>       "properties" : {
>         "publicIPAllocationMethod" : "Static",
>         "dnsSettings" : {
>           "domainNameLabel" : "[variables('sshPublicIpAddressName')]"
>         }
>       }
>     },
>     {
>       "apiVersion" : "2018-06-01",
>       "type" : "Microsoft.Network/networkInterfaces",
>       "name" : "[variables('nicName')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[resourceId('Microsoft.Network/publicIPAddresses', variables('sshPublicIpAddressName'))]"
>       ],
>       "properties" : {
>         "ipConfigurations" : [
>           {
>             "name" : "pipConfig",
>             "properties" : {
>               "privateIPAllocationMethod" : "Dynamic",
>               "publicIPAddress": {
>                 "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sshPublicIpAddressName'))]"
>               },
>               "subnet" : {
>                 "id" : "[variables('masterSubnetRef')]"
>               },
>               "loadBalancerBackendAddressPools" : [
>                 {
>                   "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'), '/backendAddressPools/', variables('masterLoadBalancerName'))]"
>                 },
>                 {
>                   "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'), '/backendAddressPools/internal-lb-backend')]"
>                 }
>               ]
>             }
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion" : "2018-06-01",
>       "type" : "Microsoft.Compute/virtualMachines",
>       "name" : "[variables('vmName')]",
>       "location" : "[variables('location')]",
>       "identity" : {
>         "type" : "userAssigned",
>         "userAssignedIdentities" : {
>           "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]" : {}
>         }
>       },
>       "dependsOn" : [
>         "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
>       ],
>       "properties" : {
>         "hardwareProfile" : {
>           "vmSize" : "[parameters('bootstrapVMSize')]"
>         },
>         "osProfile" : {
>           "computerName" : "[variables('vmName')]",
>           "adminUsername" : "core",
>           "adminPassword" : "NotActuallyApplied!",
>           "customData" : "[parameters('bootstrapIgnition')]",
>           "linuxConfiguration" : {
>             "disablePasswordAuthentication" : false
>           }
>         },
>         "storageProfile" : {
>           "imageReference": {
>             "id": "[resourceId('Microsoft.Compute/galleries/images', variables('galleryName'), variables('imageName'))]"
>           },
>           "osDisk" : {
>             "name": "[concat(variables('vmName'),'_OSDisk')]",
>             "osType" : "Linux",
>             "createOption" : "FromImage",
>             "managedDisk": {
>               "storageAccountType": "Premium_LRS"
>             },
>             "diskSizeGB" : 100
>           }
>         },
>         "networkProfile" : {
>           "networkInterfaces" : [
>             {
>               "id" : "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
>             }
>           ]
>         }
>       }
>     },
>     {
>       "apiVersion" : "2018-06-01",
>       "type": "Microsoft.Network/networkSecurityGroups/securityRules",
>       "name" : "[concat(variables('clusterNsgName'), '/bootstrap_ssh_in')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
>       ],
>       "properties": {
>         "protocol" : "Tcp",
>         "sourcePortRange" : "*",
>         "destinationPortRange" : "22",
>         "sourceAddressPrefix" : "*",
>         "destinationAddressPrefix" : "*",
>         "access" : "Allow",
>         "priority" : 100,
>         "direction" : "Inbound"
>       }
>     }
>   ]
> }</programlisting>
53486c58690,58875
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/05_masters.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "vnetBaseName": {
>       "type": "string",
>       "defaultValue": "",
>       "metadata" : {
>         "description" : "The specific customer vnet's base name (optional)"
>       }
>     },
>     "masterIgnition" : {
>       "type" : "string",
>       "metadata" : {
>         "description" : "Ignition content for the master nodes"
>       }
>     },
>     "numberOfMasters" : {
>       "type" : "int",
>       "defaultValue" : 3,
>       "minValue" : 2,
>       "maxValue" : 30,
>       "metadata" : {
>         "description" : "Number of OpenShift masters to deploy"
>       }
>     },
>     "sshKeyData" : {
>       "type" : "securestring",
>       "defaultValue" : "Unused",
>       "metadata" : {
>         "description" : "Unused"
>       }
>     },
>     "privateDNSZoneName" : {
>       "type" : "string",
>       "defaultValue" : "",
>       "metadata" : {
>         "description" : "unused"
>       }
>     },
>     "masterVMSize" : {
>       "type" : "string",
>       "defaultValue" : "Standard_D8s_v3",
>       "metadata" : {
>         "description" : "The size of the Master Virtual Machines"
>       }
>     },
>     "diskSizeGB" : {
>       "type" : "int",
>       "defaultValue" : 1024,
>       "metadata" : {
>         "description" : "Size of the Master VM OS disk, in GB"
>       }
>     },
>     "hyperVGen": {
>       "type": "string",
>       "metadata": {
>         "description": "VM generation image to use"
>       },
>       "defaultValue": "V2",
>       "allowedValues": [
>         "V1",
>         "V2"
>       ]
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-vnet')]",
>     "virtualNetworkID" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
>     "masterSubnetName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-master-subnet')]",
>     "masterSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('masterSubnetName'))]",
>     "masterLoadBalancerName" : "[parameters('baseName')]",
>     "internalLoadBalancerName" : "[concat(parameters('baseName'), '-internal-lb')]",
>     "sshKeyPath" : "/home/core/.ssh/authorized_keys",
>     "identityName" : "[concat(parameters('baseName'), '-identity')]",
>     "galleryName": "[concat('gallery_', replace(parameters('baseName'), '-', '_'))]",
>     "imageName" : "[concat(parameters('baseName'), if(equals(parameters('hyperVGen'), 'V2'), '-gen2', ''))]",
>     "copy" : [
>       {
>         "name" : "vmNames",
>         "count" :  "[parameters('numberOfMasters')]",
>         "input" : "[concat(parameters('baseName'), '-master-', copyIndex('vmNames'))]"
>       }
>     ]
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2018-06-01",
>       "type" : "Microsoft.Network/networkInterfaces",
>       "copy" : {
>         "name" : "nicCopy",
>         "count" : "[length(variables('vmNames'))]"
>       },
>       "name" : "[concat(variables('vmNames')[copyIndex()], '-nic')]",
>       "location" : "[variables('location')]",
>       "properties" : {
>         "ipConfigurations" : [
>           {
>             "name" : "pipConfig",
>             "properties" : {
>               "privateIPAllocationMethod" : "Dynamic",
>               "subnet" : {
>                 "id" : "[variables('masterSubnetRef')]"
>               },
>               "loadBalancerBackendAddressPools" : [
>                 {
>                   "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'), '/backendAddressPools/', variables('masterLoadBalancerName'))]"
>                 },
>                 {
>                   "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'), '/backendAddressPools/internal-lb-backend')]"
>                 }
>               ]
>             }
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion" : "2018-06-01",
>       "type" : "Microsoft.Compute/virtualMachines",
>       "copy" : {
>         "name" : "vmCopy",
>         "count" : "[length(variables('vmNames'))]"
>       },
>       "name" : "[variables('vmNames')[copyIndex()]]",
>       "location" : "[variables('location')]",
>       "identity" : {
>         "type" : "userAssigned",
>         "userAssignedIdentities" : {
>           "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]" : {}
>         }
>       },
>       "dependsOn" : [
>         "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmNames')[copyIndex()], '-nic'))]"
>       ],
>       "properties" : {
>         "hardwareProfile" : {
>           "vmSize" : "[parameters('masterVMSize')]"
>         },
>         "osProfile" : {
>           "computerName" : "[variables('vmNames')[copyIndex()]]",
>           "adminUsername" : "core",
>           "adminPassword" : "NotActuallyApplied!",
>           "customData" : "[parameters('masterIgnition')]",
>           "linuxConfiguration" : {
>             "disablePasswordAuthentication" : false
>           }
>         },
>         "storageProfile" : {
>           "imageReference": {
>             "id": "[resourceId('Microsoft.Compute/galleries/images', variables('galleryName'), variables('imageName'))]"
>           },
>           "osDisk" : {
>             "name": "[concat(variables('vmNames')[copyIndex()], '_OSDisk')]",
>             "osType" : "Linux",
>             "createOption" : "FromImage",
>             "caching": "ReadOnly",
>             "writeAcceleratorEnabled": false,
>             "managedDisk": {
>               "storageAccountType": "Premium_LRS"
>             },
>             "diskSizeGB" : "[parameters('diskSizeGB')]"
>           }
>         },
>         "networkProfile" : {
>           "networkInterfaces" : [
>             {
>               "id" : "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNames')[copyIndex()], '-nic'))]",
>               "properties": {
>                 "primary": false
>               }
>             }
>           ]
>         }
>       }
>     }
>   ]
> }</programlisting>
53625c59014,59187
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/06_workers.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "vnetBaseName": {
>       "type": "string",
>       "defaultValue": "",
>       "metadata" : {
>         "description" : "The specific customer vnet's base name (optional)"
>       }
>     },
>     "workerIgnition" : {
>       "type" : "string",
>       "metadata" : {
>         "description" : "Ignition content for the worker nodes"
>       }
>     },
>     "numberOfNodes" : {
>       "type" : "int",
>       "defaultValue" : 3,
>       "minValue" : 2,
>       "maxValue" : 30,
>       "metadata" : {
>         "description" : "Number of OpenShift compute nodes to deploy"
>       }
>     },
>     "sshKeyData" : {
>       "type" : "securestring",
>       "defaultValue" : "Unused",
>       "metadata" : {
>         "description" : "Unused"
>       }
>     },
>     "nodeVMSize" : {
>       "type" : "string",
>       "defaultValue" : "Standard_D4s_v3",
>       "metadata" : {
>         "description" : "The size of the each Node Virtual Machine"
>       }
>     },
>     "hyperVGen": {
>       "type": "string",
>       "metadata": {
>         "description": "VM generation image to use"
>       },
>       "defaultValue": "V2",
>       "allowedValues": [
>         "V1",
>         "V2"
>       ]
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-vnet')]",
>     "virtualNetworkID" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
>     "nodeSubnetName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-worker-subnet')]",
>     "nodeSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('nodeSubnetName'))]",
>     "infraLoadBalancerName" : "[parameters('baseName')]",
>     "sshKeyPath" : "/home/capi/.ssh/authorized_keys",
>     "identityName" : "[concat(parameters('baseName'), '-identity')]",
>     "galleryName": "[concat('gallery_', replace(parameters('baseName'), '-', '_'))]",
>     "imageName" : "[concat(parameters('baseName'), if(equals(parameters('hyperVGen'), 'V2'), '-gen2', ''))]",
>     "copy" : [
>       {
>         "name" : "vmNames",
>         "count" :  "[parameters('numberOfNodes')]",
>         "input" : "[concat(parameters('baseName'), '-worker-', variables('location'), '-', copyIndex('vmNames', 1))]"
>       }
>     ]
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2019-05-01",
>       "name" : "[concat('node', copyIndex())]",
>       "type" : "Microsoft.Resources/deployments",
>       "copy" : {
>         "name" : "nodeCopy",
>         "count" : "[length(variables('vmNames'))]"
>       },
>       "properties" : {
>         "mode" : "Incremental",
>         "template" : {
>           "$schema" : "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>           "contentVersion" : "1.0.0.0",
>           "resources" : [
>             {
>               "apiVersion" : "2018-06-01",
>               "type" : "Microsoft.Network/networkInterfaces",
>               "name" : "[concat(variables('vmNames')[copyIndex()], '-nic')]",
>               "location" : "[variables('location')]",
>               "properties" : {
>                 "ipConfigurations" : [
>                   {
>                     "name" : "pipConfig",
>                     "properties" : {
>                       "privateIPAllocationMethod" : "Dynamic",
>                       "subnet" : {
>                         "id" : "[variables('nodeSubnetRef')]"
>                       }
>                     }
>                   }
>                 ]
>               }
>             },
>             {
>               "apiVersion" : "2018-06-01",
>               "type" : "Microsoft.Compute/virtualMachines",
>               "name" : "[variables('vmNames')[copyIndex()]]",
>               "location" : "[variables('location')]",
>               "tags" : {
>                 "kubernetes.io-cluster-ffranzupi": "owned"
>               },
>               "identity" : {
>                 "type" : "userAssigned",
>                 "userAssignedIdentities" : {
>                   "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]" : {}
>                 }
>               },
>               "dependsOn" : [
>                 "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmNames')[copyIndex()], '-nic'))]"
>               ],
>               "properties" : {
>                 "hardwareProfile" : {
>                   "vmSize" : "[parameters('nodeVMSize')]"
>                 },
>                 "osProfile" : {
>                   "computerName" : "[variables('vmNames')[copyIndex()]]",
>                   "adminUsername" : "capi",
>                   "adminPassword" : "NotActuallyApplied!",
>                   "customData" : "[parameters('workerIgnition')]",
>                   "linuxConfiguration" : {
>                     "disablePasswordAuthentication" : false
>                   }
>                 },
>                 "storageProfile" : {
>                   "imageReference": {
>                     "id": "[resourceId('Microsoft.Compute/galleries/images', variables('galleryName'), variables('imageName'))]"
>                   },
>                   "osDisk" : {
>                     "name": "[concat(variables('vmNames')[copyIndex()],'_OSDisk')]",
>                     "osType" : "Linux",
>                     "createOption" : "FromImage",
>                     "managedDisk": {
>                       "storageAccountType": "Premium_LRS"
>                     },
>                     "diskSizeGB": 128
>                   }
>                 },
>                 "networkProfile" : {
>                   "networkInterfaces" : [
>                     {
>                       "id" : "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNames')[copyIndex()], '-nic'))]",
>                       "properties": {
>                         "primary": true
>                       }
>                     }
>                   ]
>                 }
>               }
>             }
>           ]
>         }
>       }
>     }
>   ]
> }</programlisting>
53673,53674c59235
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
53675a59237
> <title>Procedure</title>
53702,53703c59264
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
53704a59266
> <title>Procedure</title>
54034d59595
< 
55351c60912,60958
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
55359c60966,60973
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
56343c61957,62042
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/01_vnet.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(parameters('baseName'), '-vnet')]",
>     "addressPrefix" : "10.0.0.0/16",
>     "masterSubnetName" : "[concat(parameters('baseName'), '-master-subnet')]",
>     "masterSubnetPrefix" : "10.0.0.0/24",
>     "nodeSubnetName" : "[concat(parameters('baseName'), '-worker-subnet')]",
>     "nodeSubnetPrefix" : "10.0.1.0/24",
>     "clusterNsgName" : "[concat(parameters('baseName'), '-nsg')]"
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/virtualNetworks",
>       "name" : "[variables('virtualNetworkName')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[concat('Microsoft.Network/networkSecurityGroups/', variables('clusterNsgName'))]"
>       ],
>       "properties" : {
>         "addressSpace" : {
>           "addressPrefixes" : [
>             "[variables('addressPrefix')]"
>           ]
>         },
>         "subnets" : [
>           {
>             "name" : "[variables('masterSubnetName')]",
>             "properties" : {
>               "addressPrefix" : "[variables('masterSubnetPrefix')]",
>               "serviceEndpoints": [],
>               "networkSecurityGroup" : {
>                 "id" : "[resourceId('Microsoft.Network/networkSecurityGroups', variables('clusterNsgName'))]"
>               }
>             }
>           },
>           {
>             "name" : "[variables('nodeSubnetName')]",
>             "properties" : {
>               "addressPrefix" : "[variables('nodeSubnetPrefix')]",
>               "serviceEndpoints": [],
>               "networkSecurityGroup" : {
>                 "id" : "[resourceId('Microsoft.Network/networkSecurityGroups', variables('clusterNsgName'))]"
>               }
>             }
>           }
>         ]
>       }
>     },
>     {
>       "type" : "Microsoft.Network/networkSecurityGroups",
>       "name" : "[variables('clusterNsgName')]",
>       "apiVersion" : "2018-10-01",
>       "location" : "[variables('location')]",
>       "properties" : {
>         "securityRules" : [
>           {
>             "name" : "apiserver_in",
>             "properties" : {
>               "protocol" : "Tcp",
>               "sourcePortRange" : "*",
>               "destinationPortRange" : "6443",
>               "sourceAddressPrefix" : "*",
>               "destinationAddressPrefix" : "*",
>               "access" : "Allow",
>               "priority" : 101,
>               "direction" : "Inbound"
>             }
>           }
>         ]
>       }
>     }
>   ]
> }</programlisting>
56407c62106,62258
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/02_storage.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
>   "contentVersion": "1.0.0.0",
>   "parameters": {
>     "architecture": {
>       "type": "string",
>       "metadata": {
>         "description": "The architecture of the Virtual Machines"
>       },
>       "defaultValue": "x64",
>       "allowedValues": [
>         "Arm64",
>         "x64"
>       ]
>     },
>     "baseName": {
>       "type": "string",
>       "minLength": 1,
>       "metadata": {
>         "description": "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "storageAccount": {
>       "type": "string",
>       "metadata": {
>         "description": "The Storage Account name"
>       }
>     },
>     "vhdBlobURL": {
>       "type": "string",
>       "metadata": {
>         "description": "URL pointing to the blob where the VHD to be used to create master and worker machines is located"
>       }
>     }
>   },
>   "variables": {
>     "location": "[resourceGroup().location]",
>     "galleryName": "[concat('gallery_', replace(parameters('baseName'), '-', '_'))]",
>     "imageName": "[parameters('baseName')]",
>     "imageNameGen2": "[concat(parameters('baseName'), '-gen2')]",
>     "imageRelease": "1.0.0"
>   },
>   "resources": [
>     {
>       "apiVersion": "2021-10-01",
>       "type": "Microsoft.Compute/galleries",
>       "name": "[variables('galleryName')]",
>       "location": "[variables('location')]",
>       "resources": [
>         {
>           "apiVersion": "2021-10-01",
>           "type": "images",
>           "name": "[variables('imageName')]",
>           "location": "[variables('location')]",
>           "dependsOn": [
>             "[variables('galleryName')]"
>           ],
>           "properties": {
>             "architecture": "[parameters('architecture')]",
>             "hyperVGeneration": "V1",
>             "identifier": {
>               "offer": "rhcos",
>               "publisher": "RedHat",
>               "sku": "basic"
>             },
>             "osState": "Generalized",
>             "osType": "Linux"
>           },
>           "resources": [
>             {
>               "apiVersion": "2021-10-01",
>               "type": "versions",
>               "name": "[variables('imageRelease')]",
>               "location": "[variables('location')]",
>               "dependsOn": [
>                 "[variables('imageName')]"
>               ],
>               "properties": {
>                 "publishingProfile": {
>                   "storageAccountType": "Standard_LRS",
>                   "targetRegions": [
>                     {
>                       "name": "[variables('location')]",
>                       "regionalReplicaCount": "1"
>                     }
>                   ]
>                 },
>                 "storageProfile": {
>                   "osDiskImage": {
>                     "source": {
>                       "id": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount'))]",
>                       "uri": "[parameters('vhdBlobURL')]"
>                     }
>                   }
>                 }
>               }
>             }
>           ]
>         },
>         {
>           "apiVersion": "2021-10-01",
>           "type": "images",
>           "name": "[variables('imageNameGen2')]",
>           "location": "[variables('location')]",
>           "dependsOn": [
>             "[variables('galleryName')]"
>           ],
>           "properties": {
>             "architecture": "[parameters('architecture')]",
>             "hyperVGeneration": "V2",
>             "identifier": {
>               "offer": "rhcos-gen2",
>               "publisher": "RedHat-gen2",
>               "sku": "gen2"
>             },
>             "osState": "Generalized",
>             "osType": "Linux"
>           },
>           "resources": [
>             {
>               "apiVersion": "2021-10-01",
>               "type": "versions",
>               "name": "[variables('imageRelease')]",
>               "location": "[variables('location')]",
>               "dependsOn": [
>                 "[variables('imageNameGen2')]"
>               ],
>               "properties": {
>                 "publishingProfile": {
>                   "storageAccountType": "Standard_LRS",
>                   "targetRegions": [
>                     {
>                       "name": "[variables('location')]",
>                       "regionalReplicaCount": "1"
>                     }
>                   ]
>                 },
>                 "storageProfile": {
>                   "osDiskImage": {
>                     "source": {
>                       "id": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount'))]",
>                       "uri": "[parameters('vhdBlobURL')]"
>                     }
>                   }
>                 }
>               }
>             }
>           ]
>         }
>       ]
>     }
>   ]
> }</programlisting>
56613c62464,62710
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/03_infra.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "vnetBaseName": {
>       "type": "string",
>       "defaultValue": "",
>       "metadata" : {
>         "description" : "The specific customer vnet's base name (optional)"
>       }
>     },
>     "privateDNSZoneName" : {
>       "type" : "string",
>       "metadata" : {
>         "description" : "Name of the private DNS zone"
>       }
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-vnet')]",
>     "virtualNetworkID" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
>     "masterSubnetName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-master-subnet')]",
>     "masterSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('masterSubnetName'))]",
>     "masterPublicIpAddressName" : "[concat(parameters('baseName'), '-master-pip')]",
>     "masterPublicIpAddressID" : "[resourceId('Microsoft.Network/publicIPAddresses', variables('masterPublicIpAddressName'))]",
>     "masterLoadBalancerName" : "[parameters('baseName')]",
>     "masterLoadBalancerID" : "[resourceId('Microsoft.Network/loadBalancers', variables('masterLoadBalancerName'))]",
>     "internalLoadBalancerName" : "[concat(parameters('baseName'), '-internal-lb')]",
>     "internalLoadBalancerID" : "[resourceId('Microsoft.Network/loadBalancers', variables('internalLoadBalancerName'))]",
>     "skuName": "Standard"
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/publicIPAddresses",
>       "name" : "[variables('masterPublicIpAddressName')]",
>       "location" : "[variables('location')]",
>       "sku": {
>         "name": "[variables('skuName')]"
>       },
>       "properties" : {
>         "publicIPAllocationMethod" : "Static",
>         "dnsSettings" : {
>           "domainNameLabel" : "[variables('masterPublicIpAddressName')]"
>         }
>       }
>     },
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/loadBalancers",
>       "name" : "[variables('masterLoadBalancerName')]",
>       "location" : "[variables('location')]",
>       "sku": {
>         "name": "[variables('skuName')]"
>       },
>       "dependsOn" : [
>         "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIpAddressName'))]"
>       ],
>       "properties" : {
>         "frontendIPConfigurations" : [
>           {
>             "name" : "public-lb-ip-v4",
>             "properties" : {
>               "publicIPAddress" : {
>                 "id" : "[variables('masterPublicIpAddressID')]"
>               }
>             }
>           }
>         ],
>         "backendAddressPools" : [
>           {
>             "name" : "[variables('masterLoadBalancerName')]"
>           }
>         ],
>         "loadBalancingRules" : [
>           {
>             "name" : "api-internal",
>             "properties" : {
>               "frontendIPConfiguration" : {
>                 "id" :"[concat(variables('masterLoadBalancerID'), '/frontendIPConfigurations/public-lb-ip-v4')]"
>               },
>               "backendAddressPool" : {
>                 "id" : "[concat(variables('masterLoadBalancerID'), '/backendAddressPools/', variables('masterLoadBalancerName'))]"
>               },
>               "protocol" : "Tcp",
>               "loadDistribution" : "Default",
>               "idleTimeoutInMinutes" : 30,
>               "frontendPort" : 6443,
>               "backendPort" : 6443,
>               "probe" : {
>                 "id" : "[concat(variables('masterLoadBalancerID'), '/probes/api-internal-probe')]"
>               }
>             }
>           }
>         ],
>         "probes" : [
>           {
>             "name" : "api-internal-probe",
>             "properties" : {
>               "protocol" : "Https",
>               "port" : 6443,
>               "requestPath": "/readyz",
>               "intervalInSeconds" : 10,
>               "numberOfProbes" : 3
>             }
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/loadBalancers",
>       "name" : "[variables('internalLoadBalancerName')]",
>       "location" : "[variables('location')]",
>       "sku": {
>         "name": "[variables('skuName')]"
>       },
>       "properties" : {
>         "frontendIPConfigurations" : [
>           {
>             "name" : "internal-lb-ip",
>             "properties" : {
>               "privateIPAllocationMethod" : "Dynamic",
>               "subnet" : {
>                 "id" : "[variables('masterSubnetRef')]"
>               },
>               "privateIPAddressVersion" : "IPv4"
>             }
>           }
>         ],
>         "backendAddressPools" : [
>           {
>             "name" : "internal-lb-backend"
>           }
>         ],
>         "loadBalancingRules" : [
>           {
>             "name" : "api-internal",
>             "properties" : {
>               "frontendIPConfiguration" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/frontendIPConfigurations/internal-lb-ip')]"
>               },
>               "frontendPort" : 6443,
>               "backendPort" : 6443,
>               "enableFloatingIP" : false,
>               "idleTimeoutInMinutes" : 30,
>               "protocol" : "Tcp",
>               "enableTcpReset" : false,
>               "loadDistribution" : "Default",
>               "backendAddressPool" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/backendAddressPools/internal-lb-backend')]"
>               },
>               "probe" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/probes/api-internal-probe')]"
>               }
>             }
>           },
>           {
>             "name" : "sint",
>             "properties" : {
>               "frontendIPConfiguration" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/frontendIPConfigurations/internal-lb-ip')]"
>               },
>               "frontendPort" : 22623,
>               "backendPort" : 22623,
>               "enableFloatingIP" : false,
>               "idleTimeoutInMinutes" : 30,
>               "protocol" : "Tcp",
>               "enableTcpReset" : false,
>               "loadDistribution" : "Default",
>               "backendAddressPool" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/backendAddressPools/internal-lb-backend')]"
>               },
>               "probe" : {
>                 "id" : "[concat(variables('internalLoadBalancerID'), '/probes/sint-probe')]"
>               }
>             }
>           }
>         ],
>         "probes" : [
>           {
>             "name" : "api-internal-probe",
>             "properties" : {
>               "protocol" : "Https",
>               "port" : 6443,
>               "requestPath": "/readyz",
>               "intervalInSeconds" : 10,
>               "numberOfProbes" : 3
>             }
>           },
>           {
>             "name" : "sint-probe",
>             "properties" : {
>               "protocol" : "Https",
>               "port" : 22623,
>               "requestPath": "/healthz",
>               "intervalInSeconds" : 10,
>               "numberOfProbes" : 3
>             }
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion": "2018-09-01",
>       "type": "Microsoft.Network/privateDnsZones/A",
>       "name": "[concat(parameters('privateDNSZoneName'), '/api')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[concat('Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]"
>       ],
>       "properties": {
>         "ttl": 60,
>         "aRecords": [
>           {
>             "ipv4Address": "[reference(variables('internalLoadBalancerName')).frontendIPConfigurations[0].properties.privateIPAddress]"
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion": "2018-09-01",
>       "type": "Microsoft.Network/privateDnsZones/A",
>       "name": "[concat(parameters('privateDNSZoneName'), '/api-int')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[concat('Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]"
>       ],
>       "properties": {
>         "ttl": 60,
>         "aRecords": [
>           {
>             "ipv4Address": "[reference(variables('internalLoadBalancerName')).frontendIPConfigurations[0].properties.privateIPAddress]"
>           }
>         ]
>       }
>     }
>   ]
> }</programlisting>
56684c62781,62968
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/04_bootstrap.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "vnetBaseName": {
>       "type": "string",
>       "defaultValue": "",
>       "metadata" : {
>         "description" : "The specific customer vnet's base name (optional)"
>       }
>     },
>     "bootstrapIgnition" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Bootstrap ignition content for the bootstrap cluster"
>       }
>     },
>     "sshKeyData" : {
>       "type" : "securestring",
>       "defaultValue" : "Unused",
>       "metadata" : {
>         "description" : "Unused"
>       }
>     },
>     "bootstrapVMSize" : {
>       "type" : "string",
>       "defaultValue" : "Standard_D4s_v3",
>       "metadata" : {
>         "description" : "The size of the Bootstrap Virtual Machine"
>       }
>     },
>     "hyperVGen": {
>       "type": "string",
>       "metadata": {
>         "description": "VM generation image to use"
>       },
>       "defaultValue": "V2",
>       "allowedValues": [
>         "V1",
>         "V2"
>       ]
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-vnet')]",
>     "virtualNetworkID" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
>     "masterSubnetName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-master-subnet')]",
>     "masterSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('masterSubnetName'))]",
>     "masterLoadBalancerName" : "[parameters('baseName')]",
>     "internalLoadBalancerName" : "[concat(parameters('baseName'), '-internal-lb')]",
>     "sshKeyPath" : "/home/core/.ssh/authorized_keys",
>     "identityName" : "[concat(parameters('baseName'), '-identity')]",
>     "vmName" : "[concat(parameters('baseName'), '-bootstrap')]",
>     "nicName" : "[concat(variables('vmName'), '-nic')]",
>     "galleryName": "[concat('gallery_', replace(parameters('baseName'), '-', '_'))]",
>     "imageName" : "[concat(parameters('baseName'), if(equals(parameters('hyperVGen'), 'V2'), '-gen2', ''))]",
>     "clusterNsgName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-nsg')]",
>     "sshPublicIpAddressName" : "[concat(variables('vmName'), '-ssh-pip')]"
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2018-12-01",
>       "type" : "Microsoft.Network/publicIPAddresses",
>       "name" : "[variables('sshPublicIpAddressName')]",
>       "location" : "[variables('location')]",
>       "sku": {
>         "name": "Standard"
>       },
>       "properties" : {
>         "publicIPAllocationMethod" : "Static",
>         "dnsSettings" : {
>           "domainNameLabel" : "[variables('sshPublicIpAddressName')]"
>         }
>       }
>     },
>     {
>       "apiVersion" : "2018-06-01",
>       "type" : "Microsoft.Network/networkInterfaces",
>       "name" : "[variables('nicName')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[resourceId('Microsoft.Network/publicIPAddresses', variables('sshPublicIpAddressName'))]"
>       ],
>       "properties" : {
>         "ipConfigurations" : [
>           {
>             "name" : "pipConfig",
>             "properties" : {
>               "privateIPAllocationMethod" : "Dynamic",
>               "publicIPAddress": {
>                 "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sshPublicIpAddressName'))]"
>               },
>               "subnet" : {
>                 "id" : "[variables('masterSubnetRef')]"
>               },
>               "loadBalancerBackendAddressPools" : [
>                 {
>                   "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'), '/backendAddressPools/', variables('masterLoadBalancerName'))]"
>                 },
>                 {
>                   "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'), '/backendAddressPools/internal-lb-backend')]"
>                 }
>               ]
>             }
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion" : "2018-06-01",
>       "type" : "Microsoft.Compute/virtualMachines",
>       "name" : "[variables('vmName')]",
>       "location" : "[variables('location')]",
>       "identity" : {
>         "type" : "userAssigned",
>         "userAssignedIdentities" : {
>           "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]" : {}
>         }
>       },
>       "dependsOn" : [
>         "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
>       ],
>       "properties" : {
>         "hardwareProfile" : {
>           "vmSize" : "[parameters('bootstrapVMSize')]"
>         },
>         "osProfile" : {
>           "computerName" : "[variables('vmName')]",
>           "adminUsername" : "core",
>           "adminPassword" : "NotActuallyApplied!",
>           "customData" : "[parameters('bootstrapIgnition')]",
>           "linuxConfiguration" : {
>             "disablePasswordAuthentication" : false
>           }
>         },
>         "storageProfile" : {
>           "imageReference": {
>             "id": "[resourceId('Microsoft.Compute/galleries/images', variables('galleryName'), variables('imageName'))]"
>           },
>           "osDisk" : {
>             "name": "[concat(variables('vmName'),'_OSDisk')]",
>             "osType" : "Linux",
>             "createOption" : "FromImage",
>             "managedDisk": {
>               "storageAccountType": "Premium_LRS"
>             },
>             "diskSizeGB" : 100
>           }
>         },
>         "networkProfile" : {
>           "networkInterfaces" : [
>             {
>               "id" : "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
>             }
>           ]
>         }
>       }
>     },
>     {
>       "apiVersion" : "2018-06-01",
>       "type": "Microsoft.Network/networkSecurityGroups/securityRules",
>       "name" : "[concat(variables('clusterNsgName'), '/bootstrap_ssh_in')]",
>       "location" : "[variables('location')]",
>       "dependsOn" : [
>         "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
>       ],
>       "properties": {
>         "protocol" : "Tcp",
>         "sourcePortRange" : "*",
>         "destinationPortRange" : "22",
>         "sourceAddressPrefix" : "*",
>         "destinationAddressPrefix" : "*",
>         "access" : "Allow",
>         "priority" : 100,
>         "direction" : "Inbound"
>       }
>     }
>   ]
> }</programlisting>
56751c63035,63220
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/05_masters.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "vnetBaseName": {
>       "type": "string",
>       "defaultValue": "",
>       "metadata" : {
>         "description" : "The specific customer vnet's base name (optional)"
>       }
>     },
>     "masterIgnition" : {
>       "type" : "string",
>       "metadata" : {
>         "description" : "Ignition content for the master nodes"
>       }
>     },
>     "numberOfMasters" : {
>       "type" : "int",
>       "defaultValue" : 3,
>       "minValue" : 2,
>       "maxValue" : 30,
>       "metadata" : {
>         "description" : "Number of OpenShift masters to deploy"
>       }
>     },
>     "sshKeyData" : {
>       "type" : "securestring",
>       "defaultValue" : "Unused",
>       "metadata" : {
>         "description" : "Unused"
>       }
>     },
>     "privateDNSZoneName" : {
>       "type" : "string",
>       "defaultValue" : "",
>       "metadata" : {
>         "description" : "unused"
>       }
>     },
>     "masterVMSize" : {
>       "type" : "string",
>       "defaultValue" : "Standard_D8s_v3",
>       "metadata" : {
>         "description" : "The size of the Master Virtual Machines"
>       }
>     },
>     "diskSizeGB" : {
>       "type" : "int",
>       "defaultValue" : 1024,
>       "metadata" : {
>         "description" : "Size of the Master VM OS disk, in GB"
>       }
>     },
>     "hyperVGen": {
>       "type": "string",
>       "metadata": {
>         "description": "VM generation image to use"
>       },
>       "defaultValue": "V2",
>       "allowedValues": [
>         "V1",
>         "V2"
>       ]
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-vnet')]",
>     "virtualNetworkID" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
>     "masterSubnetName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-master-subnet')]",
>     "masterSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('masterSubnetName'))]",
>     "masterLoadBalancerName" : "[parameters('baseName')]",
>     "internalLoadBalancerName" : "[concat(parameters('baseName'), '-internal-lb')]",
>     "sshKeyPath" : "/home/core/.ssh/authorized_keys",
>     "identityName" : "[concat(parameters('baseName'), '-identity')]",
>     "galleryName": "[concat('gallery_', replace(parameters('baseName'), '-', '_'))]",
>     "imageName" : "[concat(parameters('baseName'), if(equals(parameters('hyperVGen'), 'V2'), '-gen2', ''))]",
>     "copy" : [
>       {
>         "name" : "vmNames",
>         "count" :  "[parameters('numberOfMasters')]",
>         "input" : "[concat(parameters('baseName'), '-master-', copyIndex('vmNames'))]"
>       }
>     ]
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2018-06-01",
>       "type" : "Microsoft.Network/networkInterfaces",
>       "copy" : {
>         "name" : "nicCopy",
>         "count" : "[length(variables('vmNames'))]"
>       },
>       "name" : "[concat(variables('vmNames')[copyIndex()], '-nic')]",
>       "location" : "[variables('location')]",
>       "properties" : {
>         "ipConfigurations" : [
>           {
>             "name" : "pipConfig",
>             "properties" : {
>               "privateIPAllocationMethod" : "Dynamic",
>               "subnet" : {
>                 "id" : "[variables('masterSubnetRef')]"
>               },
>               "loadBalancerBackendAddressPools" : [
>                 {
>                   "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'), '/backendAddressPools/', variables('masterLoadBalancerName'))]"
>                 },
>                 {
>                   "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'), '/backendAddressPools/internal-lb-backend')]"
>                 }
>               ]
>             }
>           }
>         ]
>       }
>     },
>     {
>       "apiVersion" : "2018-06-01",
>       "type" : "Microsoft.Compute/virtualMachines",
>       "copy" : {
>         "name" : "vmCopy",
>         "count" : "[length(variables('vmNames'))]"
>       },
>       "name" : "[variables('vmNames')[copyIndex()]]",
>       "location" : "[variables('location')]",
>       "identity" : {
>         "type" : "userAssigned",
>         "userAssignedIdentities" : {
>           "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]" : {}
>         }
>       },
>       "dependsOn" : [
>         "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmNames')[copyIndex()], '-nic'))]"
>       ],
>       "properties" : {
>         "hardwareProfile" : {
>           "vmSize" : "[parameters('masterVMSize')]"
>         },
>         "osProfile" : {
>           "computerName" : "[variables('vmNames')[copyIndex()]]",
>           "adminUsername" : "core",
>           "adminPassword" : "NotActuallyApplied!",
>           "customData" : "[parameters('masterIgnition')]",
>           "linuxConfiguration" : {
>             "disablePasswordAuthentication" : false
>           }
>         },
>         "storageProfile" : {
>           "imageReference": {
>             "id": "[resourceId('Microsoft.Compute/galleries/images', variables('galleryName'), variables('imageName'))]"
>           },
>           "osDisk" : {
>             "name": "[concat(variables('vmNames')[copyIndex()], '_OSDisk')]",
>             "osType" : "Linux",
>             "createOption" : "FromImage",
>             "caching": "ReadOnly",
>             "writeAcceleratorEnabled": false,
>             "managedDisk": {
>               "storageAccountType": "Premium_LRS"
>             },
>             "diskSizeGB" : "[parameters('diskSizeGB')]"
>           }
>         },
>         "networkProfile" : {
>           "networkInterfaces" : [
>             {
>               "id" : "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNames')[copyIndex()], '-nic'))]",
>               "properties": {
>                 "primary": false
>               }
>             }
>           ]
>         }
>       }
>     }
>   ]
> }</programlisting>
56893c63362,63535
< <programlisting language="json" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/06_workers.json[role=include]</programlisting>
---
> <programlisting language="json" linenumbering="unnumbered">{
>   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>   "contentVersion" : "1.0.0.0",
>   "parameters" : {
>     "baseName" : {
>       "type" : "string",
>       "minLength" : 1,
>       "metadata" : {
>         "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
>       }
>     },
>     "vnetBaseName": {
>       "type": "string",
>       "defaultValue": "",
>       "metadata" : {
>         "description" : "The specific customer vnet's base name (optional)"
>       }
>     },
>     "workerIgnition" : {
>       "type" : "string",
>       "metadata" : {
>         "description" : "Ignition content for the worker nodes"
>       }
>     },
>     "numberOfNodes" : {
>       "type" : "int",
>       "defaultValue" : 3,
>       "minValue" : 2,
>       "maxValue" : 30,
>       "metadata" : {
>         "description" : "Number of OpenShift compute nodes to deploy"
>       }
>     },
>     "sshKeyData" : {
>       "type" : "securestring",
>       "defaultValue" : "Unused",
>       "metadata" : {
>         "description" : "Unused"
>       }
>     },
>     "nodeVMSize" : {
>       "type" : "string",
>       "defaultValue" : "Standard_D4s_v3",
>       "metadata" : {
>         "description" : "The size of the each Node Virtual Machine"
>       }
>     },
>     "hyperVGen": {
>       "type": "string",
>       "metadata": {
>         "description": "VM generation image to use"
>       },
>       "defaultValue": "V2",
>       "allowedValues": [
>         "V1",
>         "V2"
>       ]
>     }
>   },
>   "variables" : {
>     "location" : "[resourceGroup().location]",
>     "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-vnet')]",
>     "virtualNetworkID" : "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
>     "nodeSubnetName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-worker-subnet')]",
>     "nodeSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('nodeSubnetName'))]",
>     "infraLoadBalancerName" : "[parameters('baseName')]",
>     "sshKeyPath" : "/home/capi/.ssh/authorized_keys",
>     "identityName" : "[concat(parameters('baseName'), '-identity')]",
>     "galleryName": "[concat('gallery_', replace(parameters('baseName'), '-', '_'))]",
>     "imageName" : "[concat(parameters('baseName'), if(equals(parameters('hyperVGen'), 'V2'), '-gen2', ''))]",
>     "copy" : [
>       {
>         "name" : "vmNames",
>         "count" :  "[parameters('numberOfNodes')]",
>         "input" : "[concat(parameters('baseName'), '-worker-', variables('location'), '-', copyIndex('vmNames', 1))]"
>       }
>     ]
>   },
>   "resources" : [
>     {
>       "apiVersion" : "2019-05-01",
>       "name" : "[concat('node', copyIndex())]",
>       "type" : "Microsoft.Resources/deployments",
>       "copy" : {
>         "name" : "nodeCopy",
>         "count" : "[length(variables('vmNames'))]"
>       },
>       "properties" : {
>         "mode" : "Incremental",
>         "template" : {
>           "$schema" : "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
>           "contentVersion" : "1.0.0.0",
>           "resources" : [
>             {
>               "apiVersion" : "2018-06-01",
>               "type" : "Microsoft.Network/networkInterfaces",
>               "name" : "[concat(variables('vmNames')[copyIndex()], '-nic')]",
>               "location" : "[variables('location')]",
>               "properties" : {
>                 "ipConfigurations" : [
>                   {
>                     "name" : "pipConfig",
>                     "properties" : {
>                       "privateIPAllocationMethod" : "Dynamic",
>                       "subnet" : {
>                         "id" : "[variables('nodeSubnetRef')]"
>                       }
>                     }
>                   }
>                 ]
>               }
>             },
>             {
>               "apiVersion" : "2018-06-01",
>               "type" : "Microsoft.Compute/virtualMachines",
>               "name" : "[variables('vmNames')[copyIndex()]]",
>               "location" : "[variables('location')]",
>               "tags" : {
>                 "kubernetes.io-cluster-ffranzupi": "owned"
>               },
>               "identity" : {
>                 "type" : "userAssigned",
>                 "userAssignedIdentities" : {
>                   "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]" : {}
>                 }
>               },
>               "dependsOn" : [
>                 "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmNames')[copyIndex()], '-nic'))]"
>               ],
>               "properties" : {
>                 "hardwareProfile" : {
>                   "vmSize" : "[parameters('nodeVMSize')]"
>                 },
>                 "osProfile" : {
>                   "computerName" : "[variables('vmNames')[copyIndex()]]",
>                   "adminUsername" : "capi",
>                   "adminPassword" : "NotActuallyApplied!",
>                   "customData" : "[parameters('workerIgnition')]",
>                   "linuxConfiguration" : {
>                     "disablePasswordAuthentication" : false
>                   }
>                 },
>                 "storageProfile" : {
>                   "imageReference": {
>                     "id": "[resourceId('Microsoft.Compute/galleries/images', variables('galleryName'), variables('imageName'))]"
>                   },
>                   "osDisk" : {
>                     "name": "[concat(variables('vmNames')[copyIndex()],'_OSDisk')]",
>                     "osType" : "Linux",
>                     "createOption" : "FromImage",
>                     "managedDisk": {
>                       "storageAccountType": "Premium_LRS"
>                     },
>                     "diskSizeGB": 128
>                   }
>                 },
>                 "networkProfile" : {
>                   "networkInterfaces" : [
>                     {
>                       "id" : "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNames')[copyIndex()], '-nic'))]",
>                       "properties": {
>                         "primary": true
>                       }
>                     }
>                   ]
>                 }
>               }
>             }
>           ]
>         }
>       }
>     }
>   ]
> }</programlisting>
56941,56942c63583
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
56943a63585
> <title>Procedure</title>
56970,56971c63612
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
56972a63614
> <title>Procedure</title>
57302d63943
< 
57950c64591,64637
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>c5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>i3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r4.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r5a.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>r6i.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>t3a.*</literal></simpara>
> </listitem>
> </itemizedlist>
57958c64645,64652
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>c6g.*</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>m6g.*</literal></simpara>
> </listitem>
> </itemizedlist>
58366,58367c65060
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
58368a65062
> <title>Procedure</title>
58395,58396c65089
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
58397a65091
> <title>Procedure</title>
59021d65714
< 
59099d65791
< 
59188d65879
< 
60282d66972
< 
60336d67025
< 
60693d67381
< 
61318,61319c68006
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
61320a68008
> <title>Procedure</title>
61347,61348c68035
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
61349a68037
> <title>Procedure</title>
61493d68180
< 
62693,62694c69380
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
62695a69382
> <title>Procedure</title>
62722,62723c69409
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
62724a69411
> <title>Procedure</title>
62868d69554
< 
64845,64846c71531
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
64847a71533
> <title>Procedure</title>
64874,64875c71560
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
64876a71562
> <title>Procedure</title>
65188d71873
< 
65700d72384
< 
65751d72434
< 
65823d72505
< 
67002d73683
< 
67351,67352c74032
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
67353a74034
> <title>Procedure</title>
67380,67381c74061
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
67382a74063
> <title>Procedure</title>
67482d74162
< 
67805c74485,74513
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>C2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C3</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>E2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>M1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>Tau T2D</literal></simpara>
> </listitem>
> </itemizedlist>
67813c74521,74525
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>Tau T2A</literal></simpara>
> </listitem>
> </itemizedlist>
68477,68478c75189
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
68479a75191
> <title>Procedure</title>
68506,68507c75218
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
68508a75220
> <title>Procedure</title>
69303d76014
< 
69629c76340,76368
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>C2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C3</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>E2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>M1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>Tau T2D</literal></simpara>
> </listitem>
> </itemizedlist>
69637c76376,76380
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>Tau T2A</literal></simpara>
> </listitem>
> </itemizedlist>
70039,70040c76782
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
70041a76784
> <title>Procedure</title>
70068,70069c76811
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
70070a76813
> <title>Procedure</title>
71282d78024
< 
71661c78403,78431
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>C2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C3</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>E2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>M1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>Tau T2D</literal></simpara>
> </listitem>
> </itemizedlist>
71669c78439,78443
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>Tau T2A</literal></simpara>
> </listitem>
> </itemizedlist>
72170,72171c78944
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
72172a78946
> <title>Procedure</title>
72199,72200c78973
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
72201a78975
> <title>Procedure</title>
72956d79729
< 
73340c80113,80141
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>C2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C3</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>E2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>M1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>Tau T2D</literal></simpara>
> </listitem>
> </itemizedlist>
73348c80149,80153
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>Tau T2A</literal></simpara>
> </listitem>
> </itemizedlist>
73837,73838c80642
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
73839a80644
> <title>Procedure</title>
73866,73867c80671
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
73868a80673
> <title>Procedure</title>
74599d81403
< 
75115,75116c81919
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
75117a81921
> <title>Procedure</title>
75144,75145c81948
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
75146a81950
> <title>Procedure</title>
75877d82680
< 
76292c83095,83123
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>C2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C3</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>E2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>M1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>Tau T2D</literal></simpara>
> </listitem>
> </itemizedlist>
76300c83131,83135
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types_arm.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>Tau T2A</literal></simpara>
> </listitem>
> </itemizedlist>
76793,76794c83628
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
76795a83630
> <title>Procedure</title>
76822,76823c83657
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
76824a83659
> <title>Procedure</title>
77555d84389
< 
78930c85764,85792
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>C2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C3</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>E2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>M1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>Tau T2D</literal></simpara>
> </listitem>
> </itemizedlist>
79612c86474,86527
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/01_vpc.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-network',
>         'type': 'compute.v1.network',
>         'properties': {
>             'region': context.properties['region'],
>             'autoCreateSubnetworks': False
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-subnet',
>         'type': 'compute.v1.subnetwork',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'ipCidrRange': context.properties['master_subnet_cidr']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-worker-subnet',
>         'type': 'compute.v1.subnetwork',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'ipCidrRange': context.properties['worker_subnet_cidr']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-router',
>         'type': 'compute.v1.router',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'nats': [{
>                 'name': context.properties['infra_id'] + '-nat-master',
>                 'natIpAllocateOption': 'AUTO_ONLY',
>                 'minPortsPerVm': 7168,
>                 'sourceSubnetworkIpRangesToNat': 'LIST_OF_SUBNETWORKS',
>                 'subnetworks': [{
>                     'name': '$(ref.' + context.properties['infra_id'] + '-master-subnet.selfLink)',
>                     'sourceIpRangesToNat': ['ALL_IP_RANGES']
>                 }]
>             }, {
>                 'name': context.properties['infra_id'] + '-nat-worker',
>                 'natIpAllocateOption': 'AUTO_ONLY',
>                 'minPortsPerVm': 512,
>                 'sourceSubnetworkIpRangesToNat': 'LIST_OF_SUBNETWORKS',
>                 'subnetworks': [{
>                     'name': '$(ref.' + context.properties['infra_id'] + '-worker-subnet.selfLink)',
>                     'sourceIpRangesToNat': ['ALL_IP_RANGES']
>                 }]
>             }]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
79868c86783,86818
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_lb_ext.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-cluster-public-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'region': context.properties['region']
>         }
>     }, {
>         # Refer to docs/dev/kube-apiserver-health-check.md on how to correctly setup health check probe for kube-apiserver
>         'name': context.properties['infra_id'] + '-api-http-health-check',
>         'type': 'compute.v1.httpHealthCheck',
>         'properties': {
>             'port': 6080,
>             'requestPath': '/readyz'
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-target-pool',
>         'type': 'compute.v1.targetPool',
>         'properties': {
>             'region': context.properties['region'],
>             'healthChecks': ['$(ref.' + context.properties['infra_id'] + '-api-http-health-check.selfLink)'],
>             'instances': []
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-forwarding-rule',
>         'type': 'compute.v1.forwardingRule',
>         'properties': {
>             'region': context.properties['region'],
>             'IPAddress': '$(ref.' + context.properties['infra_id'] + '-cluster-public-ip.selfLink)',
>             'target': '$(ref.' + context.properties['infra_id'] + '-api-target-pool.selfLink)',
>             'portRange': '6443'
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
79876c86826,86896
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_lb_int.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     backends = []
>     for zone in context.properties['zones']:
>         backends.append({
>             'group': '$(ref.' + context.properties['infra_id'] + '-master-' + zone + '-ig' + '.selfLink)'
>         })
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-cluster-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'addressType': 'INTERNAL',
>             'region': context.properties['region'],
>             'subnetwork': context.properties['control_subnet']
>         }
>     }, {
>         # Refer to docs/dev/kube-apiserver-health-check.md on how to correctly setup health check probe for kube-apiserver
>         'name': context.properties['infra_id'] + '-api-internal-health-check',
>         'type': 'compute.v1.healthCheck',
>         'properties': {
>             'httpsHealthCheck': {
>                 'port': 6443,
>                 'requestPath': '/readyz'
>             },
>             'type': "HTTPS"
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-internal-backend-service',
>         'type': 'compute.v1.regionBackendService',
>         'properties': {
>             'backends': backends,
>             'healthChecks': ['$(ref.' + context.properties['infra_id'] + '-api-internal-health-check.selfLink)'],
>             'loadBalancingScheme': 'INTERNAL',
>             'region': context.properties['region'],
>             'protocol': 'TCP',
>             'timeoutSec': 120
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-internal-forwarding-rule',
>         'type': 'compute.v1.forwardingRule',
>         'properties': {
>             'backendService': '$(ref.' + context.properties['infra_id'] + '-api-internal-backend-service.selfLink)',
>             'IPAddress': '$(ref.' + context.properties['infra_id'] + '-cluster-ip.selfLink)',
>             'loadBalancingScheme': 'INTERNAL',
>             'ports': ['6443','22623'],
>             'region': context.properties['region'],
>             'subnetwork': context.properties['control_subnet']
>         }
>     }]
> 
>     for zone in context.properties['zones']:
>         resources.append({
>             'name': context.properties['infra_id'] + '-master-' + zone + '-ig',
>             'type': 'compute.v1.instanceGroup',
>             'properties': {
>                 'namedPorts': [
>                     {
>                         'name': 'ignition',
>                         'port': 22623
>                     }, {
>                         'name': 'https',
>                         'port': 6443
>                     }
>                 ],
>                 'network': context.properties['cluster_network'],
>                 'zone': zone
>             }
>         })
> 
>     return {'resources': resources}</programlisting>
79969c86989,87006
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_dns.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-private-zone',
>         'type': 'dns.v1.managedZone',
>         'properties': {
>             'description': '',
>             'dnsName': context.properties['cluster_domain'] + '.',
>             'visibility': 'private',
>             'privateVisibilityConfig': {
>                 'networks': [{
>                     'networkUrl': context.properties['cluster_network']
>                 }]
>             }
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
80044c87081,87209
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/03_firewall.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-bootstrap-in-ssh',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22']
>             }],
>             'sourceRanges': [context.properties['allowed_external_cidr']],
>             'targetTags': [context.properties['infra_id'] + '-bootstrap']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['6443']
>             }],
>             'sourceRanges': [context.properties['allowed_external_cidr']],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-health-checks',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['6080', '6443', '22624']
>             }],
>             'sourceRanges': ['35.191.0.0/16', '130.211.0.0/22', '209.85.152.0/22', '209.85.204.0/22'],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-etcd',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['2379-2380']
>             }],
>             'sourceTags': [context.properties['infra_id'] + '-master'],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-control-plane',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10257']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10259']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22623']
>             }],
>             'sourceTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-internal-network',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'icmp'
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22']
>             }],
>             'sourceRanges': [context.properties['network_cidr']],
>             'targetTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-internal-cluster',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'udp',
>                 'ports': ['4789', '6081']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['500', '4500']
>             },{
>                 'IPProtocol': 'esp',
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['9000-9999']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['9000-9999']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10250']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['30000-32767']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['30000-32767']
>             }],
>             'sourceTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ],
>             'targetTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
80134c87299,87317
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/03_iam.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-master-node-sa',
>         'type': 'iam.v1.serviceAccount',
>         'properties': {
>             'accountId': context.properties['infra_id'] + '-m',
>             'displayName': context.properties['infra_id'] + '-master-node'
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-worker-node-sa',
>         'type': 'iam.v1.serviceAccount',
>         'properties': {
>             'accountId': context.properties['infra_id'] + '-w',
>             'displayName': context.properties['infra_id'] + '-worker-node'
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
80306c87489,87548
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/04_bootstrap.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-bootstrap-public-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'region': context.properties['region']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-bootstrap',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zone'] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': '{"ignition":{"config":{"replace":{"source":"' + context.properties['bootstrap_ign'] + '"}},"version":"3.2.0"}}',
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet'],
>                 'accessConfigs': [{
>                     'natIP': '$(ref.' + context.properties['infra_id'] + '-bootstrap-public-ip.address)'
>                 }]
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                     context.properties['infra_id'] + '-bootstrap'
>                 ]
>             },
>             'zone': context.properties['zone']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-bootstrap-ig',
>         'type': 'compute.v1.instanceGroup',
>         'properties': {
>             'namedPorts': [
>                 {
>                     'name': 'ignition',
>                     'port': 22623
>                 }, {
>                     'name': 'https',
>                     'port': 6443
>                 }
>             ],
>             'network': context.properties['cluster_network'],
>             'zone': context.properties['zone']
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
80430c87672,87778
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/05_control_plane.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-master-0',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][0] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][0] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][0]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-1',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][1] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][1] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][1]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-2',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][2] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][2] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][2]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
80650c87998,88035
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/06_worker.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-' + context.env['name'],
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zone'] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['compute_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-worker',
>                 ]
>             },
>             'zone': context.properties['zone']
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
80698,80699c88083
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
80700a88085
> <title>Procedure</title>
80727,80728c88112
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
80729a88114
> <title>Procedure</title>
81166d88550
< 
81872c89256,89284
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>C2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C3</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>E2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>M1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>Tau T2D</literal></simpara>
> </listitem>
> </itemizedlist>
82099c89511,89564
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/01_vpc.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-network',
>         'type': 'compute.v1.network',
>         'properties': {
>             'region': context.properties['region'],
>             'autoCreateSubnetworks': False
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-subnet',
>         'type': 'compute.v1.subnetwork',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'ipCidrRange': context.properties['master_subnet_cidr']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-worker-subnet',
>         'type': 'compute.v1.subnetwork',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'ipCidrRange': context.properties['worker_subnet_cidr']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-router',
>         'type': 'compute.v1.router',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'nats': [{
>                 'name': context.properties['infra_id'] + '-nat-master',
>                 'natIpAllocateOption': 'AUTO_ONLY',
>                 'minPortsPerVm': 7168,
>                 'sourceSubnetworkIpRangesToNat': 'LIST_OF_SUBNETWORKS',
>                 'subnetworks': [{
>                     'name': '$(ref.' + context.properties['infra_id'] + '-master-subnet.selfLink)',
>                     'sourceIpRangesToNat': ['ALL_IP_RANGES']
>                 }]
>             }, {
>                 'name': context.properties['infra_id'] + '-nat-worker',
>                 'natIpAllocateOption': 'AUTO_ONLY',
>                 'minPortsPerVm': 512,
>                 'sourceSubnetworkIpRangesToNat': 'LIST_OF_SUBNETWORKS',
>                 'subnetworks': [{
>                     'name': '$(ref.' + context.properties['infra_id'] + '-worker-subnet.selfLink)',
>                     'sourceIpRangesToNat': ['ALL_IP_RANGES']
>                 }]
>             }]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
82935c90400,90435
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_lb_ext.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-cluster-public-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'region': context.properties['region']
>         }
>     }, {
>         # Refer to docs/dev/kube-apiserver-health-check.md on how to correctly setup health check probe for kube-apiserver
>         'name': context.properties['infra_id'] + '-api-http-health-check',
>         'type': 'compute.v1.httpHealthCheck',
>         'properties': {
>             'port': 6080,
>             'requestPath': '/readyz'
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-target-pool',
>         'type': 'compute.v1.targetPool',
>         'properties': {
>             'region': context.properties['region'],
>             'healthChecks': ['$(ref.' + context.properties['infra_id'] + '-api-http-health-check.selfLink)'],
>             'instances': []
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-forwarding-rule',
>         'type': 'compute.v1.forwardingRule',
>         'properties': {
>             'region': context.properties['region'],
>             'IPAddress': '$(ref.' + context.properties['infra_id'] + '-cluster-public-ip.selfLink)',
>             'target': '$(ref.' + context.properties['infra_id'] + '-api-target-pool.selfLink)',
>             'portRange': '6443'
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
82943c90443,90513
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_lb_int.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     backends = []
>     for zone in context.properties['zones']:
>         backends.append({
>             'group': '$(ref.' + context.properties['infra_id'] + '-master-' + zone + '-ig' + '.selfLink)'
>         })
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-cluster-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'addressType': 'INTERNAL',
>             'region': context.properties['region'],
>             'subnetwork': context.properties['control_subnet']
>         }
>     }, {
>         # Refer to docs/dev/kube-apiserver-health-check.md on how to correctly setup health check probe for kube-apiserver
>         'name': context.properties['infra_id'] + '-api-internal-health-check',
>         'type': 'compute.v1.healthCheck',
>         'properties': {
>             'httpsHealthCheck': {
>                 'port': 6443,
>                 'requestPath': '/readyz'
>             },
>             'type': "HTTPS"
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-internal-backend-service',
>         'type': 'compute.v1.regionBackendService',
>         'properties': {
>             'backends': backends,
>             'healthChecks': ['$(ref.' + context.properties['infra_id'] + '-api-internal-health-check.selfLink)'],
>             'loadBalancingScheme': 'INTERNAL',
>             'region': context.properties['region'],
>             'protocol': 'TCP',
>             'timeoutSec': 120
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-internal-forwarding-rule',
>         'type': 'compute.v1.forwardingRule',
>         'properties': {
>             'backendService': '$(ref.' + context.properties['infra_id'] + '-api-internal-backend-service.selfLink)',
>             'IPAddress': '$(ref.' + context.properties['infra_id'] + '-cluster-ip.selfLink)',
>             'loadBalancingScheme': 'INTERNAL',
>             'ports': ['6443','22623'],
>             'region': context.properties['region'],
>             'subnetwork': context.properties['control_subnet']
>         }
>     }]
> 
>     for zone in context.properties['zones']:
>         resources.append({
>             'name': context.properties['infra_id'] + '-master-' + zone + '-ig',
>             'type': 'compute.v1.instanceGroup',
>             'properties': {
>                 'namedPorts': [
>                     {
>                         'name': 'ignition',
>                         'port': 22623
>                     }, {
>                         'name': 'https',
>                         'port': 6443
>                     }
>                 ],
>                 'network': context.properties['cluster_network'],
>                 'zone': zone
>             }
>         })
> 
>     return {'resources': resources}</programlisting>
83036c90606,90623
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_dns.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-private-zone',
>         'type': 'dns.v1.managedZone',
>         'properties': {
>             'description': '',
>             'dnsName': context.properties['cluster_domain'] + '.',
>             'visibility': 'private',
>             'privateVisibilityConfig': {
>                 'networks': [{
>                     'networkUrl': context.properties['cluster_network']
>                 }]
>             }
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
83111c90698,90826
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/03_firewall.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-bootstrap-in-ssh',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22']
>             }],
>             'sourceRanges': [context.properties['allowed_external_cidr']],
>             'targetTags': [context.properties['infra_id'] + '-bootstrap']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['6443']
>             }],
>             'sourceRanges': [context.properties['allowed_external_cidr']],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-health-checks',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['6080', '6443', '22624']
>             }],
>             'sourceRanges': ['35.191.0.0/16', '130.211.0.0/22', '209.85.152.0/22', '209.85.204.0/22'],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-etcd',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['2379-2380']
>             }],
>             'sourceTags': [context.properties['infra_id'] + '-master'],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-control-plane',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10257']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10259']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22623']
>             }],
>             'sourceTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-internal-network',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'icmp'
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22']
>             }],
>             'sourceRanges': [context.properties['network_cidr']],
>             'targetTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-internal-cluster',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'udp',
>                 'ports': ['4789', '6081']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['500', '4500']
>             },{
>                 'IPProtocol': 'esp',
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['9000-9999']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['9000-9999']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10250']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['30000-32767']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['30000-32767']
>             }],
>             'sourceTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ],
>             'targetTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
83222c90937,90955
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/03_iam.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-master-node-sa',
>         'type': 'iam.v1.serviceAccount',
>         'properties': {
>             'accountId': context.properties['infra_id'] + '-m',
>             'displayName': context.properties['infra_id'] + '-master-node'
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-worker-node-sa',
>         'type': 'iam.v1.serviceAccount',
>         'properties': {
>             'accountId': context.properties['infra_id'] + '-w',
>             'displayName': context.properties['infra_id'] + '-worker-node'
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
83386c91119,91178
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/04_bootstrap.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-bootstrap-public-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'region': context.properties['region']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-bootstrap',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zone'] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': '{"ignition":{"config":{"replace":{"source":"' + context.properties['bootstrap_ign'] + '"}},"version":"3.2.0"}}',
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet'],
>                 'accessConfigs': [{
>                     'natIP': '$(ref.' + context.properties['infra_id'] + '-bootstrap-public-ip.address)'
>                 }]
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                     context.properties['infra_id'] + '-bootstrap'
>                 ]
>             },
>             'zone': context.properties['zone']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-bootstrap-ig',
>         'type': 'compute.v1.instanceGroup',
>         'properties': {
>             'namedPorts': [
>                 {
>                     'name': 'ignition',
>                     'port': 22623
>                 }, {
>                     'name': 'https',
>                     'port': 6443
>                 }
>             ],
>             'network': context.properties['cluster_network'],
>             'zone': context.properties['zone']
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
83510c91302,91408
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/05_control_plane.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-master-0',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][0] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][0] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][0]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-1',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][1] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][1] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][1]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-2',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][2] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][2] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][2]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
83727c91625,91662
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/06_worker.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-' + context.env['name'],
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zone'] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['compute_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-worker',
>                 ]
>             },
>             'zone': context.properties['zone']
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
83775,83776c91710
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
83777a91712
> <title>Procedure</title>
83804,83805c91739
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
83806a91741
> <title>Procedure</title>
84292d92226
< 
85688c93622,93650
< <simpara><link xlink:href="https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md">https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md</link></simpara>
---
> <itemizedlist>
> <listitem>
> <simpara><literal>C2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>C3</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>E2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>M1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N1</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>N2D</literal></simpara>
> </listitem>
> <listitem>
> <simpara><literal>Tau T2D</literal></simpara>
> </listitem>
> </itemizedlist>
86415c94377,94430
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/01_vpc.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-network',
>         'type': 'compute.v1.network',
>         'properties': {
>             'region': context.properties['region'],
>             'autoCreateSubnetworks': False
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-subnet',
>         'type': 'compute.v1.subnetwork',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'ipCidrRange': context.properties['master_subnet_cidr']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-worker-subnet',
>         'type': 'compute.v1.subnetwork',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'ipCidrRange': context.properties['worker_subnet_cidr']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-router',
>         'type': 'compute.v1.router',
>         'properties': {
>             'region': context.properties['region'],
>             'network': '$(ref.' + context.properties['infra_id'] + '-network.selfLink)',
>             'nats': [{
>                 'name': context.properties['infra_id'] + '-nat-master',
>                 'natIpAllocateOption': 'AUTO_ONLY',
>                 'minPortsPerVm': 7168,
>                 'sourceSubnetworkIpRangesToNat': 'LIST_OF_SUBNETWORKS',
>                 'subnetworks': [{
>                     'name': '$(ref.' + context.properties['infra_id'] + '-master-subnet.selfLink)',
>                     'sourceIpRangesToNat': ['ALL_IP_RANGES']
>                 }]
>             }, {
>                 'name': context.properties['infra_id'] + '-nat-worker',
>                 'natIpAllocateOption': 'AUTO_ONLY',
>                 'minPortsPerVm': 512,
>                 'sourceSubnetworkIpRangesToNat': 'LIST_OF_SUBNETWORKS',
>                 'subnetworks': [{
>                     'name': '$(ref.' + context.properties['infra_id'] + '-worker-subnet.selfLink)',
>                     'sourceIpRangesToNat': ['ALL_IP_RANGES']
>                 }]
>             }]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
86667c94682,94717
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_lb_ext.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-cluster-public-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'region': context.properties['region']
>         }
>     }, {
>         # Refer to docs/dev/kube-apiserver-health-check.md on how to correctly setup health check probe for kube-apiserver
>         'name': context.properties['infra_id'] + '-api-http-health-check',
>         'type': 'compute.v1.httpHealthCheck',
>         'properties': {
>             'port': 6080,
>             'requestPath': '/readyz'
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-target-pool',
>         'type': 'compute.v1.targetPool',
>         'properties': {
>             'region': context.properties['region'],
>             'healthChecks': ['$(ref.' + context.properties['infra_id'] + '-api-http-health-check.selfLink)'],
>             'instances': []
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-forwarding-rule',
>         'type': 'compute.v1.forwardingRule',
>         'properties': {
>             'region': context.properties['region'],
>             'IPAddress': '$(ref.' + context.properties['infra_id'] + '-cluster-public-ip.selfLink)',
>             'target': '$(ref.' + context.properties['infra_id'] + '-api-target-pool.selfLink)',
>             'portRange': '6443'
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
86675c94725,94795
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_lb_int.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     backends = []
>     for zone in context.properties['zones']:
>         backends.append({
>             'group': '$(ref.' + context.properties['infra_id'] + '-master-' + zone + '-ig' + '.selfLink)'
>         })
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-cluster-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'addressType': 'INTERNAL',
>             'region': context.properties['region'],
>             'subnetwork': context.properties['control_subnet']
>         }
>     }, {
>         # Refer to docs/dev/kube-apiserver-health-check.md on how to correctly setup health check probe for kube-apiserver
>         'name': context.properties['infra_id'] + '-api-internal-health-check',
>         'type': 'compute.v1.healthCheck',
>         'properties': {
>             'httpsHealthCheck': {
>                 'port': 6443,
>                 'requestPath': '/readyz'
>             },
>             'type': "HTTPS"
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-internal-backend-service',
>         'type': 'compute.v1.regionBackendService',
>         'properties': {
>             'backends': backends,
>             'healthChecks': ['$(ref.' + context.properties['infra_id'] + '-api-internal-health-check.selfLink)'],
>             'loadBalancingScheme': 'INTERNAL',
>             'region': context.properties['region'],
>             'protocol': 'TCP',
>             'timeoutSec': 120
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api-internal-forwarding-rule',
>         'type': 'compute.v1.forwardingRule',
>         'properties': {
>             'backendService': '$(ref.' + context.properties['infra_id'] + '-api-internal-backend-service.selfLink)',
>             'IPAddress': '$(ref.' + context.properties['infra_id'] + '-cluster-ip.selfLink)',
>             'loadBalancingScheme': 'INTERNAL',
>             'ports': ['6443','22623'],
>             'region': context.properties['region'],
>             'subnetwork': context.properties['control_subnet']
>         }
>     }]
> 
>     for zone in context.properties['zones']:
>         resources.append({
>             'name': context.properties['infra_id'] + '-master-' + zone + '-ig',
>             'type': 'compute.v1.instanceGroup',
>             'properties': {
>                 'namedPorts': [
>                     {
>                         'name': 'ignition',
>                         'port': 22623
>                     }, {
>                         'name': 'https',
>                         'port': 6443
>                     }
>                 ],
>                 'network': context.properties['cluster_network'],
>                 'zone': zone
>             }
>         })
> 
>     return {'resources': resources}</programlisting>
86768c94888,94905
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_dns.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-private-zone',
>         'type': 'dns.v1.managedZone',
>         'properties': {
>             'description': '',
>             'dnsName': context.properties['cluster_domain'] + '.',
>             'visibility': 'private',
>             'privateVisibilityConfig': {
>                 'networks': [{
>                     'networkUrl': context.properties['cluster_network']
>                 }]
>             }
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
86843c94980,95108
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/03_firewall.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-bootstrap-in-ssh',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22']
>             }],
>             'sourceRanges': [context.properties['allowed_external_cidr']],
>             'targetTags': [context.properties['infra_id'] + '-bootstrap']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-api',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['6443']
>             }],
>             'sourceRanges': [context.properties['allowed_external_cidr']],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-health-checks',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['6080', '6443', '22624']
>             }],
>             'sourceRanges': ['35.191.0.0/16', '130.211.0.0/22', '209.85.152.0/22', '209.85.204.0/22'],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-etcd',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['2379-2380']
>             }],
>             'sourceTags': [context.properties['infra_id'] + '-master'],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-control-plane',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10257']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10259']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22623']
>             }],
>             'sourceTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ],
>             'targetTags': [context.properties['infra_id'] + '-master']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-internal-network',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'icmp'
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['22']
>             }],
>             'sourceRanges': [context.properties['network_cidr']],
>             'targetTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-internal-cluster',
>         'type': 'compute.v1.firewall',
>         'properties': {
>             'network': context.properties['cluster_network'],
>             'allowed': [{
>                 'IPProtocol': 'udp',
>                 'ports': ['4789', '6081']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['500', '4500']
>             },{
>                 'IPProtocol': 'esp',
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['9000-9999']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['9000-9999']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['10250']
>             },{
>                 'IPProtocol': 'tcp',
>                 'ports': ['30000-32767']
>             },{
>                 'IPProtocol': 'udp',
>                 'ports': ['30000-32767']
>             }],
>             'sourceTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ],
>             'targetTags': [
>                 context.properties['infra_id'] + '-master',
>                 context.properties['infra_id'] + '-worker'
>             ]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
86933c95198,95216
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/03_iam.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-master-node-sa',
>         'type': 'iam.v1.serviceAccount',
>         'properties': {
>             'accountId': context.properties['infra_id'] + '-m',
>             'displayName': context.properties['infra_id'] + '-master-node'
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-worker-node-sa',
>         'type': 'iam.v1.serviceAccount',
>         'properties': {
>             'accountId': context.properties['infra_id'] + '-w',
>             'displayName': context.properties['infra_id'] + '-worker-node'
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
87105c95388,95447
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/04_bootstrap.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-bootstrap-public-ip',
>         'type': 'compute.v1.address',
>         'properties': {
>             'region': context.properties['region']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-bootstrap',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zone'] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': '{"ignition":{"config":{"replace":{"source":"' + context.properties['bootstrap_ign'] + '"}},"version":"3.2.0"}}',
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet'],
>                 'accessConfigs': [{
>                     'natIP': '$(ref.' + context.properties['infra_id'] + '-bootstrap-public-ip.address)'
>                 }]
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                     context.properties['infra_id'] + '-bootstrap'
>                 ]
>             },
>             'zone': context.properties['zone']
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-bootstrap-ig',
>         'type': 'compute.v1.instanceGroup',
>         'properties': {
>             'namedPorts': [
>                 {
>                     'name': 'ignition',
>                     'port': 22623
>                 }, {
>                     'name': 'https',
>                     'port': 6443
>                 }
>             ],
>             'network': context.properties['cluster_network'],
>             'zone': context.properties['zone']
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
87229c95571,95677
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/05_control_plane.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-master-0',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][0] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][0] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][0]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-1',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][1] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][1] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][1]
>         }
>     }, {
>         'name': context.properties['infra_id'] + '-master-2',
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'diskType': 'zones/' + context.properties['zones'][2] + '/diskTypes/pd-ssd',
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zones'][2] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['control_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-master',
>                 ]
>             },
>             'zone': context.properties['zones'][2]
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
87446c95894,95931
< <programlisting language="python" linenumbering="unnumbered">link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/06_worker.py[role=include]</programlisting>
---
> <programlisting language="python" linenumbering="unnumbered">def GenerateConfig(context):
> 
>     resources = [{
>         'name': context.properties['infra_id'] + '-' + context.env['name'],
>         'type': 'compute.v1.instance',
>         'properties': {
>             'disks': [{
>                 'autoDelete': True,
>                 'boot': True,
>                 'initializeParams': {
>                     'diskSizeGb': context.properties['root_volume_size'],
>                     'sourceImage': context.properties['image']
>                 }
>             }],
>             'machineType': 'zones/' + context.properties['zone'] + '/machineTypes/' + context.properties['machine_type'],
>             'metadata': {
>                 'items': [{
>                     'key': 'user-data',
>                     'value': context.properties['ignition']
>                 }]
>             },
>             'networkInterfaces': [{
>                 'subnetwork': context.properties['compute_subnet']
>             }],
>             'serviceAccounts': [{
>                 'email': context.properties['service_account_email'],
>                 'scopes': ['https://www.googleapis.com/auth/cloud-platform']
>             }],
>             'tags': {
>                 'items': [
>                     context.properties['infra_id'] + '-worker',
>                 ]
>             },
>             'zone': context.properties['zone']
>         }
>     }]
> 
>     return {'resources': resources}</programlisting>
87882d96366
< 
87957d96440
< 
88810d97292
< 
88923d97404
< 
88978d97458
< 
89401d97880
< 
89508d97986
< 
89555d98032
< 
90272,90273c98749
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
90274a98751
> <title>Procedure</title>
90301,90302c98778
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
90303a98780
> <title>Procedure</title>
90403d98879
< 
91603,91604c100079
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
91605a100081
> <title>Procedure</title>
91632,91633c100108
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
91634a100110
> <title>Procedure</title>
91734d100209
< 
92581,92582c101056
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
92583a101058
> <title>Procedure</title>
92610,92611c101085
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
92612a101087
> <title>Procedure</title>
92711d101185
< 
93588,93589c102062
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
93590a102064
> <title>Procedure</title>
93617,93618c102091
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
93619a102093
> <title>Procedure</title>
93718d102191
< 
94558,94559c103031
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
94560a103033
> <title>Procedure</title>
94587,94588c103060
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
94589a103062
> <title>Procedure</title>
94961d103433
< 
95510d103981
< 
95610d104080
< 
95909d104378
< 
95943d104411
< 
96606,96607c105074
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
96608a105076
> <title>Procedure</title>
96635,96636c105103
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
96637a105105
> <title>Procedure</title>
97015d105482
< 
97773,97774c106240
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
97775a106242
> <title>Procedure</title>
97802,97803c106269
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
97804a106271
> <title>Procedure</title>
98167d106633
< 
98211d106676
< 
98259d106723
< 
98912d107375
< 
99063d107525
< 
100227,100228c108689
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
100229a108691
> <title>Procedure</title>
100256,100257c108718
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
100258a108720
> <title>Procedure</title>
100436c108898
< <simpara>See <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/postinstallation_configuration/#">Enabling cluster capabilities</link> for more information on enabling cluster capabilities that were disabled prior to installation.</simpara>
---
> <simpara>See <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/postinstallation_configuration/#enabling-cluster-capabilities-1">Enabling cluster capabilities</link> for more information on enabling cluster capabilities that were disabled prior to installation.</simpara>
103061d111522
< 
104208,104209c112669
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
104210a112671
> <title>Procedure</title>
104237,104238c112698
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
104239a112700
> <title>Procedure</title>
107258d115718
< 
111279d119738
< 
111689d120147
< 
112088d120545
< 
112187d120643
< 
112336c120792
< <simpara><link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/null/#network-requirements-increase-mtu_ipi-install-prerequisites">Increase the network MTU</link></simpara>
---
> <simpara><link linkend="network-requirements-increase-mtu_ipi-install-prerequisites">Increase the network MTU</link></simpara>
113413d121868
< 
113533d121987
< 
114329d122782
< 
114612d123064
< 
115024d123475
< 
115738d124188
< 
115860d124309
< 
116075c124524
< <simpara>See <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/postinstallation_configuration/#">Enabling cluster capabilities</link> for more information about enabling cluster capabilities that were disabled prior to installation.</simpara>
---
> <simpara>See <link xlink:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.14/html-single/postinstallation_configuration/#enabling-cluster-capabilities-1">Enabling cluster capabilities</link> for more information about enabling cluster capabilities that were disabled prior to installation.</simpara>
117175d125623
< 
117219d125666
< 
117924d126370
< 
118682c127128
< <literal><link xlink:href="https://mirror.openshift.com/rhcos-&lt;version&gt;-qemu.qcow2.gz?sha256=&lt;uncompressed_sha256&gt">https://mirror.openshift.com/rhcos-&lt;version&gt;-qemu.qcow2.gz?sha256=&lt;uncompressed_sha256&gt</link>;</literal>.</simpara></entry>
---
> <literal><link xlink:href="https://mirror.openshift.com/rhcos-&lt;version&gt;-qemu.qcow2.gz?sha256=&lt;uncompressed_sha256&gt;">https://mirror.openshift.com/rhcos-&lt;version&gt;-qemu.qcow2.gz?sha256=&lt;uncompressed_sha256&gt;</link></literal>.</simpara></entry>
120472d128917
< 
121056d129500
< 
121715d130158
< 
122425d130867
< 
122694d131135
< 
123278c131719
< <literal><link xlink:href="https://mirror.openshift.com/rhcos-&lt;version&gt;-qemu.qcow2.gz?sha256=&lt;uncompressed_sha256&gt">https://mirror.openshift.com/rhcos-&lt;version&gt;-qemu.qcow2.gz?sha256=&lt;uncompressed_sha256&gt</link>;</literal>.</simpara></entry>
---
> <literal><link xlink:href="https://mirror.openshift.com/rhcos-&lt;version&gt;-qemu.qcow2.gz?sha256=&lt;uncompressed_sha256&gt;">https://mirror.openshift.com/rhcos-&lt;version&gt;-qemu.qcow2.gz?sha256=&lt;uncompressed_sha256&gt;</link></literal>.</simpara></entry>
123455d131895
< 
123588d132027
< 
124803,124804c133242
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
124805a133244
> <title>Procedure</title>
124832,124833c133271
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
124834a133273
> <title>Procedure</title>
126556d134994
< 
129463d137900
< 
130691,130692c139128
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
130693a139130
> <title>Procedure</title>
130720,130721c139157
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
130722a139159
> <title>Procedure</title>
132514d140950
< 
135497d143932
< 
136704,136705c145139
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
136706a145141
> <title>Procedure</title>
136733,136734c145168
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
136735a145170
> <title>Procedure</title>
138445d146879
< 
141333d149766
< 
141898d150330
< 
141925d150356
< 
143135,143136c151566
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
143137a151568
> <title>Procedure</title>
143164,143165c151595
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
143166a151597
> <title>Procedure</title>
144997d153427
< 
148005d156434
< 
148567d156995
< 
148698d157125
< 
149113d157539
< 
149771,149772c158197
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
149773a158199
> <title>Procedure</title>
149800,149801c158226
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
149802a158228
> <title>Procedure</title>
149902d158327
< 
150699,150700c159124
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
150701a159126
> <title>Procedure</title>
150728,150729c159153
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
150730a159155
> <title>Procedure</title>
150829d159253
< 
151641,151642c160065
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
151643a160067
> <title>Procedure</title>
151670,151671c160094
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
151672a160096
> <title>Procedure</title>
151771d160194
< 
152656,152657c161079
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
152658a161081
> <title>Procedure</title>
152685,152686c161108
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
152687a161110
> <title>Procedure</title>
152805d161227
< 
152909d161330
< 
153562d161982
< 
153775d162194
< 
153932d162350
< 
155818d164235
< 
157757d166173
< 
158841d167256
< 
159121d167535
< 
159169d167582
< 
159264d167676
< 
160087d168498
< 
160133d168543
< 
161263d169672
< 
161369,161370c169778
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
161371a169780
> <title>Procedure</title>
161398,161399c169807
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
161400a169809
> <title>Procedure</title>
161552d169960
< 
162348d170755
< 
163538d171944
< 
165345d173750
< 
166625d175029
< 
168175d176578
< 
168281,168282c176684
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
168283a176686
> <title>Procedure</title>
168310,168311c176713
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
168312a176715
> <title>Procedure</title>
168622d177024
< 
170468d178869
< 
172668d181068
< 
174675d183074
< 
174700d183098
< 
174714d183111
< 
174792d183188
< 
174843d183238
< 
175134d183528
< 
175928d184321
< 
177006,177007c185399
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on Windows by using the following procedure.</simpara>
177008a185401
> <title>Procedure</title>
177035,177036c185428
< <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.
< .Procedure</simpara>
---
> <simpara>You can install the OpenShift CLI (<literal>oc</literal>) binary on macOS by using the following procedure.</simpara>
177037a185430
> <title>Procedure</title>
179129d187521
< 
180442d188833
< 
180828d189218
< 
180864d189253
< 
181361d189749
< 
181582d189969
< 
181700c190087
< </book>
\ No newline at end of file
---
> </book>
