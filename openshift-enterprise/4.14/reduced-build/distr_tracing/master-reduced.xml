<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Distributed tracing</title>
<date>2024-02-13</date>
</info>
<chapter xml:id="_distributed_tracing_release_notes">
<title>Distributed tracing release notes</title>
<section xml:id="distributed-tracing-rn-3-0">
<title>Release notes for Red Hat OpenShift distributed tracing platform 3.0</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-3-0">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-3-0">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 3.0</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.51.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><link xl:href="../../otel/otel-release-notes.xml">Red Hat build of OpenTelemetry</link></simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.89.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Tempo)</simpara></entry>
<entry align="left" valign="top"><simpara>Tempo</simpara></entry>
<entry align="left" valign="top"><simpara>2.3.0</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="jaeger-release-notes_distributed-tracing-rn-3-0">
<title>Red Hat OpenShift distributed tracing platform (Jaeger)</title>
<section xml:id="deprecated-functionality_jaeger-release-notes_distributed-tracing-rn-3-0">
<title>Deprecated functionality</title>
<simpara>In Red Hat OpenShift distributed tracing 3.0, Jaeger and Elasticsearch are deprecated, and both are planned to be removed in a future release. Red Hat will provide critical and above CVE bug fixes and support for these components during the current release lifecycle, but these components will no longer receive feature enhancements.</simpara>
<simpara>In Red Hat OpenShift distributed tracing 3.0, Tempo provided by the Tempo Operator and the OpenTelemetry collector provided by the Red Hat build of OpenTelemetry are the preferred Operators for distributed tracing collection and storage. The OpenTelemetry and Tempo distributed tracing stack is to be adopted by all users because this will be the stack that will be enhanced going forward.</simpara>
</section>
<section xml:id="new-features-and-enhancements_jaeger-release-notes_distributed-tracing-rn-3-0">
<title>New features and enhancements</title>
<simpara>This update introduces the following enhancements for the distributed tracing platform (Jaeger):</simpara>
<itemizedlist>
<listitem>
<simpara>Support for the ARM architecture.</simpara>
</listitem>
<listitem>
<simpara>Support for cluster-wide proxy environments.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_jaeger-release-notes_distributed-tracing-rn-3-0">
<title>Bug fixes</title>
<simpara>This update introduces the following bug fixes for the distributed tracing platform (Jaeger):</simpara>
<itemizedlist>
<listitem>
<simpara>Fixed support for disconnected environments when using the <literal>oc adm catalog mirror</literal> CLI command. (<link xl:href="https://issues.redhat.com/browse/TRACING-3546">TRACING-3546</link>)</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="known-issues_jaeger-release-notes_distributed-tracing-rn-3-0">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Currently, Apache Spark is not supported.</simpara>
</listitem>
<listitem>
<simpara>Currently, the streaming deployment via AMQ/Kafka is not supported on the IBM Z and IBM Power Systems architectures.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="tempo-release-notes_distributed-tracing-rn-3-0">
<title>Red Hat OpenShift distributed tracing platform (Tempo)</title>
<section xml:id="new-features-and-enhancements_tempo-release-notes_distributed-tracing-rn-3-0">
<title>New features and enhancements</title>
<simpara>This update introduces the following enhancements for the distributed tracing platform (Tempo):</simpara>
<itemizedlist>
<listitem>
<simpara>Support for the ARM architecture.</simpara>
</listitem>
<listitem>
<simpara>Support for span request count, duration, and error count (RED) metrics. The metrics can be visualized in the Jaeger console deployed as part of Tempo or in the web console in the <emphasis role="strong">Observe</emphasis> menu.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_tempo-release-notes_distributed-tracing-rn-3-0">
<title>Bug fixes</title>
<simpara>This update introduces the following bug fixes for the distributed tracing platform (Tempo):</simpara>
<itemizedlist>
<listitem>
<simpara>Fixed support for the custom TLS CA option for connecting to object storage. (<link xl:href="https://issues.redhat.com/browse/TRACING-3462">TRACING-3462</link>)</simpara>
</listitem>
<listitem>
<simpara>Fixed support for disconnected environments when using the <literal>oc adm catalog mirror</literal> CLI command. (<link xl:href="https://issues.redhat.com/browse/TRACING-3523">TRACING-3523</link>)</simpara>
</listitem>
<listitem>
<simpara>Fixed mTLS when Gateway is not deployed. (<link xl:href="https://issues.redhat.com/browse/TRACING-3510">TRACING-3510</link>)</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="known-issues_tempo-release-notes_distributed-tracing-rn-3-0">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Currently, when used with the Tempo Operator, the Jaeger UI only displays services that have sent traces in the last 15 minutes. For services that did not send traces in the last 15 minutes, traces are still stored but not displayed in the Jaeger UI. (<link xl:href="https://issues.redhat.com/browse/TRACING-3139">TRACING-3139</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, the distributed tracing platform (Tempo) fails on the IBM Z (<literal>s390x</literal>) architecture. (<link xl:href="https://issues.redhat.com/browse/TRACING-3545">TRACING-3545</link>)</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="support_distributed-tracing-rn-3-0">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-3-0">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-9-2">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.9.2</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-9-2">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-9-2">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.9.2</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.47.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.81.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Tempo)</simpara></entry>
<entry align="left" valign="top"><simpara>Tempo</simpara></entry>
<entry align="left" valign="top"><simpara>2.1.1</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_cves">
<title>CVEs</title>
<simpara>This release fixes <link xl:href="https://bugzilla.redhat.com/show_bug.cgi?id=2246470">CVE-2023-46234</link>.</simpara>
</section>
<section xml:id="jaeger-release-notes_distributed-tracing-rn-2-9-2">
<title>Red Hat OpenShift distributed tracing platform (Jaeger)</title>
<section xml:id="known-issues_jaeger-release-notes_distributed-tracing-rn-2-9-2">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Apache Spark is not supported.</simpara>
</listitem>
<listitem>
<simpara>The streaming deployment via AMQ/Kafka is unsupported on IBM Z and IBM Power Systems.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="tempo-release-notes_distributed-tracing-rn-2-9-2">
<title>Red Hat OpenShift distributed tracing platform (Tempo)</title>
<important>
<simpara>The Red Hat OpenShift distributed tracing platform (Tempo) is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.</simpara>
<simpara>For more information about the support scope of Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<section xml:id="known-issues_tempo-release-notes_distributed-tracing-rn-2-9-2">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Currently, the custom TLS CA option is not implemented for connecting to object storage. (<link xl:href="https://issues.redhat.com/browse/TRACING-3462">TRACING-3462</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, when used with the Tempo Operator, the Jaeger UI only displays services that have sent traces in the last 15 minutes. For services that did not send traces in the last 15 minutes, traces are still stored but not displayed in the Jaeger UI. (<link xl:href="https://issues.redhat.com/browse/TRACING-3139">TRACING-3139</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, the distributed tracing platform (Tempo) fails on the IBM Z (<literal>s390x</literal>) architecture. (<link xl:href="https://issues.redhat.com/browse/TRACING-3545">TRACING-3545</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, the Tempo query frontend service must not use internal mTLS when Gateway is not deployed. This issue does not affect the Jaeger Query API. The workaround is to disable mTLS. (<link xl:href="https://issues.redhat.com/browse/TRACING-3510">TRACING-3510</link>)</simpara>
<formalpara>
<title>Workaround</title>
<para>Disable mTLS as follows:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open the Tempo Operator ConfigMap for editing by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc edit configmap tempo-operator-manager-config -n openshift-tempo-operator <co xml:id="CO1-1"/></programlisting>
<calloutlist>
<callout arearefs="CO1-1">
<para>The project where the Tempo Operator is installed.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>Disable the mTLS in the operator configuration by updating the YAML file:</simpara>
<programlisting language="yaml" linenumbering="unnumbered">data:
  controller_manager_config.yaml: |
    featureGates:
      httpEncryption: false
      grpcEncryption: false
      builtInCertManagement:
        enabled: false</programlisting>
</listitem>
<listitem>
<simpara>Restart the Tempo Operator pod by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc rollout restart deployment.apps/tempo-operator-controller -n openshift-tempo-operator</programlisting>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Missing images for running the Tempo Operator in restricted environments. The Red Hat OpenShift distributed tracing platform (Tempo) CSV is missing references to the operand images. (<link xl:href="https://issues.redhat.com/browse/TRACING-3523">TRACING-3523</link>)</simpara>
<formalpara>
<title>Workaround</title>
<para>Add the Tempo Operator related images in the mirroring tool to mirror the images to the registry:</para>
</formalpara>
<programlisting language="yaml" linenumbering="unnumbered">kind: ImageSetConfiguration
apiVersion: mirror.openshift.io/v1alpha2
archiveSize: 20
storageConfig:
  local:
    path: /home/user/images
mirror:
  operators:
  - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.13
    packages:
    - name: tempo-product
      channels:
      - name: stable
  additionalImages:
  - name: registry.redhat.io/rhosdt/tempo-rhel8@sha256:e4295f837066efb05bcc5897f31eb2bdbd81684a8c59d6f9498dd3590c62c12a
  - name: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:b62f5cedfeb5907b638f14ca6aaeea50f41642980a8a6f87b7061e88d90fac23
  - name: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:8cd134deca47d6817b26566e272e6c3f75367653d589f5c90855c59b2fab01e9
  - name: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:0da43034f440b8258a48a0697ba643b5643d48b615cdb882ac7f4f1f80aad08e</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="otel-release-notes_distributed-tracing-rn-2-9-2">
<title>Red Hat build of OpenTelemetry</title>
<important>
<simpara>The Red Hat build of OpenTelemetry is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.</simpara>
<simpara>For more information about the support scope of Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<section xml:id="known-issues_otel-release-notes_distributed-tracing-rn-2-9-2">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Currently, you must manually set <link xl:href="https://operatorframework.io/operator-capabilities/">operator maturity</link> to Level IV, Deep Insights. (<link xl:href="https://issues.redhat.com/browse/TRACING-3431">TRACING-3431</link>)</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="support_distributed-tracing-rn-2-9-2">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-9-2">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-9-1">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.9.1</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-9-1">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-9-1">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.9.1</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.47.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.81.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Tempo)</simpara></entry>
<entry align="left" valign="top"><simpara>Tempo</simpara></entry>
<entry align="left" valign="top"><simpara>2.1.1</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_cves_2">
<title>CVEs</title>
<simpara>This release fixes <link xl:href="https://access.redhat.com/security/cve/cve-2023-44487">CVE-2023-44487</link>.</simpara>
</section>
<section xml:id="jaeger-release-notes_distributed-tracing-rn-2-9-1">
<title>Red Hat OpenShift distributed tracing platform (Jaeger)</title>
<section xml:id="known-issues_jaeger-release-notes_distributed-tracing-rn-2-9-1">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Apache Spark is not supported.</simpara>
</listitem>
<listitem>
<simpara>The streaming deployment via AMQ/Kafka is unsupported on IBM Z and IBM Power Systems.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="tempo-release-notes_distributed-tracing-rn-2-9-1">
<title>Red Hat OpenShift distributed tracing platform (Tempo)</title>
<important>
<simpara>The Red Hat OpenShift distributed tracing platform (Tempo) is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.</simpara>
<simpara>For more information about the support scope of Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<section xml:id="known-issues_tempo-release-notes_distributed-tracing-rn-2-9-1">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Currently, the custom TLS CA option is not implemented for connecting to object storage. (<link xl:href="https://issues.redhat.com/browse/TRACING-3462">TRACING-3462</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, when used with the Tempo Operator, the Jaeger UI only displays services that have sent traces in the last 15 minutes. For services that did not send traces in the last 15 minutes, traces are still stored but not displayed in the Jaeger UI. (<link xl:href="https://issues.redhat.com/browse/TRACING-3139">TRACING-3139</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, the distributed tracing platform (Tempo) fails on the IBM Z (<literal>s390x</literal>) architecture. (<link xl:href="https://issues.redhat.com/browse/TRACING-3545">TRACING-3545</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, the Tempo query frontend service must not use internal mTLS when Gateway is not deployed. This issue does not affect the Jaeger Query API. The workaround is to disable mTLS. (<link xl:href="https://issues.redhat.com/browse/TRACING-3510">TRACING-3510</link>)</simpara>
<formalpara>
<title>Workaround</title>
<para>Disable mTLS as follows:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open the Tempo Operator ConfigMap for editing by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc edit configmap tempo-operator-manager-config -n openshift-tempo-operator <co xml:id="CO2-1"/></programlisting>
<calloutlist>
<callout arearefs="CO2-1">
<para>The project where the Tempo Operator is installed.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>Disable the mTLS in the operator configuration by updating the YAML file:</simpara>
<programlisting language="yaml" linenumbering="unnumbered">data:
  controller_manager_config.yaml: |
    featureGates:
      httpEncryption: false
      grpcEncryption: false
      builtInCertManagement:
        enabled: false</programlisting>
</listitem>
<listitem>
<simpara>Restart the Tempo Operator pod by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc rollout restart deployment.apps/tempo-operator-controller -n openshift-tempo-operator</programlisting>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Missing images for running the Tempo Operator in restricted environments. The Red Hat OpenShift distributed tracing platform (Tempo) CSV is missing references to the operand images. (<link xl:href="https://issues.redhat.com/browse/TRACING-3523">TRACING-3523</link>)</simpara>
<formalpara>
<title>Workaround</title>
<para>Add the Tempo Operator related images in the mirroring tool to mirror the images to the registry:</para>
</formalpara>
<programlisting language="yaml" linenumbering="unnumbered">kind: ImageSetConfiguration
apiVersion: mirror.openshift.io/v1alpha2
archiveSize: 20
storageConfig:
  local:
    path: /home/user/images
mirror:
  operators:
  - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.13
    packages:
    - name: tempo-product
      channels:
      - name: stable
  additionalImages:
  - name: registry.redhat.io/rhosdt/tempo-rhel8@sha256:e4295f837066efb05bcc5897f31eb2bdbd81684a8c59d6f9498dd3590c62c12a
  - name: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:b62f5cedfeb5907b638f14ca6aaeea50f41642980a8a6f87b7061e88d90fac23
  - name: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:8cd134deca47d6817b26566e272e6c3f75367653d589f5c90855c59b2fab01e9
  - name: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:0da43034f440b8258a48a0697ba643b5643d48b615cdb882ac7f4f1f80aad08e</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="otel-release-notes_distributed-tracing-rn-2-9-1">
<title>Red Hat build of OpenTelemetry</title>
<important>
<simpara>The Red Hat build of OpenTelemetry is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.</simpara>
<simpara>For more information about the support scope of Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<section xml:id="known-issues_otel-release-notes_distributed-tracing-rn-2-9-1">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Currently, you must manually set <link xl:href="https://operatorframework.io/operator-capabilities/">operator maturity</link> to Level IV, Deep Insights. (<link xl:href="https://issues.redhat.com/browse/TRACING-3431">TRACING-3431</link>)</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="support_distributed-tracing-rn-2-9-1">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-9-1">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-9">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.9</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-9">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-9">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.9</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.47.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.81.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Tempo)</simpara></entry>
<entry align="left" valign="top"><simpara>Tempo</simpara></entry>
<entry align="left" valign="top"><simpara>2.1.1</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="jaeger-release-notes_distributed-tracing-rn-2-9">
<title>Red Hat OpenShift distributed tracing platform (Jaeger)</title>
<section xml:id="new-features-and-enhancements_jaeger-release-notes_distributed-tracing-rn-2-9">
<title>New features and enhancements</title>
<itemizedlist>
<listitem>
<simpara>None.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_jaeger-release-notes_distributed-tracing-rn-2-9">
<title>Bug fixes</title>
<itemizedlist>
<listitem>
<simpara>Before this update, connection was refused due to a missing gRPC port on the <literal>jaeger-query</literal> deployment. This issue resulted in <literal>transport: Error while dialing: dial tcp :16685: connect: connection refused</literal> error message. With this update, the Jaeger Query gRPC port (16685) is successfully exposed on the Jaeger Query service. (<link xl:href="https://issues.redhat.com/browse/TRACING-3322">TRACING-3322</link>)</simpara>
</listitem>
<listitem>
<simpara>Before this update, the wrong port was exposed for <literal>jaeger-production-query</literal>, resulting in refused connection. With this update, the issue is fixed by exposing the Jaeger Query gRPC port (16685) on the Jaeger Query deployment. (<link xl:href="https://issues.redhat.com/browse/TRACING-2968">TRACING-2968</link>)</simpara>
</listitem>
<listitem>
<simpara>Before this update, when deploying Service Mesh on single-node OpenShift clusters in disconnected environments, the Jaeger pod frequently went into the <literal>Pending</literal> state. With this update, the issue is fixed. (<link xl:href="https://issues.redhat.com/browse/TRACING-3312">TRACING-3312</link>)</simpara>
</listitem>
<listitem>
<simpara>Before this update, the Jaeger Operator pod restarted with the default memory value due to the <literal>reason: OOMKilled</literal> error message. With this update, this issue is fixed by removing the resource limits. (<link xl:href="https://issues.redhat.com/browse/TRACING-3173">TRACING-3173</link>)</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="known-issues_jaeger-release-notes_distributed-tracing-rn-2-9">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Apache Spark is not supported.</simpara>
</listitem>
<listitem>
<simpara>The streaming deployment via AMQ/Kafka is unsupported on IBM Z and IBM Power Systems.</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="tempo-release-notes_distributed-tracing-rn-2-9">
<title>Red Hat OpenShift distributed tracing platform (Tempo)</title>
<important>
<simpara>The Red Hat OpenShift distributed tracing platform (Tempo) is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.</simpara>
<simpara>For more information about the support scope of Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<section xml:id="new-features-and-enhancements_tempo-release-notes_distributed-tracing-rn-2-9">
<title>New features and enhancements</title>
<simpara>This release introduces the following enhancements for the distributed tracing platform (Tempo):</simpara>
<itemizedlist>
<listitem>
<simpara>Support the <link xl:href="https://operatorframework.io/operator-capabilities/">operator maturity</link> Level IV, Deep Insights, which enables upgrading, monitoring, and alerting of <literal>TempoStack</literal> instances and the Tempo Operator.</simpara>
</listitem>
<listitem>
<simpara>Add Ingress and Route configuration for the Gateway.</simpara>
</listitem>
<listitem>
<simpara>Support the <literal>managed</literal> and <literal>unmanaged</literal> states in the <literal>TempoStack</literal> custom resource.</simpara>
</listitem>
<listitem>
<simpara>Expose the following additional ingestion protocols in the Distributor service: Jaeger Thrift binary, Jaeger Thrift compact, Jaeger gRPC, and Zipkin. When the Gateway is enabled, only the OpenTelemetry protocol (OTLP) gRPC is enabled.</simpara>
</listitem>
<listitem>
<simpara>Expose the Jaeger Query gRPC endpoint on the Query Frontend service.</simpara>
</listitem>
<listitem>
<simpara>Support multitenancy without Gateway authentication and authorization.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_tempo-release-notes_distributed-tracing-rn-2-9">
<title>Bug fixes</title>
<itemizedlist>
<listitem>
<simpara>Before this update, the Tempo Operator was not compatible with disconnected environments. With this update, the Tempo Operator supports disconnected environments. (<link xl:href="https://issues.redhat.com/browse/TRACING-3145">TRACING-3145</link>)</simpara>
</listitem>
<listitem>
<simpara>Before this update, the Tempo Operator with TLS failed to start on {product-title}. With this update, the mTLS communication is enabled between Tempo components, the Operand starts successfully, and the Jaeger UI is accessible. (<link xl:href="https://issues.redhat.com/browse/TRACING-3091">TRACING-3091</link>)</simpara>
</listitem>
<listitem>
<simpara>Before this update, the resource limits from the Tempo Operator caused error messages such as <literal>reason: OOMKilled</literal>. With this update, the resource limits for the Tempo Operator are removed to avoid such errors. (<link xl:href="https://issues.redhat.com/browse/TRACING-3204">TRACING-3204</link>)</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="known-issues_tempo-release-notes_distributed-tracing-rn-2-9">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Currently, the custom TLS CA option is not implemented for connecting to object storage. (<link xl:href="https://issues.redhat.com/browse/TRACING-3462">TRACING-3462</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, when used with the Tempo Operator, the Jaeger UI only displays services that have sent traces in the last 15 minutes. For services that did not send traces in the last 15 minutes, traces are still stored but not displayed in the Jaeger UI. (<link xl:href="https://issues.redhat.com/browse/TRACING-3139">TRACING-3139</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, the distributed tracing platform (Tempo) fails on the IBM Z (<literal>s390x</literal>) architecture. (<link xl:href="https://issues.redhat.com/browse/TRACING-3545">TRACING-3545</link>)</simpara>
</listitem>
<listitem>
<simpara>Currently, the Tempo query frontend service must not use internal mTLS when Gateway is not deployed. This issue does not affect the Jaeger Query API. The workaround is to disable mTLS. (<link xl:href="https://issues.redhat.com/browse/TRACING-3510">TRACING-3510</link>)</simpara>
<formalpara>
<title>Workaround</title>
<para>Disable mTLS as follows:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open the Tempo Operator ConfigMap for editing by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc edit configmap tempo-operator-manager-config -n openshift-tempo-operator <co xml:id="CO3-1"/></programlisting>
<calloutlist>
<callout arearefs="CO3-1">
<para>The project where the Tempo Operator is installed.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>Disable the mTLS in the operator configuration by updating the YAML file:</simpara>
<programlisting language="yaml" linenumbering="unnumbered">data:
  controller_manager_config.yaml: |
    featureGates:
      httpEncryption: false
      grpcEncryption: false
      builtInCertManagement:
        enabled: false</programlisting>
</listitem>
<listitem>
<simpara>Restart the Tempo Operator pod by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc rollout restart deployment.apps/tempo-operator-controller -n openshift-tempo-operator</programlisting>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Missing images for running the Tempo Operator in restricted environments. The Red Hat OpenShift distributed tracing platform (Tempo) CSV is missing references to the operand images. (<link xl:href="https://issues.redhat.com/browse/TRACING-3523">TRACING-3523</link>)</simpara>
<formalpara>
<title>Workaround</title>
<para>Add the Tempo Operator related images in the mirroring tool to mirror the images to the registry:</para>
</formalpara>
<programlisting language="yaml" linenumbering="unnumbered">kind: ImageSetConfiguration
apiVersion: mirror.openshift.io/v1alpha2
archiveSize: 20
storageConfig:
  local:
    path: /home/user/images
mirror:
  operators:
  - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.13
    packages:
    - name: tempo-product
      channels:
      - name: stable
  additionalImages:
  - name: registry.redhat.io/rhosdt/tempo-rhel8@sha256:e4295f837066efb05bcc5897f31eb2bdbd81684a8c59d6f9498dd3590c62c12a
  - name: registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:b62f5cedfeb5907b638f14ca6aaeea50f41642980a8a6f87b7061e88d90fac23
  - name: registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:8cd134deca47d6817b26566e272e6c3f75367653d589f5c90855c59b2fab01e9
  - name: registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:0da43034f440b8258a48a0697ba643b5643d48b615cdb882ac7f4f1f80aad08e</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="otel-release-notes_distributed-tracing-rn-2-9">
<title>Red Hat build of OpenTelemetry</title>
<important>
<simpara>The Red Hat build of OpenTelemetry is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.</simpara>
<simpara>For more information about the support scope of Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<section xml:id="new-features-and-enhancements_otel-release-notes_distributed-tracing-rn-2-9">
<title>New features and enhancements</title>
<simpara>This release introduces the following enhancements for the Red Hat build of OpenTelemetry:</simpara>
<itemizedlist>
<listitem>
<simpara>Support OTLP metrics ingestion. The metrics can be forwarded and stored in the <literal>user-workload-monitoring</literal> via the Prometheus exporter.</simpara>
</listitem>
<listitem>
<simpara>Support the <link xl:href="https://operatorframework.io/operator-capabilities/">operator maturity</link> Level IV, Deep Insights, which enables upgrading and monitoring of <literal>OpenTelemetry Collector</literal> instances and the Red Hat build of OpenTelemetry Operator.</simpara>
</listitem>
<listitem>
<simpara>Report traces and metrics from remote clusters using OTLP or HTTP and HTTPS.</simpara>
</listitem>
<listitem>
<simpara>Collect {product-title} resource attributes via the <literal>resourcedetection</literal> processor.</simpara>
</listitem>
<listitem>
<simpara>Support the <literal>managed</literal> and <literal>unmanaged</literal> states in the <literal>OpenTelemetryCollector</literal> custom resouce.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_otel-release-notes_distributed-tracing-rn-2-9">
<title>Bug fixes</title>
<simpara>None.</simpara>
</section>
<section xml:id="known-issues_otel-release-notes_distributed-tracing-rn-2-9">
<title>Known issues</title>
<itemizedlist>
<listitem>
<simpara>Currently, you must manually set <link xl:href="https://operatorframework.io/operator-capabilities/">operator maturity</link> to Level IV, Deep Insights. (<link xl:href="https://issues.redhat.com/browse/TRACING-3431">TRACING-3431</link>)</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="support_distributed-tracing-rn-2-9">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-9">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-8">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.8</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-8">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-8">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.8</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.42</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.74.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Tempo)</simpara></entry>
<entry align="left" valign="top"><simpara>Tempo</simpara></entry>
<entry align="left" valign="top"><simpara>0.1.0</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="technology-preview-features_distributed-tracing-rn-2-8">
<title>Technology Preview features</title>
<simpara>This release introduces support for the Red Hat OpenShift distributed tracing platform (Tempo) as a <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview</link> feature for Red Hat OpenShift distributed tracing platform.</simpara>
<important>
<simpara>The Red Hat OpenShift distributed tracing platform (Tempo) is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.</simpara>
<simpara>For more information about the support scope of Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<simpara>The feature uses version 0.1.0 of the Red Hat OpenShift distributed tracing platform (Tempo) and version 2.0.1 of the upstream distributed tracing platform (Tempo) components.</simpara>
<simpara>You can use the distributed tracing platform (Tempo) to replace Jaeger so that you can use S3-compatible storage instead of ElasticSearch.
Most users who use the distributed tracing platform (Tempo) instead of Jaeger will not notice any difference in functionality because the distributed tracing platform (Tempo) supports the same ingestion and query protocols as Jaeger and uses the same user interface.</simpara>
<simpara>If you enable this Technology Preview feature, note the following limitations of the current implementation:</simpara>
<itemizedlist>
<listitem>
<simpara>The distributed tracing platform (Tempo) currently does not support disconnected installations. (<link xl:href="https://issues.redhat.com/browse/TRACING-3145">TRACING-3145</link>)</simpara>
</listitem>
<listitem>
<simpara>When you use the Jaeger user interface (UI) with the distributed tracing platform (Tempo), the Jaeger UI lists only services that have sent traces within the last 15 minutes. For services that have not sent traces within the last 15 minutes, those traces are still stored even though they are not visible in the Jaeger UI. (<link xl:href="https://issues.redhat.com/browse/TRACING-3139">TRACING-3139</link>)</simpara>
</listitem>
</itemizedlist>
<simpara>Expanded support for the Tempo Operator is planned for future releases of the Red Hat OpenShift distributed tracing platform.
Possible additional features might include support for TLS authentication, multitenancy, and multiple clusters.
For more information about the Tempo Operator, see the <link xl:href="https://tempo-operator.netlify.app">Tempo community documentation</link>.</simpara>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-8">
<title>Bug fixes</title>
<simpara>This release addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-8">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-8">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-7">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.7</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-7">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-7">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.7</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.39</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.63.1</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-7">
<title>Bug fixes</title>
<simpara>This release addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-7">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-7">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-6">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.6</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-6">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-6">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.6</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.38</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.60</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-6">
<title>Bug fixes</title>
<simpara>This release addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-6">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-6">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-5">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.5</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-5">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-5">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.5</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.36</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.56</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="new-features-and-enhancements_distributed-tracing-rn-2-5">
<title>New features and enhancements</title>
<simpara>This release introduces support for ingesting OpenTelemetry protocol (OTLP) to the Red Hat OpenShift distributed tracing platform (Jaeger) Operator.
The Operator now automatically enables the OTLP ports:</simpara>
<itemizedlist>
<listitem>
<simpara>Port 4317 for the OTLP gRPC protocol.</simpara>
</listitem>
<listitem>
<simpara>Port 4318 for the OTLP HTTP protocol.</simpara>
</listitem>
</itemizedlist>
<simpara>This release also adds support for collecting Kubernetes resource attributes to the Red Hat build of OpenTelemetry Operator.</simpara>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-5">
<title>Bug fixes</title>
<simpara>This release addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-5">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-5">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-4">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.4</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-4">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-4">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.4</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.34.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.49</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="new-features-and-enhancements_distributed-tracing-rn-2-4">
<title>New features and enhancements</title>
<simpara>This release adds support for auto-provisioning certificates using the Red Hat Elasticsearch Operator.</simpara>
<itemizedlist>
<listitem>
<simpara>Self-provisioning by using the Red Hat OpenShift distributed tracing platform (Jaeger) Operator to call the Red Hat Elasticsearch Operator during installation.</simpara>
<important>
<simpara>When upgrading to the Red Hat OpenShift distributed tracing platform 2.4, the operator recreates the Elasticsearch instance, which might take five to ten minutes. Distributed tracing will be down and unavailable for that period.</simpara>
</important>
</listitem>
</itemizedlist>
</section>
<section xml:id="technology-preview-features_distributed-tracing-rn-2-4">
<title>Technology Preview features</title>
<itemizedlist>
<listitem>
<simpara>Creating the Elasticsearch instance and certificates first and then configuring the distributed tracing platform (Jaeger) to use the certificate is a <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview</link> for this release.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-4">
<title>Bug fixes</title>
<simpara>This release addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-4">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-4">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-3">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.3</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-3">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions-2-3-0_distributed-tracing-rn-2-3">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.3.0</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.30.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.44.0</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="component-versions-2-3-1_distributed-tracing-rn-2-3">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.3.1</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.30.2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.44.1-1</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="new-features-and-enhancements_distributed-tracing-rn-2-3">
<title>New features and enhancements</title>
<simpara>With this release, the Red Hat OpenShift distributed tracing platform (Jaeger) Operator is now installed to the <literal>openshift-distributed-tracing</literal> namespace by default. Before this update, the default installation had been in the <literal>openshift-operators</literal> namespace.</simpara>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-3">
<title>Bug fixes</title>
<simpara>This release addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-3">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-3">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-2">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.2</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-2">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="technology-preview-features_distributed-tracing-rn-2-2">
<title>Technology Preview features</title>
<itemizedlist>
<listitem>
<simpara>The unsupported OpenTelemetry Collector components included in the 2.1 release are removed.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-2">
<title>Bug fixes</title>
<simpara>This release of the Red Hat OpenShift distributed tracing platform addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-2">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-2">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-1">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.1</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-1">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-1">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.1.0</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.29.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.41.1</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="technology-preview-features_distributed-tracing-rn-2-1">
<title>Technology Preview features</title>
<itemizedlist>
<listitem>
<simpara>This release introduces a breaking change to how to configure certificates in the OpenTelemetry custom resource file. With this update, the <literal>ca_file</literal> moves under <literal>tls</literal> in the custom resource, as shown in the following examples.</simpara>
<formalpara>
<title>CA file configuration for OpenTelemetry version 0.33</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">spec:
  mode: deployment
  config: |
    exporters:
      jaeger:
        endpoint: jaeger-production-collector-headless.tracing-system.svc:14250
        ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"</programlisting>
</para>
</formalpara>
<formalpara>
<title>CA file configuration for OpenTelemetry version 0.41.1</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">spec:
  mode: deployment
  config: |
    exporters:
      jaeger:
        endpoint: jaeger-production-collector-headless.tracing-system.svc:14250
        tls:
          ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"</programlisting>
</para>
</formalpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-1">
<title>Bug fixes</title>
<simpara>This release addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-1">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-1">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
<section xml:id="distributed-tracing-rn-2-0">
<title>Release notes for Red Hat OpenShift distributed tracing platform 2.0</title>

<section xml:id="distr-tracing-product-overview_distributed-tracing-rn-2-0">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="component-versions_distributed-tracing-rn-2-0">
<title>Component versions in the Red Hat OpenShift distributed tracing platform 2.0.0</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Operator</entry>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Version</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Red Hat OpenShift distributed tracing platform (Jaeger)</simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger</simpara></entry>
<entry align="left" valign="top"><simpara>1.28.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Red Hat build of OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>OpenTelemetry</simpara></entry>
<entry align="left" valign="top"><simpara>0.33.0</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="new-features-and-enhancements_distributed-tracing-rn-2-0">
<title>New features and enhancements</title>
<simpara>This release introduces the following new features and enhancements:</simpara>
<itemizedlist>
<listitem>
<simpara>Rebrands Red Hat OpenShift Jaeger as the Red Hat OpenShift distributed tracing platform.</simpara>
</listitem>
<listitem>
<simpara>Updates Red Hat OpenShift distributed tracing platform (Jaeger) Operator to Jaeger 1.28. Going forward, the Red Hat OpenShift distributed tracing platform will only support the <literal>stable</literal> Operator channel.
Channels for individual releases are no longer supported.</simpara>
</listitem>
<listitem>
<simpara>Adds support for OpenTelemetry protocol (OTLP) to the Query service.</simpara>
</listitem>
<listitem>
<simpara>Introduces a new distributed tracing icon that appears in the OperatorHub.</simpara>
</listitem>
<listitem>
<simpara>Includes rolling updates to the documentation to support the name change and new features.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="technology-preview-features_distributed-tracing-rn-2-0">
<title>Technology Preview features</title>
<itemizedlist>
<listitem>
<simpara>This release adds the Red Hat build of OpenTelemetry as a <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview</link>, which you install using the Red Hat build of OpenTelemetry Operator. Red Hat build of OpenTelemetry is based on the <link xl:href="https://opentelemetry.io/">OpenTelemetry</link> APIs and instrumentation. The Red Hat build of OpenTelemetry includes the OpenTelemetry Operator and Collector. You can use the Collector to receive traces in the OpenTelemetry or Jaeger protocol and send the trace data to the Red Hat OpenShift distributed tracing platform. Other capabilities of the Collector are not supported at this time. The OpenTelemetry Collector allows developers to instrument their code with vendor agnostic APIs, avoiding vendor lock-in and enabling a growing ecosystem of observability tooling.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="bug-fixes_distributed-tracing-rn-2-0">
<title>Bug fixes</title>
<simpara>This release addresses Common Vulnerabilities and Exposures (CVEs) and bug fixes.</simpara>
</section>
<section xml:id="support_distributed-tracing-rn-2-0">
<title>Getting support</title>
<simpara>If you experience difficulty with a procedure described in this documentation, or with {product-title} in general, visit the <link xl:href="http://access.redhat.com">Red Hat Customer Portal</link>.</simpara>
<simpara>From the Customer Portal, you can:</simpara>
<itemizedlist>
<listitem>
<simpara>Search or browse through the Red Hat Knowledgebase of articles and solutions relating to Red Hat products.</simpara>
</listitem>
<listitem>
<simpara>Submit a support case to Red Hat Support.</simpara>
</listitem>
<listitem>
<simpara>Access other product documentation.</simpara>
</listitem>
</itemizedlist>
<simpara>To identify issues with your cluster, you can use Insights in <link xl:href="https://console.redhat.com/openshift">OpenShift Cluster Manager Hybrid Cloud Console</link>. Insights provides details about issues and, if available, information on how to solve a problem.</simpara>
<simpara>If you have a suggestion for improving this documentation or have found an
error, submit a <link xl:href="https://issues.redhat.com/secure/CreateIssueDetails!init.jspa?pid=12332330&amp;summary=Documentation_issue&amp;issuetype=1&amp;components=12367614&amp;priority=10200&amp;versions=12385624">Jira issue</link> for the most relevant documentation component. Please provide specific details, such as the section name and {product-title} version.</simpara>
</section>
<section xml:id="making-open-source-more-inclusive_distributed-tracing-rn-2-0">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language">our CTO Chris Wright&#8217;s message</link>.</simpara>
</section>
</section>
</chapter>
<chapter xml:id="_distributed_tracing_architecture">
<title>Distributed tracing architecture</title>
<section xml:id="distr-tracing-architecture">
<title>Distributed tracing architecture</title>

<simpara>Every time a user takes an action in an application, a request is executed by the architecture that may require dozens of different services to participate to produce a response.
Red Hat OpenShift distributed tracing platform lets you perform distributed tracing, which records the path of a request through various microservices that make up an application.</simpara>
<simpara><emphasis>Distributed tracing</emphasis> is a technique that is used to tie the information about different units of work together — usually executed in different processes or hosts — to understand a whole chain of events in a distributed transaction.
Developers can visualize call flows in large microservice architectures with distributed tracing.
It is valuable for understanding serialization, parallelism, and sources of latency.</simpara>
<simpara>Red Hat OpenShift distributed tracing platform records the execution of individual requests across the whole stack of microservices, and presents them as traces. A <emphasis>trace</emphasis> is a data/execution path through the system. An end-to-end trace is comprised of one or more spans.</simpara>
<simpara>A <emphasis>span</emphasis> represents a logical unit of work in Red Hat OpenShift distributed tracing platform that has an operation name, the start time of the operation, and the duration, as well as potentially tags and logs. Spans may be nested and ordered to model causal relationships.</simpara>
<section xml:id="distr-tracing-product-overview_distributed-tracing-architecture">
<title>Distributed tracing overview</title>
<simpara>As a service owner, you can use distributed tracing to instrument your services to gather insights into your service architecture.
You can use the Red Hat OpenShift distributed tracing platform for monitoring, network profiling, and troubleshooting the interaction between components in modern, cloud-native, microservices-based applications.</simpara>
<simpara>With the distributed tracing platform, you can perform the following functions:</simpara>
<itemizedlist>
<listitem>
<simpara>Monitor distributed transactions</simpara>
</listitem>
<listitem>
<simpara>Optimize performance and latency</simpara>
</listitem>
<listitem>
<simpara>Perform root cause analysis</simpara>
</listitem>
</itemizedlist>
<simpara>The distributed tracing platform consists of three components:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis>, which is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis>, which is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis>, which is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
</listitem>
</itemizedlist>
<important>
<simpara>Jaeger does not use FIPS validated cryptographic modules.</simpara>
</important>
</section>
<section xml:id="distr-tracing-features_distributed-tracing-architecture">
<title>Red Hat OpenShift distributed tracing platform features</title>
<simpara>Red Hat OpenShift distributed tracing platform provides the following capabilities:</simpara>
<itemizedlist>
<listitem>
<simpara>Integration with Kiali – When properly configured, you can view distributed tracing platform data from the Kiali console.</simpara>
</listitem>
<listitem>
<simpara>High scalability – The distributed tracing platform back end is designed to have no single points of failure and to scale with the business needs.</simpara>
</listitem>
<listitem>
<simpara>Distributed Context Propagation – Enables you to connect data from different components together to create a complete end-to-end trace.</simpara>
</listitem>
<listitem>
<simpara>Backwards compatibility with Zipkin – Red Hat OpenShift distributed tracing platform has APIs that enable it to be used as a drop-in replacement for Zipkin, but Red Hat is not supporting Zipkin compatibility in this release.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="distr-tracing-architecture_distributed-tracing-architecture">
<title>Red Hat OpenShift distributed tracing platform architecture</title>
<simpara>Red Hat OpenShift distributed tracing platform is made up of several components that work together to collect, store, and display tracing data.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger)</emphasis> - This component is based on the open source <link xl:href="https://www.jaegertracing.io/">Jaeger project</link>.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Client</emphasis> (Jaeger client, Tracer, Reporter, instrumented application, client libraries)- The distributed tracing platform (Jaeger) clients are language-specific implementations of the OpenTracing API. They can be used to instrument applications for distributed tracing either manually or with a variety of existing open source frameworks, such as Camel (Fuse), Spring Boot (RHOAR), MicroProfile (RHOAR/Thorntail), Wildfly (EAP), and many more, that are already integrated with OpenTracing.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Agent</emphasis> (Jaeger agent, Server Queue, Processor Workers) - The distributed tracing platform (Jaeger) agent is a network daemon that listens for spans sent over User Datagram Protocol (UDP), which it batches and sends to the Collector. The agent is meant to be placed on the same host as the instrumented application. This is typically accomplished by having a sidecar in container environments such as Kubernetes.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Jaeger Collector</emphasis> (Collector, Queue, Workers) - Similar to the Jaeger agent, the Jaeger Collector receives spans and places them in an internal queue for processing. This allows the Jaeger Collector to return immediately to the client/agent instead of waiting for the span to make its way to the storage.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Storage</emphasis> (Data Store) - Collectors require a persistent storage backend. Red Hat OpenShift distributed tracing platform (Jaeger) has a pluggable mechanism for span storage. Note that for this release, the only supported storage is Elasticsearch.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Query</emphasis> (Query Service) - Query is a service that retrieves traces from storage.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Ingester</emphasis> (Ingester Service) - Red Hat OpenShift distributed tracing platform can use Apache Kafka as a buffer between the Collector and the actual Elasticsearch backing storage. Ingester is a service that reads data from Kafka and writes to the Elasticsearch storage backend.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Jaeger Console</emphasis> – With the Red Hat OpenShift distributed tracing platform (Jaeger) user interface, you can visualize your distributed tracing data. On the Search page, you can find traces and explore details of the spans that make up an individual trace.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat OpenShift distributed tracing platform (Tempo)</emphasis> - This component is based on the open source <link xl:href="https://grafana.com/oss/tempo/">Grafana Tempo project</link>.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Gateway</emphasis> – The Gateway handles authentication, authorization, and forwarding requests to the Distributor or Query front-end service.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Distributor</emphasis> – The Distributor accepts spans in multiple formats including Jaeger, OpenTelemetry, and Zipkin. It routes spans to Ingesters by hashing the <literal>traceID</literal> and using a distributed consistent hash ring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Ingester</emphasis> – The Ingester batches a trace into blocks, creates bloom filters and indexes, and then flushes it all to the back end.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Query Frontend</emphasis> – The Query Frontend is responsible for sharding the search space for an incoming query. The search query is then sent to the Queriers. The Query Frontend deployment exposes the Jaeger UI through the Tempo Query sidecar.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Querier</emphasis> - The Querier is responsible for finding the requested trace ID in either the Ingesters or the back-end storage. Depending on parameters, it can query the Ingesters and pull Bloom indexes from the back end to search blocks in object storage.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Compactor</emphasis> – The Compactors stream blocks to and from the back-end storage to reduce the total number of blocks.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat build of OpenTelemetry</emphasis> - This component is based on the open source <link xl:href="https://opentelemetry.io/">OpenTelemetry project</link>.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">OpenTelemetry Collector</emphasis> - The OpenTelemetry Collector is a vendor-agnostic way to receive, process, and export telemetry data. The OpenTelemetry Collector supports open-source observability data formats, for example, Jaeger and Prometheus, sending to one or more open-source or commercial back-ends. The Collector is the default location instrumentation libraries export their telemetry data.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="additional-resources_distributed-tracing-architecture" role="_additional-resources">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="../../otel/otel-release-notes.xml">Red Hat build of OpenTelemetry</link></simpara>
</listitem>
</itemizedlist>
</section>
</section>
</chapter>
<chapter xml:id="_distributed_tracing_platform_jaeger">
<title>Distributed tracing platform (Jaeger)</title>
<section xml:id="dist-tracing-jaeger-installing">
<title>Installing the distributed tracing platform Jaeger</title>

<warning>
<simpara>Jaeger is deprecated in Red Hat OpenShift distributed tracing 3.0.</simpara>
</warning>
<simpara>You can install Red Hat OpenShift distributed tracing platform on {product-title} in either of two ways:</simpara>
<itemizedlist>
<listitem>
<simpara>You can install Red Hat OpenShift distributed tracing platform as part of Red Hat OpenShift Service Mesh. Distributed tracing is included by default in the Service Mesh installation. To install Red Hat OpenShift distributed tracing platform as part of a service mesh, follow the <link xl:href="../../service_mesh/v2x/preparing-ossm-installation.xml#preparing-ossm-installation">Red Hat Service Mesh Installation</link> instructions. You must install Red Hat OpenShift distributed tracing platform in the same namespace as your service mesh, that is, the <literal>ServiceMeshControlPlane</literal> and the Red Hat OpenShift distributed tracing platform resources must be in the same namespace.</simpara>
</listitem>
<listitem>
<simpara>If you do not want to install a service mesh, you can use the Red Hat OpenShift distributed tracing platform Operators to install distributed tracing platform by itself. To install Red Hat OpenShift distributed tracing platform without a service mesh, use the following instructions.</simpara>
</listitem>
</itemizedlist>
<section xml:id="prerequisites">
<title>Prerequisites</title>
<simpara>Before you can install Red Hat OpenShift distributed tracing platform, review the installation activities, and ensure that you meet the prerequisites:</simpara>
<itemizedlist>
<listitem>
<simpara>Possess an active {product-title} subscription on your Red Hat account. If you do not have a subscription, contact your sales representative for more information.</simpara>
</listitem>
<listitem>
<simpara>Review the <link xl:href="../../architecture/architecture-installation.xml#installation-overview_architecture-installation">{product-title} {product-version} overview</link>.</simpara>
</listitem>
<listitem>
<simpara>Install {product-title} {product-version}.</simpara>
<itemizedlist>
<listitem>
<simpara><link xl:href="../../installing/installing_aws/installing-aws-account.xml#installing-aws-account">Install {product-title} {product-version} on AWS</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../installing/installing_aws/installing-aws-user-infra.xml#installing-aws-user-infra">Install {product-title} {product-version} on user-provisioned AWS</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../installing/installing_bare_metal/installing-bare-metal.xml#installing-bare-metal">Install {product-title} {product-version} on bare metal</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../installing/installing_vsphere/upi/installing-vsphere.xml#installing-vsphere">Install {product-title} {product-version} on vSphere</link></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Install the version of the <literal>oc</literal> CLI tool that matches your {product-title} version and add it to your path.</simpara>
</listitem>
<listitem>
<simpara>An account with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="distr-tracing-install-overview_dist-tracing-jaeger-installing">
<title>Red Hat OpenShift distributed tracing platform installation overview</title>
<simpara>The steps for installing Red Hat OpenShift distributed tracing platform are as follows:</simpara>
<itemizedlist>
<listitem>
<simpara>Review the documentation and determine your deployment strategy.</simpara>
</listitem>
<listitem>
<simpara>If your deployment strategy requires persistent storage, install the OpenShift Elasticsearch Operator via the OperatorHub.</simpara>
</listitem>
<listitem>
<simpara>Install the Red Hat OpenShift distributed tracing platform (Jaeger) Operator via the OperatorHub.</simpara>
</listitem>
<listitem>
<simpara>Modify the custom resource YAML file to support your deployment strategy.</simpara>
</listitem>
<listitem>
<simpara>Deploy one or more instances of Red Hat OpenShift distributed tracing platform (Jaeger) to your {product-title} environment.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="distr-tracing-operator-install-elasticsearch_dist-tracing-jaeger-installing">
<title>Installing the OpenShift Elasticsearch Operator</title>
<simpara>The default Red Hat OpenShift distributed tracing platform (Jaeger) deployment uses in-memory storage because it is designed to be installed quickly for those evaluating Red Hat OpenShift distributed tracing platform, giving demonstrations, or using Red Hat OpenShift distributed tracing platform (Jaeger) in a test environment. If you plan to use Red Hat OpenShift distributed tracing platform (Jaeger) in production, you must install and configure a persistent storage option, in this case, Elasticsearch.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have access to the {product-title} web console.</simpara>
</listitem>
<listitem>
<simpara>You have access to the cluster as a user with the <literal>cluster-admin</literal> role. If you use Red Hat OpenShift Dedicated, you must have an account with the <literal>dedicated-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<warning>
<simpara>Do not install Community versions of the Operators. Community Operators are not supported.</simpara>
</warning>
<note>
<simpara>If you have already installed the OpenShift Elasticsearch Operator as part of OpenShift Logging, you do not need to install the OpenShift Elasticsearch Operator again. The Red Hat OpenShift distributed tracing platform (Jaeger) Operator creates the Elasticsearch instance using the installed OpenShift Elasticsearch Operator.</simpara>
</note>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in to the {product-title} web console as a user with the <literal>cluster-admin</literal> role. If you use Red Hat OpenShift Dedicated, you must have an account with the <literal>dedicated-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">OperatorHub</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Type <emphasis role="strong">Elasticsearch</emphasis> into the filter box to locate the OpenShift Elasticsearch Operator.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">OpenShift Elasticsearch Operator</emphasis> provided by Red Hat to display information about the Operator.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Install</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Install Operator</emphasis> page, select the <emphasis role="strong">stable</emphasis> Update Channel. This automatically updates your Operator as new versions are released.</simpara>
</listitem>
<listitem>
<simpara>Accept the default <emphasis role="strong">All namespaces on the cluster (default)</emphasis>. This installs the Operator in the default <literal>openshift-operators-redhat</literal> project and makes the Operator available to all projects in the cluster.</simpara>
<note>
<simpara>The Elasticsearch installation requires the <emphasis role="strong">openshift-operators-redhat</emphasis> namespace for the OpenShift Elasticsearch Operator. The other Red Hat OpenShift distributed tracing platform Operators are installed in the <literal>openshift-operators</literal> namespace.</simpara>
</note>
</listitem>
<listitem>
<simpara>Accept the default <emphasis role="strong">Automatic</emphasis> approval strategy. By accepting the default, when a new version of this Operator is available, Operator Lifecycle Manager (OLM) automatically upgrades the running instance of your Operator without human intervention. If you select <emphasis role="strong">Manual</emphasis> updates, when a newer version of an Operator is available, OLM creates an update request. As a cluster administrator, you must then manually approve that update request to have the Operator updated to the new version.</simpara>
<note>
<simpara>The <emphasis role="strong">Manual</emphasis> approval strategy requires a user with appropriate credentials to approve the Operator install and subscription process.</simpara>
</note>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Install</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Installed Operators</emphasis> page, select the <literal>openshift-operators-redhat</literal> project. Wait until you see that the OpenShift Elasticsearch Operator shows a status of "InstallSucceeded" before continuing.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="distr-tracing-jaeger-operator-install_dist-tracing-jaeger-installing">
<title>Installing the Red Hat OpenShift distributed tracing platform (Jaeger) Operator</title>
<simpara>To install Red Hat OpenShift distributed tracing platform (Jaeger), you use the <link xl:href="https://operatorhub.io/">OperatorHub</link> to install the Red Hat OpenShift distributed tracing platform (Jaeger) Operator.</simpara>
<simpara>By default, the Operator is installed in the <literal>openshift-operators</literal> project.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have access to the {product-title} web console.</simpara>
</listitem>
<listitem>
<simpara>You have access to the cluster as a user with the <literal>cluster-admin</literal> role. If you use Red Hat OpenShift Dedicated, you must have an account with the <literal>dedicated-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>If you require persistent storage, you must also install the OpenShift Elasticsearch Operator before installing the Red Hat OpenShift distributed tracing platform (Jaeger) Operator.</simpara>
</listitem>
</itemizedlist>
<warning>
<simpara>Do not install Community versions of the Operators. Community Operators are not supported.</simpara>
</warning>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in to the {product-title} web console as a user with the <literal>cluster-admin</literal> role. If you use Red Hat OpenShift Dedicated, you must have an account with the <literal>dedicated-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">OperatorHub</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Type <emphasis role="strong">distributed tracing platform</emphasis> into the filter to locate the Red Hat OpenShift distributed tracing platform (Jaeger) Operator.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Red Hat OpenShift distributed tracing platform (Jaeger) Operator</emphasis> provided by Red Hat to display information about the Operator.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Install</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Install Operator</emphasis> page, select the <emphasis role="strong">stable</emphasis> Update Channel. This automatically updates your Operator as new versions are released.</simpara>
</listitem>
<listitem>
<simpara>Accept the default <emphasis role="strong">All namespaces on the cluster (default)</emphasis>. This installs the Operator in the default <literal>openshift-operators</literal> project and makes the Operator available to all projects in the cluster.</simpara>
<itemizedlist>
<listitem>
<simpara>Accept the default <emphasis role="strong">Automatic</emphasis> approval strategy. By accepting the default, when a new version of this Operator is available, Operator Lifecycle Manager (OLM) automatically upgrades the running instance of your Operator without human intervention. If you select <emphasis role="strong">Manual</emphasis> updates, when a newer version of an Operator is available, OLM creates an update request. As a cluster administrator, you must then manually approve that update request to have the Operator updated to the new version.</simpara>
<note>
<simpara>The <emphasis role="strong">Manual</emphasis> approval strategy requires a user with appropriate credentials to approve the Operator install and subscription process.</simpara>
</note>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Install</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">Installed Operators</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Installed Operators</emphasis> page, select the <literal>openshift-operators</literal> project. Wait until you see that the Red Hat OpenShift distributed tracing platform (Jaeger) Operator shows a status of "Succeeded" before continuing.</simpara>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="distr-tracing-jaeger-configuring">
<title>Configuring and deploying the distributed tracing platform Jaeger</title>

<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator uses a custom resource definition (CRD) file that defines the architecture and configuration settings to be used when creating and deploying the distributed tracing platform (Jaeger) resources. You can install the default configuration or modify the file.</simpara>
<simpara>If you have installed distributed tracing platform as part of Red Hat OpenShift Service Mesh, you can perform basic configuration as part of the <link xl:href="../../service_mesh/v2x/installing-ossm.xml#installing-ossm">ServiceMeshControlPlane</link>, but for complete control, you must configure a Jaeger CR and then <link xl:href="../../service_mesh/v2x/ossm-observability.xml#ossm-config-external-jaeger_observability">reference your distributed tracing configuration file in the ServiceMeshControlPlane</link>.</simpara>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) has predefined deployment strategies. You specify a deployment strategy in the custom resource file. When you create a distributed tracing platform (Jaeger) instance, the Operator uses this configuration file to create the objects necessary for the deployment.</simpara>
<formalpara>
<title>Jaeger custom resource file showing deployment strategy</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: MyConfigFile
spec:
  strategy: production <co xml:id="CO4-1"/></programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO4-1">
<para>Deployment strategy.</para>
</callout>
</calloutlist>
<section xml:id="supported-deployment-strategies">
<title>Supported deployment strategies</title>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator currently supports the following deployment strategies:</simpara>
<variablelist>
<varlistentry>
<term><literal>allInOne</literal></term>
<listitem>
<simpara>- This strategy is intended for development, testing, and demo purposes; it is not intended for production use. The main backend components, Agent, Collector, and Query service, are all packaged into a single executable which is configured, by default. to use in-memory storage.</simpara>
<note>
<simpara>In-memory storage is not persistent, which means that if the distributed tracing platform (Jaeger) instance shuts down, restarts, or is replaced, that your trace data will be lost. And in-memory storage cannot be scaled, since each pod has its own memory. For persistent storage, you must use the <literal>production</literal> or <literal>streaming</literal> strategies, which use Elasticsearch as the default storage.</simpara>
</note>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>production</literal></term>
<listitem>
<simpara>The production strategy is intended for production environments, where long term storage of trace data is important, as well as a more scalable and highly available architecture is required. Each of the backend components is therefore deployed separately. The Agent can be injected as a sidecar on the instrumented application. The Query and Collector services are configured with a supported storage type - currently Elasticsearch. Multiple instances of each of these components can be provisioned as required for performance and resilience purposes.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>streaming</literal></term>
<listitem>
<simpara>The streaming strategy is designed to augment the production strategy by providing a streaming capability that effectively sits between the Collector and the Elasticsearch backend storage. This provides the benefit of reducing the pressure on the backend storage, under high load situations, and enables other trace post-processing capabilities to tap into the real time span data directly from the streaming platform (<link xl:href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.6/html/using_amq_streams_on_openshift/index">AMQ Streams</link>/ <link xl:href="https://kafka.apache.org/documentation/">Kafka</link>).</simpara>
<note>
<itemizedlist>
<listitem>
<simpara>The streaming strategy requires an additional Red Hat subscription for AMQ Streams.</simpara>
</listitem>
<listitem>
<simpara>The streaming deployment strategy is currently unsupported on IBM Z&#174;.</simpara>
</listitem>
</itemizedlist>
</note>
</listitem>
</varlistentry>
</variablelist>
</section>
<section xml:id="distr-tracing-deploy-default_distr-tracing-jaeger-configuring">
<title>Deploying the distributed tracing platform default strategy from the web console</title>
<simpara>The custom resource definition (CRD) defines the configuration used when you deploy an instance of Red Hat OpenShift distributed tracing platform. The default CR is named <literal>jaeger-all-in-one-inmemory</literal> and it is configured with minimal resources to ensure that you can successfully install it on a default {product-title} installation. You can use this default configuration to create a Red Hat OpenShift distributed tracing platform (Jaeger) instance that uses the <literal>AllInOne</literal> deployment strategy, or you can define your own custom resource file.</simpara>
<note>
<simpara>In-memory storage is not persistent. If the Jaeger pod shuts down, restarts, or is replaced, your trace data will be lost. For persistent storage, you must use the <literal>production</literal> or <literal>streaming</literal> strategies, which use Elasticsearch as the default storage.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator has been installed.</simpara>
</listitem>
<listitem>
<simpara>You have reviewed the instructions for how to customize the deployment.</simpara>
</listitem>
<listitem>
<simpara>You have access to the cluster as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in to the {product-title} web console as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>Create a new project, for example <literal>tracing-system</literal>.</simpara>
<note>
<simpara>If you are installing as part of Service Mesh, the distributed tracing platform resources must be installed in the same namespace as the <literal>ServiceMeshControlPlane</literal> resource, for example <literal>istio-system</literal>.</simpara>
</note>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Go to <emphasis role="strong">Home</emphasis> &#8594; <emphasis role="strong">Projects</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create Project</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Enter <literal>tracing-system</literal> in the <emphasis role="strong">Name</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create</emphasis>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">Installed Operators</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>If necessary, select <literal>tracing-system</literal> from the <emphasis role="strong">Project</emphasis> menu. You may have to wait a few moments for the Operators to be copied to the new project.</simpara>
</listitem>
<listitem>
<simpara>Click the Red Hat OpenShift distributed tracing platform (Jaeger) Operator. On the <emphasis role="strong">Details</emphasis> tab, under <emphasis role="strong">Provided APIs</emphasis>, the Operator provides a single link.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Jaeger</emphasis>, click <emphasis role="strong">Create Instance</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Create Jaeger</emphasis> page, to install using the defaults, click <emphasis role="strong">Create</emphasis> to create the distributed tracing platform (Jaeger) instance.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Jaegers</emphasis> page, click the name of the distributed tracing platform (Jaeger) instance, for example, <literal>jaeger-all-in-one-inmemory</literal>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Jaeger Details</emphasis> page, click the <emphasis role="strong">Resources</emphasis> tab. Wait until the pod has a status of "Running" before continuing.</simpara>
</listitem>
</orderedlist>
<section xml:id="distr-tracing-deploy-default-cli_distr-tracing-jaeger-configuring">
<title>Deploying the distributed tracing platform default strategy from the CLI</title>
<simpara>Follow this procedure to create an instance of distributed tracing platform (Jaeger) from the command line.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator has been installed and verified.</simpara>
</listitem>
<listitem>
<simpara>You have reviewed the instructions for how to customize the deployment.</simpara>
</listitem>
<listitem>
<simpara>You have access to the OpenShift CLI (<literal>oc</literal>) that matches your {product-title} version.</simpara>
</listitem>
<listitem>
<simpara>You have access to the cluster as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in to the {product-title} CLI as a user with the <literal>cluster-admin</literal> role by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc login --username=&lt;NAMEOFUSER&gt; https://&lt;HOSTNAME&gt;:8443</programlisting>
</listitem>
<listitem>
<simpara>Create a new project named <literal>tracing-system</literal> by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc new-project tracing-system</programlisting>
</listitem>
<listitem>
<simpara>Create a custom resource file named <literal>jaeger.yaml</literal> that contains the following text:</simpara>
<formalpara>
<title>Example jaeger-all-in-one.yaml</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger-all-in-one-inmemory</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>Run the following command to deploy distributed tracing platform (Jaeger):</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc create -n tracing-system -f jaeger.yaml</programlisting>
</listitem>
<listitem>
<simpara>Run the following command to watch the progress of the pods during the installation process:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get pods -n tracing-system -w</programlisting>
<simpara>After the installation process has completed, the output is similar to the following example:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">NAME                                         READY   STATUS    RESTARTS   AGE
jaeger-all-in-one-inmemory-cdff7897b-qhfdx   2/2     Running   0          24s</programlisting>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="distr-tracing-deploy-production_distr-tracing-jaeger-configuring">
<title>Deploying the distributed tracing platform production strategy from the web console</title>
<simpara>The <literal>production</literal> deployment strategy is intended for production environments that require a more scalable and highly available architecture, and where long-term storage of trace data is important.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The OpenShift Elasticsearch Operator has been installed.</simpara>
</listitem>
<listitem>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator has been installed.</simpara>
</listitem>
<listitem>
<simpara>You have reviewed the instructions for how to customize the deployment.</simpara>
</listitem>
<listitem>
<simpara>You have access to the cluster as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in to the {product-title} web console as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>Create a new project, for example <literal>tracing-system</literal>.</simpara>
<note>
<simpara>If you are installing as part of Service Mesh, the distributed tracing platform resources must be installed in the same namespace as the <literal>ServiceMeshControlPlane</literal> resource, for example <literal>istio-system</literal>.</simpara>
</note>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Navigate to <emphasis role="strong">Home</emphasis> &#8594; <emphasis role="strong">Projects</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create Project</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Enter <literal>tracing-system</literal> in the <emphasis role="strong">Name</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create</emphasis>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">Installed Operators</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>If necessary, select <literal>tracing-system</literal> from the <emphasis role="strong">Project</emphasis> menu. You may have to wait a few moments for the Operators to be copied to the new project.</simpara>
</listitem>
<listitem>
<simpara>Click the Red Hat OpenShift distributed tracing platform (Jaeger) Operator. On the <emphasis role="strong">Overview</emphasis> tab, under <emphasis role="strong">Provided APIs</emphasis>, the Operator provides a single link.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Jaeger</emphasis>, click <emphasis role="strong">Create Instance</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Create Jaeger</emphasis> page, replace the default <literal>all-in-one</literal> YAML text with your production YAML configuration, for example:</simpara>
<formalpara>
<title>Example jaeger-production.yaml file with Elasticsearch</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger-production
  namespace:
spec:
  strategy: production
  ingress:
    security: oauth-proxy
  storage:
    type: elasticsearch
    elasticsearch:
      nodeCount: 3
      redundancyPolicy: SingleRedundancy
    esIndexCleaner:
      enabled: true
      numberOfDays: 7
      schedule: 55 23 * * *
    esRollover:
      schedule: '*/30 * * * *'</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create</emphasis> to create the distributed tracing platform (Jaeger) instance.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Jaegers</emphasis> page, click the name of the distributed tracing platform (Jaeger) instance, for example, <literal>jaeger-prod-elasticsearch</literal>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Jaeger Details</emphasis> page, click the <emphasis role="strong">Resources</emphasis> tab. Wait until all the pods have a status of "Running" before continuing.</simpara>
</listitem>
</orderedlist>
<section xml:id="distr-tracing-deploy-production-cli_distr-tracing-jaeger-configuring">
<title>Deploying the distributed tracing platform production strategy from the CLI</title>
<simpara>Follow this procedure to create an instance of distributed tracing platform (Jaeger) from the command line.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The OpenShift Elasticsearch Operator has been installed.</simpara>
</listitem>
<listitem>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator has been installed.</simpara>
</listitem>
<listitem>
<simpara>You have reviewed the instructions for how to customize the deployment.</simpara>
</listitem>
<listitem>
<simpara>You have access to the OpenShift CLI (<literal>oc</literal>) that matches your {product-title} version.</simpara>
</listitem>
<listitem>
<simpara>You have access to the cluster as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in to the OpenShift CLI (<literal>oc</literal>) as a user with the <literal>cluster-admin</literal> role by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc login --username=&lt;NAMEOFUSER&gt; https://&lt;HOSTNAME&gt;:8443</programlisting>
</listitem>
<listitem>
<simpara>Create a new project named <literal>tracing-system</literal> by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc new-project tracing-system</programlisting>
</listitem>
<listitem>
<simpara>Create a custom resource file named <literal>jaeger-production.yaml</literal> that contains the text of the example file in the previous procedure.</simpara>
</listitem>
<listitem>
<simpara>Run the following command to deploy distributed tracing platform (Jaeger):</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc create -n tracing-system -f jaeger-production.yaml</programlisting>
</listitem>
<listitem>
<simpara>Run the following command to watch the progress of the pods during the installation process:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get pods -n tracing-system -w</programlisting>
<simpara>After the installation process has completed, you will see output similar to the following example:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">NAME                                                              READY   STATUS    RESTARTS   AGE
elasticsearch-cdm-jaegersystemjaegerproduction-1-6676cf568gwhlw   2/2     Running   0          10m
elasticsearch-cdm-jaegersystemjaegerproduction-2-bcd4c8bf5l6g6w   2/2     Running   0          10m
elasticsearch-cdm-jaegersystemjaegerproduction-3-844d6d9694hhst   2/2     Running   0          10m
jaeger-production-collector-94cd847d-jwjlj                        1/1     Running   3          8m32s
jaeger-production-query-5cbfbd499d-tv8zf                          3/3     Running   3          8m32s</programlisting>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="distr-tracing-deploy-streaming_distr-tracing-jaeger-configuring">
<title>Deploying the distributed tracing platform streaming strategy from the web console</title>
<simpara>The <literal>streaming</literal> deployment strategy is intended for production environments that require a more scalable and highly available architecture, and where long-term storage of trace data is important.</simpara>
<simpara>The <literal>streaming</literal> strategy provides a streaming capability that sits between the Collector and the Elasticsearch storage. This reduces the pressure on the storage under high load situations, and enables other trace post-processing capabilities to tap into the real-time span data directly from the Kafka streaming platform.</simpara>
<note>
<simpara>The streaming strategy requires an additional Red Hat subscription for AMQ Streams. If you do not have an AMQ Streams subscription, contact your sales representative for more information.</simpara>
</note>
<note>
<simpara>The streaming deployment strategy is currently unsupported on IBM Z&#174;.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The AMQ Streams Operator has been installed. If using version 1.4.0 or higher you can use self-provisioning. Otherwise you must create the Kafka instance.</simpara>
</listitem>
<listitem>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator has been installed.</simpara>
</listitem>
<listitem>
<simpara>You have reviewed the instructions for how to customize the deployment.</simpara>
</listitem>
<listitem>
<simpara>You have access to the cluster as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in to the {product-title} web console as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>Create a new project, for example <literal>tracing-system</literal>.</simpara>
<note>
<simpara>If you are installing as part of Service Mesh, the distributed tracing platform resources must be installed in the same namespace as the <literal>ServiceMeshControlPlane</literal> resource, for example <literal>istio-system</literal>.</simpara>
</note>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Navigate to <emphasis role="strong">Home</emphasis> &#8594; <emphasis role="strong">Projects</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create Project</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Enter <literal>tracing-system</literal> in the <emphasis role="strong">Name</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create</emphasis>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">Installed Operators</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>If necessary, select <literal>tracing-system</literal> from the <emphasis role="strong">Project</emphasis> menu. You may have to wait a few moments for the Operators to be copied to the new project.</simpara>
</listitem>
<listitem>
<simpara>Click the Red Hat OpenShift distributed tracing platform (Jaeger) Operator. On the <emphasis role="strong">Overview</emphasis> tab, under <emphasis role="strong">Provided APIs</emphasis>, the Operator provides a single link.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Jaeger</emphasis>, click <emphasis role="strong">Create Instance</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Create Jaeger</emphasis> page, replace the default <literal>all-in-one</literal> YAML text with your streaming YAML configuration, for example:</simpara>
<formalpara>
<title>Example jaeger-streaming.yaml file</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger-streaming
spec:
  strategy: streaming
  collector:
    options:
      kafka:
        producer:
          topic: jaeger-spans
          brokers: my-cluster-kafka-brokers.kafka:9092 <co xml:id="CO5-1"/>
  storage:
    type: elasticsearch
  ingester:
    options:
      kafka:
        consumer:
          topic: jaeger-spans
          brokers: my-cluster-kafka-brokers.kafka:9092</programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO5-1">
<para>If the brokers are not defined, AMQStreams 1.4.0+ self-provisions Kafka.</para>
</callout>
</calloutlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Create</emphasis> to create the distributed tracing platform (Jaeger) instance.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Jaegers</emphasis> page, click the name of the distributed tracing platform (Jaeger) instance, for example, <literal>jaeger-streaming</literal>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Jaeger Details</emphasis> page, click the <emphasis role="strong">Resources</emphasis> tab. Wait until all the pods have a status of "Running" before continuing.</simpara>
</listitem>
</orderedlist>
<section xml:id="distr-tracing-deploy-streaming-cli_distr-tracing-jaeger-configuring">
<title>Deploying the distributed tracing platform streaming strategy from the CLI</title>
<simpara>Follow this procedure to create an instance of distributed tracing platform (Jaeger) from the command line.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The AMQ Streams Operator has been installed. If using version 1.4.0 or higher you can use self-provisioning. Otherwise you must create the Kafka instance.</simpara>
</listitem>
<listitem>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator has been installed.</simpara>
</listitem>
<listitem>
<simpara>You have reviewed the instructions for how to customize the deployment.</simpara>
</listitem>
<listitem>
<simpara>You have access to the OpenShift CLI (<literal>oc</literal>) that matches your {product-title} version.</simpara>
</listitem>
<listitem>
<simpara>You have access to the cluster as a user with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<simpara>Procedure</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Log in to the OpenShift CLI (<literal>oc</literal>) as a user with the <literal>cluster-admin</literal> role by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc login --username=&lt;NAMEOFUSER&gt; https://&lt;HOSTNAME&gt;:8443</programlisting>
</listitem>
<listitem>
<simpara>Create a new project named <literal>tracing-system</literal> by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc new-project tracing-system</programlisting>
</listitem>
<listitem>
<simpara>Create a custom resource file named <literal>jaeger-streaming.yaml</literal> that contains the text of the example file in the previous procedure.</simpara>
</listitem>
<listitem>
<simpara>Run the following command to deploy Jaeger:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc create -n tracing-system -f jaeger-streaming.yaml</programlisting>
</listitem>
<listitem>
<simpara>Run the following command to watch the progress of the pods during the installation process:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get pods -n tracing-system -w</programlisting>
<simpara>After the installation process has completed, you should see output similar to the following example:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">NAME                                                              READY   STATUS    RESTARTS   AGE
elasticsearch-cdm-jaegersystemjaegerstreaming-1-697b66d6fcztcnn   2/2     Running   0          5m40s
elasticsearch-cdm-jaegersystemjaegerstreaming-2-5f4b95c78b9gckz   2/2     Running   0          5m37s
elasticsearch-cdm-jaegersystemjaegerstreaming-3-7b6d964576nnz97   2/2     Running   0          5m5s
jaeger-streaming-collector-6f6db7f99f-rtcfm                       1/1     Running   0          80s
jaeger-streaming-entity-operator-6b6d67cc99-4lm9q                 3/3     Running   2          2m18s
jaeger-streaming-ingester-7d479847f8-5h8kc                        1/1     Running   0          80s
jaeger-streaming-kafka-0                                          2/2     Running   0          3m1s
jaeger-streaming-query-65bf5bb854-ncnc7                           3/3     Running   0          80s
jaeger-streaming-zookeeper-0                                      2/2     Running   0          3m39s</programlisting>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="validating-your-jaeger-deployment">
<title>Validating your deployment</title>
<section xml:id="distr-tracing-accessing-jaeger-console_distr-tracing-jaeger-configuring">
<title>Accessing the Jaeger console</title>
<simpara>To access the Jaeger console you must have either Red Hat OpenShift Service Mesh or Red Hat OpenShift distributed tracing platform installed, and Red Hat OpenShift distributed tracing platform (Jaeger) installed, configured, and deployed.</simpara>
<simpara>The installation process creates a route to access the Jaeger console.</simpara>
<simpara>If you know the URL for the Jaeger console, you can access it directly. If you do not know the URL, use the following directions.</simpara>
<orderedlist numeration="arabic">
<title>Procedure from the web console</title>
<listitem>
<simpara>Log in to the {product-title} web console as a user with cluster-admin rights. If you use Red Hat OpenShift Dedicated, you must have an account with the <literal>dedicated-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Networking</emphasis> &#8594; <emphasis role="strong">Routes</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Routes</emphasis> page, select the control plane project, for example <literal>tracing-system</literal>, from the <emphasis role="strong">Namespace</emphasis> menu.</simpara>
<simpara>The <emphasis role="strong">Location</emphasis> column displays the linked address for each route.</simpara>
</listitem>
<listitem>
<simpara>If necessary, use the filter to find the <literal>jaeger</literal> route. Click the route <emphasis role="strong">Location</emphasis> to launch the console.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Log In With OpenShift</emphasis>.</simpara>
</listitem>
</orderedlist>
<orderedlist numeration="arabic">
<title>Procedure from the CLI</title>
<listitem>
<simpara>Log in to the {product-title} CLI as a user with the <literal>cluster-admin</literal> role by running the following command. If you use Red Hat OpenShift Dedicated, you must have an account with the <literal>dedicated-admin</literal> role.</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc login --username=&lt;NAMEOFUSER&gt; https://&lt;HOSTNAME&gt;:6443</programlisting>
</listitem>
<listitem>
<simpara>To query for details of the route using the command line, enter the following command. In this example, <literal>tracing-system</literal> is the control plane namespace.</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ export JAEGER_URL=$(oc get route -n tracing-system jaeger -o jsonpath='{.spec.host}')</programlisting>
</listitem>
<listitem>
<simpara>Launch a browser and navigate to <literal>https://&lt;JAEGER_URL&gt;</literal>, where <literal>&lt;JAEGER_URL&gt;</literal> is the route that you discovered in the previous step.</simpara>
</listitem>
<listitem>
<simpara>Log in using the same user name and password that you use to access the {Product-title} console.</simpara>
</listitem>
<listitem>
<simpara>If you have added services to the service mesh and have generated traces, you can use the filters and <emphasis role="strong">Find Traces</emphasis> button to search your trace data.</simpara>
<simpara>If you are validating the console installation, there is no trace data to display.</simpara>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="customizing-your-deployment">
<title>Customizing your deployment</title>
<section xml:id="distr-tracing-deployment-best-practices_distr-tracing-jaeger-configuring">
<title>Deployment best practices</title>
<itemizedlist>
<listitem>
<simpara>Red Hat OpenShift distributed tracing platform instance names must be unique. If you want to have multiple Red Hat OpenShift distributed tracing platform (Jaeger) instances and are using sidecar injected agents, then the Red Hat OpenShift distributed tracing platform (Jaeger) instances should have unique names, and the injection annotation should explicitly specify the Red Hat OpenShift distributed tracing platform (Jaeger) instance name the tracing data should be reported to.</simpara>
</listitem>
<listitem>
<simpara>If you have a multitenant implementation and tenants are separated by namespaces, deploy a Red Hat OpenShift distributed tracing platform (Jaeger) instance to each tenant namespace.</simpara>
</listitem>
</itemizedlist>
<simpara>For information about configuring persistent storage, see <link xl:href="../../storage/understanding-persistent-storage.xml#understanding-persistent-storage">Understanding persistent storage</link> and the appropriate configuration topic for your chosen storage option.</simpara>
</section>
<section xml:id="distr-tracing-config-default_distr-tracing-jaeger-configuring">
<title>Distributed tracing default configuration options</title>
<simpara>The Jaeger custom resource (CR) defines the architecture and settings to be used when creating the distributed tracing platform (Jaeger) resources. You can modify these parameters to customize your distributed tracing platform (Jaeger) implementation to your business needs.</simpara>
<formalpara>
<title>Generic YAML example of the Jaeger CR</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: name
spec:
  strategy: &lt;deployment_strategy&gt;
  allInOne:
    options: {}
    resources: {}
  agent:
    options: {}
    resources: {}
  collector:
    options: {}
    resources: {}
  sampling:
    options: {}
  storage:
    type:
    options: {}
  query:
    options: {}
    resources: {}
  ingester:
    options: {}
    resources: {}
  options: {}</programlisting>
</para>
</formalpara>
<table frame="all" rowsep="1" colsep="1">
<title>Jaeger parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>apiVersion:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>API version to use when creating the object.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>jaegertracing.io/v1</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jaegertracing.io/v1</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kind:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Defines the kind of Kubernetes object to create.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>jaeger</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>metadata:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Data that helps uniquely identify the object, including a <literal>name</literal> string, <literal>UID</literal>, and optional <literal>namespace</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>{product-title} automatically generates the <literal>UID</literal> and completes the <literal>namespace</literal> with the name of the project where the object is created.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>name:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Name for the object.</simpara></entry>
<entry align="left" valign="top"><simpara>The name of your distributed tracing platform (Jaeger) instance.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>jaeger-all-in-one-inmemory</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>spec:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Specification for the object to be created.</simpara></entry>
<entry align="left" valign="top"><simpara>Contains all of the configuration parameters for your distributed tracing platform (Jaeger) instance. When a common definition for all Jaeger components is required, it is defined under the <literal>spec</literal> node. When the definition relates to an individual component, it is placed under the <literal>spec/&lt;component&gt;</literal> node.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>strategy:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Jaeger deployment strategy</simpara></entry>
<entry align="left" valign="top"><simpara><literal>allInOne</literal>, <literal>production</literal>, or <literal>streaming</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>allInOne</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>allInOne:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Because the <literal>allInOne</literal> image deploys the Agent, Collector, Query, Ingester, and Jaeger UI in a single pod, configuration for this deployment must nest component configuration under the <literal>allInOne</literal> parameter.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>agent:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the Agent.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>collector:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the Jaeger Collector.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>sampling:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the sampling strategies for tracing.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>storage:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the storage. All storage-related options must be placed under <literal>storage</literal>, rather than under the <literal>allInOne</literal> or other component options.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>query:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the Query service.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>ingester:</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the Ingester service.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>The following example YAML is the minimum required to create a Red Hat OpenShift distributed tracing platform (Jaeger) deployment using the default settings.</simpara>
<formalpara>
<title>Example minimum required dist-tracing-all-in-one.yaml</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger-all-in-one-inmemory</programlisting>
</para>
</formalpara>
</section>
<section xml:id="distr-tracing-config-jaeger-collector_distr-tracing-jaeger-configuring">
<title>Jaeger Collector configuration options</title>
<simpara>The Jaeger Collector is the component responsible for receiving the spans that were captured by the tracer and writing them to persistent Elasticsearch storage when using the <literal>production</literal> strategy, or to AMQ Streams when using the <literal>streaming</literal> strategy.</simpara>
<simpara>The Collectors are stateless and thus many instances of Jaeger Collector can be run in parallel. Collectors require almost no configuration, except for the location of the Elasticsearch cluster.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Parameters used by the Operator to define the Jaeger Collector</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">collector:
  replicas:</literallayout></entry>
<entry align="left" valign="top"><simpara>Specifies the number of Collector replicas to create.</simpara></entry>
<entry align="left" valign="top"><simpara>Integer, for example, <literal>5</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>Configuration parameters passed to the Collector</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">spec:
 collector:
  options: {}</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the Jaeger Collector.</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  collector:
    num-workers:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of workers pulling from the queue.</simpara></entry>
<entry align="left" valign="top"><simpara>Integer, for example, <literal>50</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  collector:
    queue-size:</literallayout></entry>
<entry align="left" valign="top"><simpara>The size of the Collector queue.</simpara></entry>
<entry align="left" valign="top"><simpara>Integer, for example, <literal>2000</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  kafka:
    producer:
      topic: jaeger-spans</literallayout></entry>
<entry align="left" valign="top"><simpara>The <literal>topic</literal> parameter identifies the Kafka configuration used by the Collector to produce the messages, and the Ingester to consume the messages.</simpara></entry>
<entry align="left" valign="top"><simpara>Label for the producer.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  kafka:
    producer:
      brokers: my-cluster-kafka-brokers.kafka:9092</literallayout></entry>
<entry align="left" valign="top"><simpara>Identifies the Kafka configuration used by the Collector to produce the messages. If brokers are not specified, and you have AMQ Streams 1.4.0+ installed, the Red Hat OpenShift distributed tracing platform (Jaeger) Operator will self-provision Kafka.</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  log-level:</literallayout></entry>
<entry align="left" valign="top"><simpara>Logging level for the Collector.</simpara></entry>
<entry align="left" valign="top"><simpara>Possible values: <literal>debug</literal>, <literal>info</literal>, <literal>warn</literal>, <literal>error</literal>, <literal>fatal</literal>, <literal>panic</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  otlp:
    enabled: true
    grpc:
      host-port: 4317
      max-connection-age: 0s
      max-connection-age-grace: 0s
      max-message-size: 4194304
      tls:
        enabled: false
        cert: /path/to/cert.crt
        cipher-suites: "TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256"
        client-ca: /path/to/cert.ca
        reload-interval: 0s
        min-version: 1.2
        max-version: 1.3</literallayout></entry>
<entry align="left" valign="top"><simpara>To accept OTLP/gRPC, explicitly enable the <literal>otlp</literal>. All the other options are optional.</simpara></entry>
<entry align="left" valign="top"><simpara>options:
  otlp:
    enabled: true
    http:
      cors:
        allowed-headers: [&lt;header-name&gt;[, &lt;header-name&gt;]*]
        allowed-origins: *
      host-port: 4318
      max-connection-age: 0s
      max-connection-age-grace: 0s
      max-message-size: 4194304
      read-timeout: 0s
      read-header-timeout: 2s
      idle-timeout: 0s
      tls:
        enabled: false
        cert: /path/to/cert.crt
        cipher-suites: "TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256"
        client-ca: /path/to/cert.ca
        reload-interval: 0s
        min-version: 1.2
        max-version: 1.3</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section xml:id="distr-tracing-config-sampling_distr-tracing-jaeger-configuring">
<title>Distributed tracing sampling configuration options</title>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator can be used to define sampling strategies that will be supplied to tracers that have been configured to use a remote sampler.</simpara>
<simpara>While all traces are generated, only a few are sampled. Sampling a trace marks the trace for further processing and storage.</simpara>
<note>
<simpara>This is not relevant if a trace was started by the Envoy proxy, as the sampling decision is made there. The Jaeger sampling decision is only relevant when the trace is started by an application using the client.</simpara>
</note>
<simpara>When a service receives a request that contains no trace context, the client starts a new trace, assigns it a random trace ID, and makes a sampling decision based on the currently installed sampling strategy. The sampling decision propagates to all subsequent requests in the trace so that other services are not making the sampling decision again.</simpara>
<simpara>distributed tracing platform (Jaeger) libraries support the following samplers:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Probabilistic</emphasis> - The sampler makes a random sampling decision with the probability of sampling equal to the value of the <literal>sampling.param</literal> property. For example, using <literal>sampling.param=0.1</literal> samples approximately 1 in 10 traces.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Rate Limiting</emphasis> - The sampler uses a leaky bucket rate limiter to ensure that traces are sampled with a certain constant rate. For example, using <literal>sampling.param=2.0</literal> samples requests with the rate of 2 traces per second.</simpara>
</listitem>
</itemizedlist>
<table frame="all" rowsep="1" colsep="1">
<title>Jaeger sampling options</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">spec:
 sampling:
  options: {}
    default_strategy:
    service_strategy:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the sampling strategies for tracing.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>If you do not provide configuration, the Collectors will return the default probabilistic sampling policy with 0.001 (0.1%) probability for all services.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">default_strategy:
  type:
service_strategy:
  type:</literallayout></entry>
<entry align="left" valign="top"><simpara>Sampling strategy to use. See descriptions above.</simpara></entry>
<entry align="left" valign="top"><simpara>Valid values are <literal>probabilistic</literal>, and <literal>ratelimiting</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>probabilistic</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">default_strategy:
  param:
service_strategy:
  param:</literallayout></entry>
<entry align="left" valign="top"><simpara>Parameters for the selected sampling strategy.</simpara></entry>
<entry align="left" valign="top"><simpara>Decimal and integer values (0, .1, 1, 10)</simpara></entry>
<entry align="left" valign="top"><simpara>1</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>This example defines a default sampling strategy that is probabilistic, with a 50% chance of the trace instances being sampled.</simpara>
<formalpara>
<title>Probabilistic sampling example</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: with-sampling
spec:
  sampling:
    options:
      default_strategy:
        type: probabilistic
        param: 0.5
      service_strategies:
        - service: alpha
          type: probabilistic
          param: 0.8
          operation_strategies:
            - operation: op1
              type: probabilistic
              param: 0.2
            - operation: op2
              type: probabilistic
              param: 0.4
        - service: beta
          type: ratelimiting
          param: 5</programlisting>
</para>
</formalpara>
<simpara>If there are no user-supplied configurations, the distributed tracing platform (Jaeger) uses the following settings:</simpara>
<formalpara>
<title>Default sampling</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">spec:
  sampling:
    options:
      default_strategy:
        type: probabilistic
        param: 1</programlisting>
</para>
</formalpara>
</section>
<section xml:id="distr-tracing-config-storage_distr-tracing-jaeger-configuring">
<title>Distributed tracing storage configuration options</title>
<simpara>You configure storage for the Collector, Ingester, and Query services under <literal>spec.storage</literal>. Multiple instances of each of these components can be provisioned as required for performance and resilience purposes.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>General storage parameters used by the Red Hat OpenShift distributed tracing platform (Jaeger) Operator to define distributed tracing storage</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">spec:
  storage:
    type:</literallayout></entry>
<entry align="left" valign="top"><simpara>Type of storage to use for the deployment.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>memory</literal> or <literal>elasticsearch</literal>.
Memory storage is only appropriate for development, testing, demonstrations, and proof of concept environments as the data does not persist if the pod is shut down. For production environments distributed tracing platform (Jaeger) supports Elasticsearch for persistent storage.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>memory</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storage:
  secretname:</literallayout></entry>
<entry align="left" valign="top"><simpara>Name of the secret, for example <literal>tracing-secret</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storage:
  options: {}</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the storage.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>Elasticsearch index cleaner parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storage:
  esIndexCleaner:
    enabled:</literallayout></entry>
<entry align="left" valign="top"><simpara>When using Elasticsearch storage, by default a job is created to clean old traces from the index. This parameter enables or disables the index cleaner job.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storage:
  esIndexCleaner:
    numberOfDays:</literallayout></entry>
<entry align="left" valign="top"><simpara>Number of days to wait before deleting an index.</simpara></entry>
<entry align="left" valign="top"><simpara>Integer value</simpara></entry>
<entry align="left" valign="top"><simpara><literal>7</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storage:
  esIndexCleaner:
    schedule:</literallayout></entry>
<entry align="left" valign="top"><simpara>Defines the schedule for how often to clean the Elasticsearch index.</simpara></entry>
<entry align="left" valign="top"><simpara>Cron expression</simpara></entry>
<entry align="left" valign="top"><simpara>"55 23 * * *"</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<section xml:id="distributed-tracing-config-auto-provisioning-es_distr-tracing-jaeger-configuring">
<title>Auto-provisioning an Elasticsearch instance</title>
<simpara>When you deploy a Jaeger custom resource, the Red Hat OpenShift distributed tracing platform (Jaeger) Operator uses the OpenShift Elasticsearch Operator to create an Elasticsearch cluster based on the configuration provided in the <literal>storage</literal> section of the custom resource file. The Red Hat OpenShift distributed tracing platform (Jaeger) Operator will provision Elasticsearch if the following configurations are set:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>spec.storage:type</literal> is set to <literal>elasticsearch</literal></simpara>
</listitem>
<listitem>
<simpara><literal>spec.storage.elasticsearch.doNotProvision</literal> set to <literal>false</literal></simpara>
</listitem>
<listitem>
<simpara><literal>spec.storage.options.es.server-urls</literal> is not defined, that is, there is no connection to an Elasticsearch instance that was not provisioned by the Red Hat Elasticsearch Operator.</simpara>
</listitem>
</itemizedlist>
<simpara>When provisioning Elasticsearch, the Red Hat OpenShift distributed tracing platform (Jaeger) Operator sets the Elasticsearch custom resource <literal>name</literal> to the value of <literal>spec.storage.elasticsearch.name</literal> from the Jaeger custom resource.  If you do not specify a value for <literal>spec.storage.elasticsearch.name</literal>, the Operator uses <literal>elasticsearch</literal>.</simpara>
<itemizedlist>
<title>Restrictions</title>
<listitem>
<simpara>You can have only one distributed tracing platform (Jaeger) with self-provisioned Elasticsearch instance per namespace. The Elasticsearch cluster is meant to be dedicated for a single distributed tracing platform (Jaeger) instance.</simpara>
</listitem>
<listitem>
<simpara>There can be only one Elasticsearch per namespace.</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>If you already have installed Elasticsearch as part of OpenShift Logging, the Red Hat OpenShift distributed tracing platform (Jaeger) Operator can use the installed OpenShift Elasticsearch Operator to provision storage.</simpara>
</note>
<simpara>The following configuration parameters are for a <emphasis>self-provisioned</emphasis> Elasticsearch instance, that is an instance created by the Red Hat OpenShift distributed tracing platform (Jaeger) Operator using the OpenShift Elasticsearch Operator. You specify configuration options for self-provisioned Elasticsearch under <literal>spec:storage:elasticsearch</literal> in your configuration file.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Elasticsearch resource configuration parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  properties:
    doNotProvision:</literallayout></entry>
<entry align="left" valign="top"><simpara>Use to specify whether or not an Elasticsearch instance should be provisioned by the Red Hat OpenShift distributed tracing platform (Jaeger) Operator.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/<literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  properties:
    name:</literallayout></entry>
<entry align="left" valign="top"><simpara>Name of the Elasticsearch instance. The Red Hat OpenShift distributed tracing platform (Jaeger) Operator uses the Elasticsearch instance specified in this parameter to connect to Elasticsearch.</simpara></entry>
<entry align="left" valign="top"><simpara>string</simpara></entry>
<entry align="left" valign="top"><simpara><literal>elasticsearch</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  nodeCount:</literallayout></entry>
<entry align="left" valign="top"><simpara>Number of Elasticsearch nodes. For high availability use at least 3 nodes. Do not use 2 nodes as “split brain” problem can happen.</simpara></entry>
<entry align="left" valign="top"><simpara>Integer value. For example, Proof of concept = 1,
Minimum deployment =3</simpara></entry>
<entry align="left" valign="top"><simpara>3</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  resources:
    requests:
      cpu:</literallayout></entry>
<entry align="left" valign="top"><simpara>Number of central processing units for requests, based on your environment&#8217;s configuration.</simpara></entry>
<entry align="left" valign="top"><simpara>Specified in cores or millicores, for example, 200m, 0.5, 1. For example, Proof of concept = 500m,
Minimum deployment =1</simpara></entry>
<entry align="left" valign="top"><simpara>1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  resources:
    requests:
      memory:</literallayout></entry>
<entry align="left" valign="top"><simpara>Available memory for requests, based on your environment&#8217;s configuration.</simpara></entry>
<entry align="left" valign="top"><simpara>Specified in bytes, for example, 200Ki, 50Mi, 5Gi. For example, Proof of concept = 1Gi,
Minimum deployment = 16Gi*</simpara></entry>
<entry align="left" valign="top"><simpara>16Gi</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  resources:
    limits:
      cpu:</literallayout></entry>
<entry align="left" valign="top"><simpara>Limit on number of central processing units, based on your environment&#8217;s configuration.</simpara></entry>
<entry align="left" valign="top"><simpara>Specified in cores or millicores, for example, 200m, 0.5, 1. For example, Proof of concept = 500m,
Minimum deployment =1</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  resources:
    limits:
      memory:</literallayout></entry>
<entry align="left" valign="top"><simpara>Available memory limit based on your environment&#8217;s configuration.</simpara></entry>
<entry align="left" valign="top"><simpara>Specified in bytes, for example, 200Ki, 50Mi, 5Gi. For example, Proof of concept = 1Gi,
Minimum deployment = 16Gi*</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  redundancyPolicy:</literallayout></entry>
<entry align="left" valign="top"><simpara>Data replication policy defines how Elasticsearch shards are replicated across data nodes in the cluster. If not specified, the Red Hat OpenShift distributed tracing platform (Jaeger) Operator automatically determines the most appropriate replication based on number of nodes.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>ZeroRedundancy</literal>(no replica shards), <literal>SingleRedundancy</literal>(one replica shard), <literal>MultipleRedundancy</literal>(each index is spread over half of the Data nodes), <literal>FullRedundancy</literal> (each index is fully replicated on every Data node in the cluster).</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">elasticsearch:
  useCertManagement:</literallayout></entry>
<entry align="left" valign="top"><simpara>Use to specify whether or not distributed tracing platform (Jaeger) should use the certificate management feature of the Red Hat Elasticsearch Operator.  This feature was added to {logging-title} 5.2 in {product-title} 4.7 and is the preferred setting for new Jaeger deployments.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/<literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>Each Elasticsearch node can operate with a lower memory setting though this is NOT recommended for production deployments. For production use, you must have no less than 16 Gi allocated to each pod by default, but preferably allocate as much as you can, up to 64 Gi per pod.</simpara>
<formalpara>
<title>Production storage example</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: simple-prod
spec:
  strategy: production
  storage:
    type: elasticsearch
    elasticsearch:
      nodeCount: 3
      resources:
        requests:
          cpu: 1
          memory: 16Gi
        limits:
          memory: 16Gi</programlisting>
</para>
</formalpara>
<formalpara>
<title>Storage example with persistent storage:</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: simple-prod
spec:
  strategy: production
  storage:
    type: elasticsearch
    elasticsearch:
      nodeCount: 1
      storage: <co xml:id="CO6-1"/>
        storageClassName: gp2
        size: 5Gi
      resources:
        requests:
          cpu: 200m
          memory: 4Gi
        limits:
          memory: 4Gi
      redundancyPolicy: ZeroRedundancy</programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO6-1">
<para>Persistent storage configuration. In this case AWS <literal>gp2</literal> with <literal>5Gi</literal> size. When no value is specified, distributed tracing platform (Jaeger) uses <literal>emptyDir</literal>. The OpenShift Elasticsearch Operator provisions <literal>PersistentVolumeClaim</literal> and <literal>PersistentVolume</literal> which are not removed with distributed tracing platform (Jaeger) instance. You can mount the same volumes if you create a distributed tracing platform (Jaeger) instance with the same name and namespace.</para>
</callout>
</calloutlist>
</section>
<section xml:id="distributed-tracing-config-external-es_distr-tracing-jaeger-configuring">
<title>Connecting to an existing Elasticsearch instance</title>
<simpara>You can use an existing Elasticsearch cluster for storage with distributed tracing platform. An existing Elasticsearch cluster, also known as an <emphasis>external</emphasis> Elasticsearch instance, is an instance that was not installed by the Red Hat OpenShift distributed tracing platform (Jaeger) Operator or by the Red Hat Elasticsearch Operator.</simpara>
<simpara>When you deploy a Jaeger custom resource, the Red Hat OpenShift distributed tracing platform (Jaeger) Operator will not provision Elasticsearch if the following configurations are set:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>spec.storage.elasticsearch.doNotProvision</literal> set to <literal>true</literal></simpara>
</listitem>
<listitem>
<simpara><literal>spec.storage.options.es.server-urls</literal> has a value</simpara>
</listitem>
<listitem>
<simpara><literal>spec.storage.elasticsearch.name</literal> has a value, or if the Elasticsearch instance name is <literal>elasticsearch</literal>.</simpara>
</listitem>
</itemizedlist>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator uses the Elasticsearch instance specified in <literal>spec.storage.elasticsearch.name</literal> to connect to Elasticsearch.</simpara>
<itemizedlist>
<title>Restrictions</title>
<listitem>
<simpara>You cannot share or reuse a {product-title} logging Elasticsearch instance with distributed tracing platform (Jaeger). The Elasticsearch cluster is meant to be dedicated for a single distributed tracing platform (Jaeger) instance.</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>Red Hat does not provide support for your external Elasticsearch instance. You can review the tested integrations matrix on the <link xl:href="https://access.redhat.com/articles/5381021">Customer Portal</link>.</simpara>
</note>
<simpara>The following configuration parameters are for an already existing Elasticsearch instance, also known as an <emphasis>external</emphasis> Elasticsearch instance. In this case, you specify configuration options for Elasticsearch under <literal>spec:storage:options:es</literal> in your custom resource file.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>General ES configuration parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  server-urls:</literallayout></entry>
<entry align="left" valign="top"><simpara>URL of the Elasticsearch instance.</simpara></entry>
<entry align="left" valign="top"><simpara>The fully-qualified domain name of the Elasticsearch server.</simpara></entry>
<entry align="left" valign="top"><simpara><literal><link xl:href="http://elasticsearch.&lt;namespace&gt;.svc:9200">http://elasticsearch.&lt;namespace&gt;.svc:9200</link></literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  max-doc-count:</literallayout></entry>
<entry align="left" valign="top"><simpara>The maximum document count to return from an Elasticsearch query. This will also apply to aggregations. If you set both <literal>es.max-doc-count</literal> and <literal>es.max-num-spans</literal>, Elasticsearch will use the smaller value of the two.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>10000</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  max-num-spans:</literallayout></entry>
<entry align="left" valign="top"><simpara>[<emphasis role="strong">Deprecated</emphasis> - Will be removed in a future release, use <literal>es.max-doc-count</literal> instead.] The maximum number of spans to fetch at a time, per query, in Elasticsearch. If you set both <literal>es.max-num-spans</literal> and <literal>es.max-doc-count</literal>, Elasticsearch will use the smaller value of the two.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>10000</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  max-span-age:</literallayout></entry>
<entry align="left" valign="top"><simpara>The maximum lookback for spans in Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>72h0m0s</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  sniffer:</literallayout></entry>
<entry align="left" valign="top"><simpara>The sniffer configuration for Elasticsearch. The client uses the sniffing process to find all nodes automatically. Disabled by default.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  sniffer-tls-enabled:</literallayout></entry>
<entry align="left" valign="top"><simpara>Option to enable TLS when sniffing an Elasticsearch Cluster. The client uses the sniffing process to find all nodes automatically. Disabled by default</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  timeout:</literallayout></entry>
<entry align="left" valign="top"><simpara>Timeout used for queries. When set to zero there is no timeout.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0s</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  username:</literallayout></entry>
<entry align="left" valign="top"><simpara>The username required by Elasticsearch. The basic authentication also loads CA if it is specified. See also <literal>es.password</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  password:</literallayout></entry>
<entry align="left" valign="top"><simpara>The password required by Elasticsearch. See also, <literal>es.username</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  version:</literallayout></entry>
<entry align="left" valign="top"><simpara>The major Elasticsearch version. If not specified, the value will be auto-detected from Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>ES data replication parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  num-replicas:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of replicas per index in Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  num-shards:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of shards per index in Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>5</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>ES index configuration parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  create-index-templates:</literallayout></entry>
<entry align="left" valign="top"><simpara>Automatically create index templates at application startup when set to <literal>true</literal>. When templates are installed manually, set to <literal>false</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  index-prefix:</literallayout></entry>
<entry align="left" valign="top"><simpara>Optional prefix for distributed tracing platform (Jaeger) indices. For example, setting this to "production" creates indices named "production-tracing-*".</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>ES bulk processor configuration parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  bulk:
    actions:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of requests that can be added to the queue before the bulk processor decides to commit updates to disk.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>1000</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  bulk:
    flush-interval:</literallayout></entry>
<entry align="left" valign="top"><simpara>A <literal>time.Duration</literal> after which bulk requests are committed, regardless of other thresholds. To disable the bulk processor flush interval, set this to zero.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>200ms</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  bulk:
    size:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of bytes that the bulk requests can take up before the bulk processor decides to commit updates to disk.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>5000000</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  bulk:
    workers:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of workers that are able to receive and commit bulk requests to Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>1</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>ES TLS configuration parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  tls:
    ca:</literallayout></entry>
<entry align="left" valign="top"><simpara>Path to a TLS Certification Authority (CA) file used to verify the remote servers.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>Will use the system truststore by default.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  tls:
    cert:</literallayout></entry>
<entry align="left" valign="top"><simpara>Path to a TLS Certificate file, used to identify this process to the remote servers.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  tls:
    enabled:</literallayout></entry>
<entry align="left" valign="top"><simpara>Enable transport layer security (TLS) when talking to the remote servers. Disabled by default.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  tls:
    key:</literallayout></entry>
<entry align="left" valign="top"><simpara>Path to a TLS Private Key file, used to identify this process to the remote servers.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  tls:
    server-name:</literallayout></entry>
<entry align="left" valign="top"><simpara>Override the expected TLS server name in the certificate of the remote servers.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es:
  token-file:</literallayout></entry>
<entry align="left" valign="top"><simpara>Path to a file containing the bearer token. This flag also loads the Certification Authority (CA) file if it is specified.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>ES archive configuration parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  bulk:
    actions:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of requests that can be added to the queue before the bulk processor decides to commit updates to disk.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  bulk:
    flush-interval:</literallayout></entry>
<entry align="left" valign="top"><simpara>A <literal>time.Duration</literal> after which bulk requests are committed, regardless of other thresholds. To disable the bulk processor flush interval, set this to zero.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0s</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  bulk:
    size:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of bytes that the bulk requests can take up before the bulk processor decides to commit updates to disk.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  bulk:
    workers:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of workers that are able to receive and commit bulk requests to Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  create-index-templates:</literallayout></entry>
<entry align="left" valign="top"><simpara>Automatically create index templates at application startup when set to <literal>true</literal>. When templates are installed manually, set to <literal>false</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  enabled:</literallayout></entry>
<entry align="left" valign="top"><simpara>Enable extra storage.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  index-prefix:</literallayout></entry>
<entry align="left" valign="top"><simpara>Optional prefix for distributed tracing platform (Jaeger) indices. For example, setting this to "production" creates indices named "production-tracing-*".</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  max-doc-count:</literallayout></entry>
<entry align="left" valign="top"><simpara>The maximum document count to return from an Elasticsearch query. This will also apply to aggregations.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  max-num-spans:</literallayout></entry>
<entry align="left" valign="top"><simpara>[<emphasis role="strong">Deprecated</emphasis> - Will be removed in a future release, use <literal>es-archive.max-doc-count</literal> instead.] The maximum number of spans to fetch at a time, per query, in Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  max-span-age:</literallayout></entry>
<entry align="left" valign="top"><simpara>The maximum lookback for spans in Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0s</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  num-replicas:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of replicas per index in Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  num-shards:</literallayout></entry>
<entry align="left" valign="top"><simpara>The number of shards per index in Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  password:</literallayout></entry>
<entry align="left" valign="top"><simpara>The password required by Elasticsearch. See also, <literal>es.username</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  server-urls:</literallayout></entry>
<entry align="left" valign="top"><simpara>The comma-separated list of Elasticsearch servers. Must be specified as fully qualified URLs, for example, <literal>http://localhost:9200</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  sniffer:</literallayout></entry>
<entry align="left" valign="top"><simpara>The sniffer configuration for Elasticsearch. The client uses the sniffing process to find all nodes automatically. Disabled by default.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  sniffer-tls-enabled:</literallayout></entry>
<entry align="left" valign="top"><simpara>Option to enable TLS when sniffing an Elasticsearch Cluster. The client uses the sniffing process to find all nodes automatically. Disabled by default.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  timeout:</literallayout></entry>
<entry align="left" valign="top"><simpara>Timeout used for queries. When set to zero there is no timeout.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0s</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  tls:
    ca:</literallayout></entry>
<entry align="left" valign="top"><simpara>Path to a TLS Certification Authority (CA) file used to verify the remote servers.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>Will use the system truststore by default.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  tls:
    cert:</literallayout></entry>
<entry align="left" valign="top"><simpara>Path to a TLS Certificate file, used to identify this process to the remote servers.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  tls:
    enabled:</literallayout></entry>
<entry align="left" valign="top"><simpara>Enable transport layer security (TLS) when talking to the remote servers. Disabled by default.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal>/ <literal>false</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>false</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  tls:
    key:</literallayout></entry>
<entry align="left" valign="top"><simpara>Path to a TLS Private Key file, used to identify this process to the remote servers.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  tls:
    server-name:</literallayout></entry>
<entry align="left" valign="top"><simpara>Override the expected TLS server name in the certificate of the remote servers.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  token-file:</literallayout></entry>
<entry align="left" valign="top"><simpara>Path to a file containing the bearer token. This flag also loads the Certification Authority (CA) file if it is specified.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  username:</literallayout></entry>
<entry align="left" valign="top"><simpara>The username required by Elasticsearch. The basic authentication also loads CA if it is specified. See also <literal>es-archive.password</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">es-archive:
  version:</literallayout></entry>
<entry align="left" valign="top"><simpara>The major Elasticsearch version. If not specified, the value will be auto-detected from Elasticsearch.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>0</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<formalpara>
<title>Storage example with volume mounts</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: simple-prod
spec:
  strategy: production
  storage:
    type: elasticsearch
    options:
      es:
        server-urls: https://quickstart-es-http.default.svc:9200
        index-prefix: my-prefix
        tls:
          ca: /es/certificates/ca.crt
    secretName: tracing-secret
  volumeMounts:
    - name: certificates
      mountPath: /es/certificates/
      readOnly: true
  volumes:
    - name: certificates
      secret:
        secretName: quickstart-es-http-certs-public</programlisting>
</para>
</formalpara>
<simpara>The following example shows a Jaeger CR using an external Elasticsearch cluster with TLS CA certificate mounted from a volume and user/password stored in a secret.</simpara>
<formalpara>
<title>External Elasticsearch example</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: simple-prod
spec:
  strategy: production
  storage:
    type: elasticsearch
    options:
      es:
        server-urls: https://quickstart-es-http.default.svc:9200 <co xml:id="CO7-1"/>
        index-prefix: my-prefix
        tls: <co xml:id="CO7-2"/>
          ca: /es/certificates/ca.crt
    secretName: tracing-secret <co xml:id="CO7-3"/>
  volumeMounts: <co xml:id="CO7-4"/>
    - name: certificates
      mountPath: /es/certificates/
      readOnly: true
  volumes:
    - name: certificates
      secret:
        secretName: quickstart-es-http-certs-public</programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO7-1">
<para>URL to Elasticsearch service running in default namespace.</para>
</callout>
<callout arearefs="CO7-2">
<para>TLS configuration. In this case only CA certificate, but it can also contain es.tls.key and es.tls.cert when using mutual TLS.</para>
</callout>
<callout arearefs="CO7-3">
<para>Secret which defines environment variables ES_PASSWORD and ES_USERNAME. Created by kubectl create secret generic tracing-secret --from-literal=ES_PASSWORD=changeme --from-literal=ES_USERNAME=elastic</para>
</callout>
<callout arearefs="CO7-4">
<para>Volume mounts and volumes which are mounted into all storage components.</para>
</callout>
</calloutlist>
</section>
</section>
<section xml:id="distr-tracing-manage-es-certificates_distr-tracing-jaeger-configuring">
<title>Managing certificates with Elasticsearch</title>
<simpara>You can create and manage certificates using the Red Hat Elasticsearch Operator. Managing certificates using the Red Hat Elasticsearch Operator also lets you use a single Elasticsearch cluster with multiple Jaeger Collectors.</simpara>
<important>
<simpara>Managing certificates with Elasticsearch is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.</simpara>
<simpara>For more information about the support scope of Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<simpara>Starting with version 2.4, the Red Hat OpenShift distributed tracing platform (Jaeger) Operator delegates certificate creation to the Red Hat Elasticsearch Operator by using the following annotations in the Elasticsearch custom resource:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>logging.openshift.io/elasticsearch-cert-management: "true"</literal></simpara>
</listitem>
<listitem>
<simpara><literal>logging.openshift.io/elasticsearch-cert.jaeger-&lt;shared-es-node-name&gt;: "user.jaeger"</literal></simpara>
</listitem>
<listitem>
<simpara><literal>logging.openshift.io/elasticsearch-cert.curator-&lt;shared-es-node-name&gt;: "system.logging.curator"</literal></simpara>
</listitem>
</itemizedlist>
<simpara>Where the <literal>&lt;shared-es-node-name&gt;</literal> is the name of the Elasticsearch node. For example, if you create an Elasticsearch node named <literal>custom-es</literal>, your custom resource might look like the following example.</simpara>
<formalpara>
<title>Example Elasticsearch CR showing annotations</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: logging.openshift.io/v1
kind: Elasticsearch
metadata:
  annotations:
    logging.openshift.io/elasticsearch-cert-management: "true"
    logging.openshift.io/elasticsearch-cert.jaeger-custom-es: "user.jaeger"
    logging.openshift.io/elasticsearch-cert.curator-custom-es: "system.logging.curator"
  name: custom-es
spec:
  managementState: Managed
  nodeSpec:
    resources:
      limits:
        memory: 16Gi
      requests:
        cpu: 1
        memory: 16Gi
  nodes:
    - nodeCount: 3
      proxyResources: {}
      resources: {}
      roles:
        - master
        - client
        - data
      storage: {}
  redundancyPolicy: ZeroRedundancy</programlisting>
</para>
</formalpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>{product-title} 4.7</simpara>
</listitem>
<listitem>
<simpara>{logging-title} 5.2</simpara>
</listitem>
<listitem>
<simpara>The Elasticsearch node and the Jaeger instances must be deployed in the same namespace.  For example, <literal>tracing-system</literal>.</simpara>
</listitem>
</itemizedlist>
<simpara>You enable certificate management by setting <literal>spec.storage.elasticsearch.useCertManagement</literal> to <literal>true</literal> in the Jaeger custom resource.</simpara>
<formalpara>
<title>Example showing <literal>useCertManagement</literal></title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger-prod
spec:
  strategy: production
  storage:
    type: elasticsearch
    elasticsearch:
      name: custom-es
      doNotProvision: true
      useCertManagement: true</programlisting>
</para>
</formalpara>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator sets the Elasticsearch custom resource <literal>name</literal> to the value of <literal>spec.storage.elasticsearch.name</literal> from the Jaeger custom resource when provisioning Elasticsearch.</simpara>
<simpara>The certificates are provisioned by the Red Hat Elasticsearch Operator and the Red Hat OpenShift distributed tracing platform (Jaeger) Operator injects the certificates.</simpara>
</section>
<section xml:id="distr-tracing-config-query_distr-tracing-jaeger-configuring">
<title>Query configuration options</title>
<simpara>Query is a service that retrieves traces from storage and hosts the user interface to display them.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Parameters used by the Red Hat OpenShift distributed tracing platform (Jaeger) Operator to define Query</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">spec:
  query:
    replicas:</literallayout></entry>
<entry align="left" valign="top"><simpara>Specifies the number of Query replicas to create.</simpara></entry>
<entry align="left" valign="top"><simpara>Integer, for example, <literal>2</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>Configuration parameters passed to Query</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">spec:
  query:
    options: {}</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the Query service.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  log-level:</literallayout></entry>
<entry align="left" valign="top"><simpara>Logging level for Query.</simpara></entry>
<entry align="left" valign="top"><simpara>Possible values: <literal>debug</literal>, <literal>info</literal>, <literal>warn</literal>, <literal>error</literal>, <literal>fatal</literal>, <literal>panic</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  query:
    base-path:</literallayout></entry>
<entry align="left" valign="top"><simpara>The base path for all jaeger-query HTTP routes can be set to a non-root value, for example, <literal>/jaeger</literal> would cause all UI URLs to start with <literal>/jaeger</literal>. This can be useful when running jaeger-query behind a reverse proxy.</simpara></entry>
<entry align="left" valign="top"><simpara>/&lt;path&gt;</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</table>
<formalpara>
<title>Sample Query configuration</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: "Jaeger"
metadata:
  name: "my-jaeger"
spec:
  strategy: allInOne
  allInOne:
    options:
      log-level: debug
      query:
        base-path: /jaeger</programlisting>
</para>
</formalpara>
</section>
<section xml:id="distr-tracing-config-ingester_distr-tracing-jaeger-configuring">
<title>Ingester configuration options</title>
<simpara>Ingester is a service that reads from a Kafka topic and writes to the Elasticsearch storage backend. If you are using the <literal>allInOne</literal> or <literal>production</literal> deployment strategies, you do not need to configure the Ingester service.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Jaeger parameters passed to the Ingester</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">spec:
  ingester:
    options: {}</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the Ingester service.</simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  deadlockInterval:</literallayout></entry>
<entry align="left" valign="top"><simpara>Specifies the interval, in seconds or minutes, that the Ingester must wait for a message before terminating.
The deadlock interval is disabled by default (set to <literal>0</literal>), to avoid terminating the Ingester when no messages arrive during system initialization.</simpara></entry>
<entry align="left" valign="top"><simpara>Minutes and seconds, for example, <literal>1m0s</literal>. Default value is <literal>0</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  kafka:
    consumer:
      topic:</literallayout></entry>
<entry align="left" valign="top"><simpara>The <literal>topic</literal> parameter identifies the Kafka configuration used by the collector to produce the messages, and the Ingester to consume the messages.</simpara></entry>
<entry align="left" valign="top"><simpara>Label for the consumer. For example, <literal>jaeger-spans</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  kafka:
    consumer:
      brokers:</literallayout></entry>
<entry align="left" valign="top"><simpara>Identifies the Kafka configuration used by the Ingester to consume the messages.</simpara></entry>
<entry align="left" valign="top"><simpara>Label for the broker, for example, <literal>my-cluster-kafka-brokers.kafka:9092</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">options:
  log-level:</literallayout></entry>
<entry align="left" valign="top"><simpara>Logging level for the Ingester.</simpara></entry>
<entry align="left" valign="top"><simpara>Possible values: <literal>debug</literal>, <literal>info</literal>, <literal>warn</literal>, <literal>error</literal>, <literal>fatal</literal>, <literal>dpanic</literal>, <literal>panic</literal>.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<formalpara>
<title>Streaming Collector and Ingester example</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: simple-streaming
spec:
  strategy: streaming
  collector:
    options:
      kafka:
        producer:
          topic: jaeger-spans
          brokers: my-cluster-kafka-brokers.kafka:9092
  ingester:
    options:
      kafka:
        consumer:
          topic: jaeger-spans
          brokers: my-cluster-kafka-brokers.kafka:9092
      ingester:
        deadlockInterval: 5
  storage:
    type: elasticsearch
    options:
      es:
        server-urls: http://elasticsearch:9200</programlisting>
</para>
</formalpara>
</section>
</section>
<section xml:id="injecting-sidecars">
<title>Injecting sidecars</title>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) relies on a proxy sidecar within the application&#8217;s pod to provide the Agent. The Red Hat OpenShift distributed tracing platform (Jaeger) Operator can inject Agent sidecars into deployment workloads. You can enable automatic sidecar injection or manage it manually.</simpara>
<section xml:id="dist-tracing-sidecar-automatic_distr-tracing-jaeger-configuring">
<title>Automatically injecting sidecars</title>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator can inject Jaeger Agent sidecars into deployment workloads. To enable automatic injection of sidecars, add the <literal>sidecar.jaegertracing.io/inject</literal> annotation set to either the string <literal>true</literal> or to the distributed tracing platform (Jaeger) instance name that is returned by running <literal>$ oc get jaegers</literal>.
When you specify <literal>true</literal>, there must be only a single distributed tracing platform (Jaeger) instance for the same namespace as the deployment. Otherwise, the Operator is unable to determine which distributed tracing platform (Jaeger) instance to use. A specific distributed tracing platform (Jaeger) instance name on a deployment has a higher precedence than <literal>true</literal> applied on its namespace.</simpara>
<simpara>The following snippet shows a simple application that will inject a sidecar, with the agent pointing to the single distributed tracing platform (Jaeger) instance available in the same namespace:</simpara>
<formalpara>
<title>Automatic sidecar injection example</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  annotations:
    "sidecar.jaegertracing.io/inject": "true" <co xml:id="CO8-1"/>
spec:
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: acme/myapp:myversion</programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO8-1">
<para>Set to either the string <literal>true</literal> or to the Jaeger instance name.</para>
</callout>
</calloutlist>
<simpara>When the sidecar is injected, the agent can then be accessed at its default location on <literal>localhost</literal>.</simpara>
</section>
<section xml:id="distr-tracing-sidecar-manual_distr-tracing-jaeger-configuring">
<title>Manually injecting sidecars</title>
<simpara>The Red Hat OpenShift distributed tracing platform (Jaeger) Operator can only automatically inject Jaeger Agent sidecars into Deployment workloads. For controller types other than <literal>Deployments</literal>, such as <literal>StatefulSets`and `DaemonSets</literal>, you can manually define the Jaeger agent sidecar in your specification.</simpara>
<simpara>The following snippet shows the manual definition you can include in your containers section for a Jaeger agent sidecar:</simpara>
<formalpara>
<title>Sidecar definition example for a <literal>StatefulSet</literal></title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: example-statefulset
  namespace: example-ns
  labels:
    app: example-app
spec:

    spec:
      containers:
        - name: example-app
          image: acme/myapp:myversion
          ports:
            - containerPort: 8080
              protocol: TCP
        - name: jaeger-agent
          image: registry.redhat.io/distributed-tracing/jaeger-agent-rhel7:&lt;version&gt;
           # The agent version must match the Operator version
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5775
              name: zk-compact-trft
              protocol: UDP
            - containerPort: 5778
              name: config-rest
              protocol: TCP
            - containerPort: 6831
              name: jg-compact-trft
              protocol: UDP
            - containerPort: 6832
              name: jg-binary-trft
              protocol: UDP
            - containerPort: 14271
              name: admin-http
              protocol: TCP
          args:
            - --reporter.grpc.host-port=dns:///jaeger-collector-headless.example-ns:14250
            - --reporter.type=grpc</programlisting>
</para>
</formalpara>
<simpara>The agent can then be accessed at its default location on localhost.</simpara>
</section>
</section>
</section>
<section xml:id="dist-tracing-jaeger-updating">
<title>Updating the distributed tracing platform Jaeger</title>

<warning>
<simpara>Jaeger is deprecated in Red Hat OpenShift distributed tracing 3.0.</simpara>
</warning>
<simpara>Operator Lifecycle Manager (OLM) controls the installation, upgrade, and role-based access control (RBAC) of Operators in a cluster. The OLM runs by default in {product-title}.
OLM queries for available Operators as well as upgrades for installed Operators.</simpara>
<simpara>During an update, the Red Hat OpenShift distributed tracing platform Operators upgrade the managed distributed tracing platform instances to the version associated with the Operator. Whenever a new version of the Red Hat OpenShift distributed tracing platform (Jaeger) Operator is installed, all the distributed tracing platform (Jaeger) application instances managed by the Operator are upgraded to the Operator&#8217;s version. For example, after upgrading the Operator from 1.10 installed to 1.11, the Operator scans for running distributed tracing platform (Jaeger) instances and upgrades them to 1.11 as well.</simpara>
<important>
<simpara>If you have not already updated your OpenShift Elasticsearch Operator as described in <link xl:href="../../logging/cluster-logging-upgrading.xml#cluster-logging-upgrading_cluster-logging-upgrading">Updating OpenShift Logging</link>, complete that update before updating your Red Hat OpenShift distributed tracing platform (Jaeger) Operator.</simpara>
</important>
<section xml:id="additional-resources_dist-tracing-jaeger-updating" role="_additional-resources">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="../../operators/understanding/olm/olm-understanding-olm.xml#olm-understanding-olm">Operator Lifecycle Manager concepts and resources</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../operators/admin/olm-upgrading-operators.xml#olm-upgrading-operators">Updating installed Operators</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../logging/cluster-logging-upgrading.xml#cluster-logging-upgrading_cluster-logging-upgrading">Updating OpenShift Logging</link></simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="dist-tracing-jaeger-removing">
<title>Removing the distributed tracing platform Jaeger</title>

<simpara>The steps for removing Red Hat OpenShift distributed tracing platform from an {product-title} cluster are as follows:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Shut down any Red Hat OpenShift distributed tracing platform pods.</simpara>
</listitem>
<listitem>
<simpara>Remove any Red Hat OpenShift distributed tracing platform instances.</simpara>
</listitem>
<listitem>
<simpara>Remove the Red Hat OpenShift distributed tracing platform (Jaeger) Operator.</simpara>
</listitem>
<listitem>
<simpara>Remove the Red Hat build of OpenTelemetry Operator.</simpara>
</listitem>
</orderedlist>
<section xml:id="distr-tracing-removing-instance_dist-tracing-jaeger-removing">
<title>Removing a distributed tracing platform (Jaeger) instance by using the web console</title>
<simpara>You can remove a distributed tracing platform (Jaeger) instance in the <emphasis role="strong">Administrator</emphasis> view of the web console.</simpara>
<warning>
<simpara>When deleting an instance that uses in-memory storage, all data is irretrievably lost. Data stored in persistent storage such as Elasticsearch is not deleted when a Red Hat OpenShift distributed tracing platform (Jaeger) instance is removed.</simpara>
</warning>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged in to the web console as a cluster administrator with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in to the {product-title} web console.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">Installed Operators</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the name of the project where the Operators are installed from the <emphasis role="strong">Project</emphasis> menu, for example, <literal>openshift-operators</literal>.</simpara>
</listitem>
<listitem>
<simpara>Click the Red Hat OpenShift distributed tracing platform (Jaeger) Operator.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Jaeger</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Click the Options menu <inlinemediaobject>
<imageobject>
<imagedata fileref="images/kebab.png"/>
</imageobject>
<textobject><phrase>kebab</phrase></textobject>
</inlinemediaobject> next to the instance you want to delete and select <emphasis role="strong">Delete Jaeger</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the confirmation message, click <emphasis role="strong">Delete</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="distr-tracing-removing-instance-cli_dist-tracing-jaeger-removing">
<title>Removing a distributed tracing platform (Jaeger) instance by using the CLI</title>
<simpara>You can remove a distributed tracing platform (Jaeger) instance on the command line.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An active OpenShift CLI (<literal>oc</literal>) session by a cluster administrator with the <literal>cluster-admin</literal> role.</simpara>
<tip>
<itemizedlist>
<listitem>
<simpara>Ensure that your OpenShift CLI (<literal>oc</literal>) version is up to date and matches your {product-title} version.</simpara>
</listitem>
<listitem>
<simpara>Run <literal>oc login</literal>:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc login --username=&lt;your_username&gt;</programlisting>
</listitem>
</itemizedlist>
</tip>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Log in with the OpenShift CLI (<literal>oc</literal>) by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc login --username=&lt;NAMEOFUSER&gt;</programlisting>
</listitem>
<listitem>
<simpara>To display the distributed tracing platform (Jaeger) instances, run the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get deployments -n &lt;jaeger-project&gt;</programlisting>
<simpara>For example,</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get deployments -n openshift-operators</programlisting>
<simpara>The names of Operators have the suffix <literal>-operator</literal>. The following example shows two Red Hat OpenShift distributed tracing platform (Jaeger) Operators and four distributed tracing platform (Jaeger) instances:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get deployments -n openshift-operators</programlisting>
<simpara>You will see output similar to the following:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">NAME                     READY   UP-TO-DATE   AVAILABLE   AGE
elasticsearch-operator   1/1     1            1           93m
jaeger-operator          1/1     1            1           49m
jaeger-test              1/1     1            1           7m23s
jaeger-test2             1/1     1            1           6m48s
tracing1                 1/1     1            1           7m8s
tracing2                 1/1     1            1           35m</programlisting>
</listitem>
<listitem>
<simpara>To remove an instance of distributed tracing platform (Jaeger), run the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc delete jaeger &lt;deployment-name&gt; -n &lt;jaeger-project&gt;</programlisting>
<simpara>For example:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc delete jaeger tracing2 -n openshift-operators</programlisting>
</listitem>
<listitem>
<simpara>To verify the deletion, run the <literal>oc get deployments</literal> command again:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get deployments -n &lt;jaeger-project&gt;</programlisting>
<simpara>For example:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get deployments -n openshift-operators</programlisting>
<simpara>You will see generated output that is similar to the following example:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">NAME                     READY   UP-TO-DATE   AVAILABLE   AGE
elasticsearch-operator   1/1     1            1           94m
jaeger-operator          1/1     1            1           50m
jaeger-test              1/1     1            1           8m14s
jaeger-test2             1/1     1            1           7m39s
tracing1                 1/1     1            1           7m59s</programlisting>
</listitem>
</orderedlist>
</section>
<section xml:id="removing-distributed-tracing-operators">
<title>Removing the Red Hat OpenShift distributed tracing platform Operators</title>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Follow the instructions in <link xl:href="../../operators/admin/olm-deleting-operators-from-cluster.xml#olm-deleting-operators-from-a-cluster">Deleting Operators from a cluster</link> to remove the Red Hat OpenShift distributed tracing platform (Jaeger) Operator.</simpara>
</listitem>
<listitem>
<simpara>Optional: After the Red Hat OpenShift distributed tracing platform (Jaeger) Operator has been removed, remove the OpenShift Elasticsearch Operator.</simpara>
</listitem>
</orderedlist>
</section>
</section>
</chapter>
<chapter xml:id="_distributed_tracing_platform_tempo">
<title>Distributed tracing platform (Tempo)</title>
<section xml:id="dist-tracing-tempo-installing">
<title>Installing the distributed tracing platform (Tempo)</title>

<simpara>Installing the distributed tracing platform (Tempo) involves the following steps:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Setting up supported object storage.</simpara>
</listitem>
<listitem>
<simpara>Installing the Tempo Operator.</simpara>
</listitem>
<listitem>
<simpara>Creating a secret for the object storage credentials.</simpara>
</listitem>
<listitem>
<simpara>Creating a namespace for a TempoStack instance.</simpara>
</listitem>
<listitem>
<simpara>Creating a <literal>TempoStack</literal> custom resource to deploy at least one TempoStack instance.</simpara>
</listitem>
</orderedlist>
<section xml:id="distr-tracing-tempo-object-storage-setup_dist-tracing-tempo-installing">
<title>Object storage setup</title>
<simpara>You can use the following configuration parameters when setting up a supported object storage.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required secret parameters</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="75*"/>
<thead>
<row>
<entry align="left" valign="top">Storage provider</entry>
<entry align="left" valign="top">Secret parameters</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong"><link xl:href="https://access.redhat.com/documentation/en-us/red_hat_openshift_data_foundation/">Red Hat OpenShift Data Foundation</link></emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>name: tempostack-dev-odf # example</literal></simpara><simpara><literal>bucket: &lt;bucket_name&gt; # requires an ObjectBucketClaim</literal></simpara><simpara><literal>endpoint: https://s3.openshift-storage.svc</literal></simpara><simpara><literal>access_key_id: &lt;data_foundation_access_key_id&gt;</literal></simpara><simpara><literal>access_key_secret: &lt;data_foundation_access_key_secret&gt;</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">MinIO</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara>See <link xl:href="https://operator.min.io/">MinIO Operator</link>.</simpara><simpara><literal>name: tempostack-dev-minio # example</literal></simpara><simpara><literal>bucket: &lt;minio_bucket_name&gt; # <link xl:href="https://min.io/docs/minio/linux/reference/minio-mc/mc-mb.html#command-mc.mb">MinIO documentation</link></literal></simpara><simpara><literal>endpoint: &lt;minio_bucket_endpoint&gt;</literal></simpara><simpara><literal>access_key_id: &lt;minio_access_key_id&gt;</literal></simpara><simpara><literal>access_key_secret: &lt;minio_access_key_secret&gt;</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">Amazon S3</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>name: tempostack-dev-s3 # example</literal></simpara><simpara><literal>bucket: &lt;s3_bucket_name&gt; # <link xl:href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html">Amazon S3 documentation</link></literal></simpara><simpara><literal>endpoint: &lt;s3_bucket_endpoint&gt;</literal></simpara><simpara><literal>access_key_id: &lt;s3_access_key_id&gt;</literal></simpara><simpara><literal>access_key_secret: &lt;s3_access_key_secret&gt;</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">Microsoft Azure Blob Storage</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>name: tempostack-dev-azure # example</literal></simpara><simpara><literal>container: &lt;azure_blob_storage_container_name&gt; # <link xl:href="https://learn.microsoft.com/en-us/rest/api/storageservices/create-container?tabs=azure-ad">Microsoft Azure documentation</link></literal></simpara><simpara><literal>account_name: &lt;azure_blob_storage_account_name&gt;</literal></simpara><simpara><literal>account_key: &lt;azure_blob_storage_account_key&gt;</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">Google Cloud Storage on Google Cloud Platform (GCP)</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>name: tempostack-dev-gcs # example</literal></simpara><simpara><literal>bucketname: &lt;google_cloud_storage_bucket_name&gt; # requires a <link xl:href="https://cloud.google.com/storage/docs/creating-buckets">bucket</link> created in a <link xl:href="https://cloud.google.com/resource-manager/docs/creating-managing-projects">GCP project</link></literal></simpara><simpara><literal>key.json: &lt;path/to/key.json&gt; # requires a <link xl:href="https://cloud.google.com/docs/authentication/getting-started#creating_a_service_account">service account</link> in the bucket&#8217;s GCP project for GCP authentication</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section xml:id="distr-tracing-tempo-install-web-console_dist-tracing-tempo-installing">
<title>Installing the distributed tracing platform (Tempo) from the web console</title>
<simpara>You can install the distributed tracing platform (Tempo) from the <emphasis role="strong">Administrator</emphasis> view of the web console.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged in to the {product-title} web console as a cluster administrator with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>For Red Hat OpenShift Dedicated, you must be logged in using an account with the <literal>dedicated-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>You are using a supported provider of object storage: <link xl:href="https://www.redhat.com/en/technologies/cloud-computing/openshift-data-foundation">Red Hat OpenShift Data Foundation</link>, <link xl:href="https://min.io/">MinIO</link>, <link xl:href="https://aws.amazon.com/s3/">Amazon S3</link>, <link xl:href="https://azure.microsoft.com/en-us/products/storage/blobs/">Azure Blob Storage</link>, <link xl:href="https://cloud.google.com/storage/">Google Cloud Storage</link>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Install the Tempo Operator:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Go to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">OperatorHub</emphasis> and search for <literal>Tempo Operator</literal>.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Tempo Operator</emphasis> that is <emphasis role="strong">OpenShift Operator for Tempo</emphasis> &#8594; <emphasis role="strong">Install</emphasis> &#8594; <emphasis role="strong">Install</emphasis> &#8594; <emphasis role="strong">View Operator</emphasis>.</simpara>
<important>
<simpara>This installs the Operator with the default presets:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Update channel</emphasis> &#8594; <emphasis role="strong">stable</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Installation mode</emphasis> &#8594; <emphasis role="strong">All namespaces on the cluster</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Installed Namespace</emphasis> &#8594; <emphasis role="strong">openshift-tempo-operator</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Update approval</emphasis> &#8594; <emphasis role="strong">Automatic</emphasis></simpara>
</listitem>
</itemizedlist>
</important>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Details</emphasis> tab of the page of the installed Operator, under <emphasis role="strong">ClusterServiceVersion details</emphasis>, verify that the installation <emphasis role="strong">Status</emphasis> is <emphasis role="strong">Succeeded</emphasis>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Create a project of your choice for the <emphasis role="strong">TempoStack</emphasis> instance that you will create in a subsequent step: go to <emphasis role="strong">Home</emphasis> &#8594; <emphasis role="strong">Projects</emphasis> &#8594; <emphasis role="strong">Create Project</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the project that you created for the <emphasis role="strong">TempoStack</emphasis> instance, create a secret for your object storage bucket: go to <emphasis role="strong">Workloads</emphasis> &#8594; <emphasis role="strong">Secrets</emphasis> &#8594; <emphasis role="strong">Create</emphasis> &#8594; <emphasis role="strong">From YAML</emphasis>.</simpara>
<formalpara>
<title>Example secret for Amazon S3 and MinIO storage</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: v1
kind: Secret
metadata:
  name: minio-test
stringData:
  endpoint: http://minio.minio.svc:9000
  bucket: tempo
  access_key_id: tempo
  access_key_secret: &lt;secret&gt;
type: Opaque</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>Create a <emphasis role="strong">TempoStack</emphasis> instance.</simpara>
<note>
<simpara>You can create multiple <emphasis role="strong">TempoStack</emphasis> instances in separate projects on the same cluster.</simpara>
</note>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Go to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">Installed Operators</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">TempoStack</emphasis> &#8594; <emphasis role="strong">Create TempoStack</emphasis> &#8594; <emphasis role="strong">YAML view</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">YAML view</emphasis>, customize the <literal>TempoStack</literal> custom resource (CR):</simpara>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: sample
  namespace: &lt;project_of_tempostack_instance&gt;
spec:
  storageSize: 1Gi
  storage:
    secret:
      name: &lt;secret-name&gt; <co xml:id="CO9-1"/>
      type: &lt;secret-provider&gt; <co xml:id="CO9-2"/>
  template:
    queryFrontend:
      jaegerQuery:
        enabled: true
        ingress:
          route:
            termination: edge
          type: route</programlisting>
<calloutlist>
<callout arearefs="CO9-1">
<para>The value of the <literal>name</literal> in the <literal>metadata</literal> of the secret.</para>
</callout>
<callout arearefs="CO9-2">
<para>The accepted values are <literal>azure</literal> for Azure Blob Storage; <literal>gcs</literal> for Google Cloud Storage; and <literal>s3</literal> for Amazon S3, MinIO, or Red Hat OpenShift Data Foundation.</para>
</callout>
</calloutlist>
<formalpara>
<title>Example of a TempoStack CR for AWS S3 and MinIO storage</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: simplest
  namespace: &lt;project_of_tempostack_instance&gt;
spec:
  storageSize: 1Gi
  storage:
    secret:
      name: minio-test
      type: s3
  resources:
    total:
      limits:
        memory: 2Gi
        cpu: 2000m
  template:
    queryFrontend:
      jaegerQuery:
        enabled: true
        ingress:
          route:
            termination: edge
          type: route</programlisting>
</para>
</formalpara>
<simpara>The stack deployed in this example is configured to receive Jaeger Thrift over HTTP and OpenTelemetry Protocol (OTLP), which permits visualizing the data with the Jaeger UI.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Create</emphasis>.</simpara>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<orderedlist numeration="arabic">
<title>Verification</title>
<listitem>
<simpara>Use the <emphasis role="strong">Project:</emphasis> dropdown list to select the project of the <emphasis role="strong">TempoStack</emphasis> instance.</simpara>
</listitem>
<listitem>
<simpara>Go to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">Installed Operators</emphasis> to verify that the <emphasis role="strong">Status</emphasis> of the <emphasis role="strong">TempoStack</emphasis> instance is <emphasis role="strong">Condition: Ready</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Go to <emphasis role="strong">Workloads</emphasis> &#8594; <emphasis role="strong">Pods</emphasis> to verify that all the component pods of the <emphasis role="strong">TempoStack</emphasis> instance are running.</simpara>
</listitem>
<listitem>
<simpara>Access the Tempo console:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Go to <emphasis role="strong">Networking</emphasis> &#8594; <emphasis role="strong">Routes</emphasis> and <keycombo><keycap>Ctrl</keycap><keycap>F</keycap></keycombo> to search for <literal>tempo</literal>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Location</emphasis> column, open the URL to access the Tempo console.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Log In With OpenShift</emphasis> to use your cluster administrator credentials for the web console.</simpara>
<note>
<simpara>The Tempo console initially shows no trace data following the Tempo console installation.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="distr-tracing-tempo-install-cli_dist-tracing-tempo-installing">
<title>Installing the distributed tracing platform (Tempo) by using the CLI</title>
<simpara>You can install the distributed tracing platform (Tempo) from the command line.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An active OpenShift CLI (<literal>oc</literal>) session by a cluster administrator with the <literal>cluster-admin</literal> role.</simpara>
<tip>
<itemizedlist>
<listitem>
<simpara>Ensure that your OpenShift CLI (<literal>oc</literal>) version is up to date and matches your {product-title} version.</simpara>
</listitem>
<listitem>
<simpara>Run <literal>oc login</literal>:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc login --username=&lt;your_username&gt;</programlisting>
</listitem>
</itemizedlist>
</tip>
</listitem>
<listitem>
<simpara>You are using a supported provider of object storage: <link xl:href="https://www.redhat.com/en/technologies/cloud-computing/openshift-data-foundation">Red Hat OpenShift Data Foundation</link>, <link xl:href="https://min.io/">MinIO</link>, <link xl:href="https://aws.amazon.com/s3/">Amazon S3</link>, <link xl:href="https://azure.microsoft.com/en-us/products/storage/blobs/">Azure Blob Storage</link>, <link xl:href="https://cloud.google.com/storage/">Google Cloud Storage</link>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Install the Tempo Operator:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Create a project for the Tempo Operator by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc apply -f - &lt;&lt; EOF
apiVersion: project.openshift.io/v1
kind: Project
metadata:
  labels:
    kubernetes.io/metadata.name: openshift-tempo-operator
    openshift.io/cluster-monitoring: "true"
  name: openshift-tempo-operator
EOF</programlisting>
</listitem>
<listitem>
<simpara>Create an Operator group by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc apply -f - &lt;&lt; EOF
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: openshift-tempo-operator
  namespace: openshift-tempo-operator
spec:
  upgradeStrategy: Default
EOF</programlisting>
</listitem>
<listitem>
<simpara>Create a subscription by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc apply -f - &lt;&lt; EOF
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: tempo-product
  namespace: openshift-tempo-operator
spec:
  channel: stable
  installPlanApproval: Automatic
  name: tempo-product
  source: redhat-operators
  sourceNamespace: openshift-marketplace
EOF</programlisting>
</listitem>
<listitem>
<simpara>Check the operator status by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get csv -n openshift-tempo-operator</programlisting>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Run the following command to create a project of your choice for the TempoStack instance that you will create in a subsequent step:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc apply -f - &lt;&lt; EOF
apiVersion: project.openshift.io/v1
kind: Project
metadata:
  name: &lt;project_of_tempostack_instance&gt;
EOF</programlisting>
</listitem>
<listitem>
<simpara>In the project that you created for the TempoStack instance, create a secret for your object storage bucket by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc apply -f - &lt;&lt; EOF
&lt;object_storage_secret&gt;
EOF</programlisting>
<formalpara>
<title>Example secret for Amazon S3 and MinIO storage</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: v1
kind: Secret
metadata:
  name: minio-test
stringData:
  endpoint: http://minio.minio.svc:9000
  bucket: tempo
  access_key_id: tempo
  access_key_secret: &lt;secret&gt;
type: Opaque</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>Create a TempoStack instance in the project that you created for the TempoStack instance.</simpara>
<note>
<simpara>You can create multiple TempoStack instances in separate projects on the same cluster.</simpara>
</note>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Customize the <literal>TempoStack</literal> custom resource (CR):</simpara>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: sample
  namespace: &lt;project_of_tempostack_instance&gt;
spec:
  storageSize: 1Gi
  storage:
      secret:
          name: &lt;secret-name&gt; <co xml:id="CO10-1"/>
          type: &lt;secret-provider&gt; <co xml:id="CO10-2"/>
  template:
    queryFrontend:
      jaegerQuery:
        enabled: true
        ingress:
          route:
            termination: edge
          type: route</programlisting>
<calloutlist>
<callout arearefs="CO10-1">
<para>The value of the <literal>name</literal> in the <literal>metadata</literal> of the secret.</para>
</callout>
<callout arearefs="CO10-2">
<para>The accepted values are <literal>azure</literal> for Azure Blob Storage; <literal>gcs</literal> for Google Cloud Storage; and <literal>s3</literal> for Amazon S3, MinIO, or Red Hat OpenShift Data Foundation.</para>
</callout>
</calloutlist>
<formalpara>
<title>Example of a TempoStack CR for AWS S3 and MinIO storage</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: simplest
  namespace: project_of_tempostack_instance
spec:
  storageSize: 1Gi
  storage:
    secret:
      name: minio-test
      type: s3
  resources:
    total:
      limits:
        memory: 2Gi
        cpu: 2000m
  template:
    queryFrontend:
      jaegerQuery:
        enabled: true
        ingress:
          route:
            termination: edge
          type: route</programlisting>
</para>
</formalpara>
<simpara>The stack deployed in this example is configured to receive Jaeger Thrift over HTTP and OpenTelemetry Protocol (OTLP), which permits visualizing the data with the Jaeger UI.</simpara>
</listitem>
<listitem>
<simpara>Apply the customized CR by running the following command.</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc apply -f - &lt;&lt; EOF
&lt;TempoStack_custom_resource&gt;
EOF</programlisting>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<orderedlist numeration="arabic">
<title>Verification</title>
<listitem>
<simpara>Verify that the <literal>status</literal> of all TempoStack <literal>components</literal> is <literal>Running</literal> and the <literal>conditions</literal> are <literal>type: Ready</literal> by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get tempostacks.tempo.grafana.com simplest -o yaml</programlisting>
</listitem>
<listitem>
<simpara>Verify that all the TempoStack component pods are running by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get pods</programlisting>
</listitem>
<listitem>
<simpara>Access the Tempo console:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Query the route details by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ export TEMPO_URL=$(oc get route -n &lt;control_plane_namespace&gt; tempo -o jsonpath='{.spec.host}')</programlisting>
</listitem>
<listitem>
<simpara>Open <literal>https://&lt;route_from_previous_step&gt;</literal> in a web browser.</simpara>
</listitem>
<listitem>
<simpara>Log in using your cluster administrator credentials for the web console.</simpara>
<note>
<simpara>The Tempo console initially shows no trace data following the Tempo console installation.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="additional-resources_dist-tracing-tempo-installing" role="_additional-resources">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="../../post_installation_configuration/preparing-for-users.xml#creating-cluster-admin_post-install-preparing-for-users">Creating a cluster admin</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://operatorhub.io/">OperatorHub.io</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../web_console/web-console.xml#web-console">Accessing the web console</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../operators/admin/olm-adding-operators-to-cluster.xml#olm-installing-from-operatorhub-using-web-console_olm-adding-operators-to-a-cluster">Installing from OperatorHub using the web console</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../operators/user/olm-creating-apps-from-installed-operators.xml#olm-creating-apps-from-installed-operators">Creating applications from installed Operators</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../cli_reference/openshift_cli/getting-started-cli.xml#getting-started-cli">Getting started with the OpenShift CLI</link></simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="distr-tracing-tempo-configuring">
<title>Configuring and deploying the distributed tracing platform (Tempo)</title>

<simpara>The Tempo Operator uses a custom resource definition (CRD) file that defines the architecture and configuration settings to be used when creating and deploying the distributed tracing platform (Tempo) resources. You can install the default configuration or modify the file.</simpara>
<section xml:id="customizing-your-tempo-deployment">
<title>Customizing your deployment</title>
<simpara>For information about configuring the back-end storage, see <link xl:href="../../storage/understanding-persistent-storage.xml#understanding-persistent-storage">Understanding persistent storage</link> and the appropriate configuration topic for your chosen storage option.</simpara>
<section xml:id="distr-tracing-tempo-config-default_distr-tracing-tempo-configuring">
<title>Distributed tracing default configuration options</title>
<simpara>The Tempo custom resource (CR) defines the architecture and settings to be used when creating the distributed tracing platform (Tempo) resources. You can modify these parameters to customize your distributed tracing platform (Tempo) implementation to your business needs.</simpara>
<formalpara>
<title>Example of a generic Tempo YAML file</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: name
spec:
  storage: {}
  resources: {}
  storageSize: 200M
  replicationFactor: 1
  retention: {}
  template:
      distributor:{}
      ingester: {}
      compactor: {}
      querier: {}
      queryFrontend: {}
      gateway: {}</programlisting>
</para>
</formalpara>
<table frame="all" rowsep="1" colsep="1">
<title>Tempo parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">apiVersion:</literallayout></entry>
<entry align="left" valign="top"><simpara>API version to use when creating the object.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>tempo.grafana.com/v1alpha1</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>tempo.grafana.com/v1alpha1</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">kind:</literallayout></entry>
<entry align="left" valign="top"><simpara>Defines the kind of Kubernetes object to create.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>tempo</literal></simpara></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">metadata:</literallayout></entry>
<entry align="left" valign="top"><simpara>Data that uniquely identifies the object, including a <literal>name</literal> string, <literal>UID</literal>, and optional <literal>namespace</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>{product-title} automatically generates the <literal>UID</literal> and completes the <literal>namespace</literal> with the name of the project where the object is created.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">name:</literallayout></entry>
<entry align="left" valign="top"><simpara>Name for the object.</simpara></entry>
<entry align="left" valign="top"><simpara>Name of your TempoStack instance.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>tempo-all-in-one-inmemory</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">spec:</literallayout></entry>
<entry align="left" valign="top"><simpara>Specification for the object to be created.</simpara></entry>
<entry align="left" valign="top"><simpara>Contains all of the configuration parameters for your TempoStack instance. When a common definition for all Tempo components is required, it is defined under the <literal>spec</literal> node. When the definition relates to an individual component, it is placed under the <literal>spec/template/&lt;component&gt;</literal> node.</simpara></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">resources:</literallayout></entry>
<entry align="left" valign="top"><simpara>Resources assigned to the TempoStack.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storageSize:</literallayout></entry>
<entry align="left" valign="top"><simpara>Storage size for ingester PVCs.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">replicationFactor:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration for the replication factor.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">retention:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options for retention of traces.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storage:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options that define the storage. All storage-related options must be placed under <literal>storage</literal> and not under the <literal>allInOne</literal> or other component options.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">template.distributor:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options for the Tempo <literal>distributor</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">template.ingester:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options for the Tempo <literal>ingester</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">template.compactor:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options for the Tempo <literal>compactor</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">template.querier:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options for the Tempo <literal>querier</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">template.queryFrontend:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options for the Tempo <literal>query-frontend</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">template.gateway:</literallayout></entry>
<entry align="left" valign="top"><simpara>Configuration options for the Tempo <literal>gateway</literal>.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</table>
<formalpara>
<title>Minimum required configuration</title>
<para>The following is the required minimum for creating a distributed tracing platform (Tempo) deployment with the default settings:</para>
</formalpara>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: simplest
spec:
  storage: <co xml:id="CO11-1"/>
    secret:
      name: minio
      type: s3
  resources:
    total:
      limits:
        memory: 2Gi
        cpu: 2000m
  template:
    queryFrontend:
      jaegerQuery:
        enabled: true
        ingress:
          type: route</programlisting>
<calloutlist>
<callout arearefs="CO11-1">
<para>This section specifies the deployed object storage back end, which requires a created secret with credentials for access to the object storage.</para>
</callout>
</calloutlist>
</section>
<section xml:id="distr-tracing-tempo-config-storage_distr-tracing-tempo-configuring">
<title>The distributed tracing platform (Tempo) storage configuration</title>
<simpara>You can configure object storage for the distributed tracing platform (Tempo) in the <literal>TempoStack</literal> custom resource under <literal>spec.storage</literal>. You can choose from among several storage providers that are supported.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>General storage parameters used by the Tempo Operator to define distributed tracing storage</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="25*"/>
<colspec colname="col_3" colwidth="25*"/>
<colspec colname="col_4" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
<entry align="left" valign="top">Default value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">spec:
  storage:
    secret
      type:</literallayout></entry>
<entry align="left" valign="top"><simpara>Type of storage to use for the deployment.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>memory</literal>. Memory storage is only appropriate for development, testing, demonstrations, and proof of concept environments because the data does not persist when the pod is shut down.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>memory</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storage:
  secretname:</literallayout></entry>
<entry align="left" valign="top"><simpara>Name of the secret that contains the credentials for the set object storage type.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"><simpara>N/A</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><literallayout class="monospaced">storage:
  tls:
    caName:</literallayout></entry>
<entry align="left" valign="top"><simpara>CA is the name of a <literal>ConfigMap</literal> object containing a CA certificate.</simpara></entry>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top"></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>Required secret parameters</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="75*"/>
<thead>
<row>
<entry align="left" valign="top">Storage provider</entry>
<entry align="left" valign="top">Secret parameters</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong"><link xl:href="https://access.redhat.com/documentation/en-us/red_hat_openshift_data_foundation/">Red Hat OpenShift Data Foundation</link></emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>name: tempostack-dev-odf # example</literal></simpara><simpara><literal>bucket: &lt;bucket_name&gt; # requires an ObjectBucketClaim</literal></simpara><simpara><literal>endpoint: https://s3.openshift-storage.svc</literal></simpara><simpara><literal>access_key_id: &lt;data_foundation_access_key_id&gt;</literal></simpara><simpara><literal>access_key_secret: &lt;data_foundation_access_key_secret&gt;</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">MinIO</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara>See <link xl:href="https://operator.min.io/">MinIO Operator</link>.</simpara><simpara><literal>name: tempostack-dev-minio # example</literal></simpara><simpara><literal>bucket: &lt;minio_bucket_name&gt; # <link xl:href="https://min.io/docs/minio/linux/reference/minio-mc/mc-mb.html#command-mc.mb">MinIO documentation</link></literal></simpara><simpara><literal>endpoint: &lt;minio_bucket_endpoint&gt;</literal></simpara><simpara><literal>access_key_id: &lt;minio_access_key_id&gt;</literal></simpara><simpara><literal>access_key_secret: &lt;minio_access_key_secret&gt;</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">Amazon S3</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>name: tempostack-dev-s3 # example</literal></simpara><simpara><literal>bucket: &lt;s3_bucket_name&gt; # <link xl:href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html">Amazon S3 documentation</link></literal></simpara><simpara><literal>endpoint: &lt;s3_bucket_endpoint&gt;</literal></simpara><simpara><literal>access_key_id: &lt;s3_access_key_id&gt;</literal></simpara><simpara><literal>access_key_secret: &lt;s3_access_key_secret&gt;</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">Microsoft Azure Blob Storage</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>name: tempostack-dev-azure # example</literal></simpara><simpara><literal>container: &lt;azure_blob_storage_container_name&gt; # <link xl:href="https://learn.microsoft.com/en-us/rest/api/storageservices/create-container?tabs=azure-ad">Microsoft Azure documentation</link></literal></simpara><simpara><literal>account_name: &lt;azure_blob_storage_account_name&gt;</literal></simpara><simpara><literal>account_key: &lt;azure_blob_storage_account_key&gt;</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">Google Cloud Storage on Google Cloud Platform (GCP)</emphasis></simpara></entry>
<entry align="left" valign="top"><simpara><literal>name: tempostack-dev-gcs # example</literal></simpara><simpara><literal>bucketname: &lt;google_cloud_storage_bucket_name&gt; # requires a <link xl:href="https://cloud.google.com/storage/docs/creating-buckets">bucket</link> created in a <link xl:href="https://cloud.google.com/resource-manager/docs/creating-managing-projects">GCP project</link></literal></simpara><simpara><literal>key.json: &lt;path/to/key.json&gt; # requires a <link xl:href="https://cloud.google.com/docs/authentication/getting-started#creating_a_service_account">service account</link> in the bucket&#8217;s GCP project for GCP authentication</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section xml:id="distr-tracing-tempo-config-query_distr-tracing-tempo-configuring">
<title>Query configuration options</title>
<simpara>Two components of the distributed tracing platform (Tempo), the querier and query frontend, manage queries. You can configure both of these components.</simpara>
<simpara>The querier component finds the requested trace ID in the ingesters or back-end storage. Depending on the set parameters, the querier component can query both the ingesters and pull bloom or indexes from the back end to search blocks in object storage. The querier component exposes an HTTP endpoint at <literal>GET /querier/api/traces/&lt;traceID&gt;</literal>, but it is not expected to be used directly. Queries must be sent to the query frontend.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Configuration parameters for the querier component</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>nodeSelector</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The simple form of the node-selection constraint.</simpara></entry>
<entry align="left" valign="top"><simpara>type: object</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>replicas</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of replicas to be created for the component.</simpara></entry>
<entry align="left" valign="top"><simpara>type: integer; format: int32</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>tolerations</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Component-specific pod tolerations.</simpara></entry>
<entry align="left" valign="top"><simpara>type: array</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>The query frontend component is responsible for sharding the search space for an incoming query. The query frontend exposes traces via a simple HTTP endpoint: <literal>GET /api/traces/&lt;traceID&gt;</literal>. Internally, the query frontend component splits the <literal>blockID</literal> space into a configurable number of shards and then queues these requests. The querier component connects to the query frontend component via a streaming gRPC connection to process these sharded queries.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Configuration parameters for the query frontend component</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Values</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>component</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Configuration of the query frontend component.</simpara></entry>
<entry align="left" valign="top"><simpara>type: object</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>component.nodeSelector</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The simple form of the node selection constraint.</simpara></entry>
<entry align="left" valign="top"><simpara>type: object</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>component.replicas</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The number of replicas to be created for the query frontend component.</simpara></entry>
<entry align="left" valign="top"><simpara>type: integer; format: int32</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>component.tolerations</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Pod tolerations specific to the query frontend component.</simpara></entry>
<entry align="left" valign="top"><simpara>type: array</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The options specific to the Jaeger Query component.</simpara></entry>
<entry align="left" valign="top"><simpara>type: object</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.enabled</literal></simpara></entry>
<entry align="left" valign="top"><simpara>When <literal>enabled</literal>, creates the Jaeger Query component,<literal>jaegerQuery</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara>type: boolean</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.ingress</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The options for the Jaeger Query ingress.</simpara></entry>
<entry align="left" valign="top"><simpara>type: object</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.ingress.annotations</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The annotations of the ingress object.</simpara></entry>
<entry align="left" valign="top"><simpara>type: object</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.ingress.host</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The hostname of the ingress object.</simpara></entry>
<entry align="left" valign="top"><simpara>type: string</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.ingress.ingressClassName</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The name of an IngressClass cluster resource. Defines which ingress controller serves this ingress resource.</simpara></entry>
<entry align="left" valign="top"><simpara>type: string</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.ingress.route</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The options for the OpenShift route.</simpara></entry>
<entry align="left" valign="top"><simpara>type: object</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.ingress.route.termination</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The termination type. The default is <literal>edge</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara>type: string (enum: insecure, edge, passthrough, reencrypt)</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.ingress.type</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The type of ingress for the Jaeger Query UI. The supported types are <literal>ingress</literal>, <literal>route</literal>, and <literal>none</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara>type: string (enum: ingress, route)</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.monitorTab</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The monitor tab configuration.</simpara></entry>
<entry align="left" valign="top"><simpara>type: object</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.monitorTab.enabled</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Enables the monitor tab in the Jaeger console. The <literal>PrometheusEndpoint</literal> must be configured.</simpara></entry>
<entry align="left" valign="top"><simpara>type: boolean</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>jaegerQuery.monitorTab.prometheusEndpoint</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics. For example, <literal>https://thanos-querier.openshift-monitoring.svc.cluster.local:9091</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara>type: string</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<formalpara>
<title>Example configuration of the query frontend component in a <literal>TempoStack</literal> CR</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: simplest
spec:
  storage:
    secret:
      name: minio
      type: s3
  storageSize: 200M
  resources:
    total:
      limits:
        memory: 2Gi
        cpu: 2000m
  template:
    queryFrontend:
      jaegerQuery:
        enabled: true
        ingress:
          route:
            termination: edge
          type: route</programlisting>
</para>
</formalpara>
<section xml:id="additional-resources_distr-tracing-tempo-configuring" role="_additional-resources">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="../../nodes/scheduling/nodes-scheduler-taints-tolerations.xml#nodes-scheduler-taints-tolerations-about_nodes-scheduler-taints-tolerations">Understanding taints and tolerations</link></simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="distr-tracing-tempo-config-spanmetrics_distr-tracing-tempo-configuring">
<title>Configuration of the monitor tab in Jaeger UI</title>
<simpara>Trace data contains rich information, and the data is normalized across instrumented languages and frameworks.
Therefore, request rate, error, and duration (RED) metrics can be extracted from traces.
The metrics can be visualized in Jaeger console in the <emphasis role="strong">Monitor</emphasis> tab.</simpara>
<simpara>The metrics are derived from spans in the OpenTelemetry Collector that are scraped from the Collector by the Prometheus deployed in the user-workload monitoring stack.
The Jaeger UI queries these metrics from the Prometheus endpoint and visualizes them.</simpara>
<section xml:id="_opentelemetry_collector_configuration">
<title>OpenTelemetry Collector configuration</title>
<simpara>The OpenTelemetry Collector requires configuration of the <literal>spanmetrics</literal> connector that derives metrics from traces and exports the metrics in the Prometheus format.</simpara>
<formalpara>
<title>OpenTelemetry Collector custom resource for span RED</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">kind: OpenTelemetryCollector
apiVersion: opentelemetry.io/v1alpha1
metadata:
  name: otel
spec:
  mode: deployment
  observability:
    metrics:
      enableMetrics: true <co xml:id="CO12-1"/>
  config: |
    connectors:
      spanmetrics: <co xml:id="CO12-2"/>
        metrics_flush_interval: 15s

    receivers:
      otlp: <co xml:id="CO12-3"/>
        protocols:
          grpc:
          http:

    exporters:
      prometheus: <co xml:id="CO12-4"/>
        endpoint: 0.0.0.0:8889
        add_metric_suffixes: false
        resource_to_telemetry_conversion:
          enabled: true # by default resource attributes are dropped

      otlp:
        endpoint: "tempo-simplest-distributor:4317"
        tls:
          insecure: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [otlp, spanmetrics] <co xml:id="CO12-5"/>
        metrics:
          receivers: [spanmetrics] <co xml:id="CO12-6"/>
          exporters: [prometheus]</programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO12-1">
<para>Creates the <literal>ServiceMonitor</literal> custom resource to enable scraping of the Prometheus exporter.</para>
</callout>
<callout arearefs="CO12-2">
<para>The Spanmetrics connector receives traces and exports metrics.</para>
</callout>
<callout arearefs="CO12-3">
<para>The OTLP receiver to receive spans in the OpenTelemetry protocol.</para>
</callout>
<callout arearefs="CO12-4">
<para>The Prometheus exporter is used to export metrics in the Prometheus format.</para>
</callout>
<callout arearefs="CO12-5">
<para>The Spanmetrics connector is configured as exporter in traces pipeline.</para>
</callout>
<callout arearefs="CO12-6">
<para>The Spanmetrics connector is configured as receiver in metrics pipeline.</para>
</callout>
</calloutlist>
</section>
<section xml:id="_tempo_configuration">
<title>Tempo configuration</title>
<simpara>The <literal>TempoStack</literal> custom resource must specify the following: the <emphasis role="strong">Monitor</emphasis> tab is enabled, and the Prometheus endpoint is set to the Thanos querier service to query the data from the user-defined monitoring stack.</simpara>
<formalpara>
<title>TempoStack custom resource with the enabled Monitor tab</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">kind:  TempoStack
apiVersion: tempo.grafana.com/v1alpha1
metadata:
  name: simplest
spec:
  template:
    queryFrontend:
      jaegerQuery:
        enabled: true
        monitorTab:
          enabled: true <co xml:id="CO13-1"/>
          prometheusEndpoint: https://thanos-querier.openshift-monitoring.svc.cluster.local:9091 <co xml:id="CO13-2"/>
        ingress:
          type: route</programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO13-1">
<para>Enables the monitoring tab in the Jaeger console.</para>
</callout>
<callout arearefs="CO13-2">
<para>The service name for Thanos Querier from user-workload monitoring.</para>
</callout>
</calloutlist>
</section>
</section>
<section xml:id="distr-tracing-tempo-config-multitenancy_distr-tracing-tempo-configuring">
<title>Multitenancy</title>
<simpara>Multitenancy with authentication and authorization is provided in the Tempo Gateway service.
The authentication uses OpenShift OAuth and the Kubernetes <literal>TokenReview</literal> API. The authorization uses the Kubernetes <literal>SubjectAccessReview</literal> API.</simpara>
<formalpara>
<title>Sample Tempo CR with two tenants, <literal>dev</literal> and <literal>prod</literal></title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind:  TempoStack
metadata:
  name: simplest
spec:
  tenants:
    mode: openshift <co xml:id="CO14-1"/>
    authentication: <co xml:id="CO14-2"/>
      - tenantName: dev <co xml:id="CO14-3"/>
        tenantId: "1610b0c3-c509-4592-a256-a1871353dbfa" <co xml:id="CO14-4"/>
      - tenantName: prod
        tenantId: "1610b0c3-c509-4592-a256-a1871353dbfb"
  template:
    gateway:
      enabled: true <co xml:id="CO14-5"/>
    queryFrontend:
      jaegerQuery:
        enabled: true</programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO14-1">
<para>Must be set to <literal>openshift</literal>.</para>
</callout>
<callout arearefs="CO14-2">
<para>The list of tenants.</para>
</callout>
<callout arearefs="CO14-3">
<para>The tenant name. Must be provided in the <literal>X-Scope-OrgId</literal> header when ingesting the data.</para>
</callout>
<callout arearefs="CO14-4">
<para>A unique tenant ID.</para>
</callout>
<callout arearefs="CO14-5">
<para>Enables a gateway that performs authentication and authorization. The Jaeger UI is exposed at <literal><link xl:href="http://&lt;gateway-ingress&gt;/api/traces/v1/&lt;tenant-name&gt;/search">http://&lt;gateway-ingress&gt;/api/traces/v1/&lt;tenant-name&gt;/search</link></literal>.</para>
</callout>
</calloutlist>
<simpara>The authorization configuration uses the <literal>ClusterRole</literal> and <literal>ClusterRoleBinding</literal> of the Kubernetes Role-Based Access Control (RBAC). By default, no users have read or write permissions.</simpara>
<formalpara>
<title>Sample of the read RBAC configuration that allows authenticated users to read the trace data of the <literal>dev</literal> and <literal>prod</literal> tenants</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tempostack-traces-reader
rules:
  - apiGroups:
      - 'tempo.grafana.com'
    resources: <co xml:id="CO15-1"/>
      - dev
      - prod
    resourceNames:
      - traces
    verbs:
      - 'get' <co xml:id="CO15-2"/>
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tempostack-traces-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-reader
subjects:
  - kind: Group
    apiGroup: rbac.authorization.k8s.io
    name: system:authenticated <co xml:id="CO15-3"/></programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO15-1">
<para>Lists the tenants.</para>
</callout>
<callout arearefs="CO15-2">
<para>The <literal>get</literal> value enables the read operation.</para>
</callout>
<callout arearefs="CO15-3">
<para>Grants all authenticated users the read permissions for trace data.</para>
</callout>
</calloutlist>
<formalpara>
<title>Sample of the write RBAC configuration that allows the <literal>otel-collector</literal> service account to write the trace data for the <literal>dev</literal> tenant</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector <co xml:id="CO16-1"/>
  namespace: otel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tempostack-traces-write
rules:
  - apiGroups:
      - 'tempo.grafana.com'
    resources: <co xml:id="CO16-2"/>
      - dev
    resourceNames:
      - traces
    verbs:
      - 'create' <co xml:id="CO16-3"/>
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tempostack-traces
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-write
subjects:
  - kind: ServiceAccount
    name: otel-collector
    namespace: otel</programlisting>
</para>
</formalpara>
<calloutlist>
<callout arearefs="CO16-1">
<para>The service account name for the client to use when exporting trace data. The client must send the service account token, <literal>/var/run/secrets/kubernetes.io/serviceaccount/token</literal>, as the bearer token header.</para>
</callout>
<callout arearefs="CO16-2">
<para>Lists the tenants.</para>
</callout>
<callout arearefs="CO16-3">
<para>The <literal>create</literal> value enables the write operation.</para>
</callout>
</calloutlist>
<simpara>Trace data can be sent to the Tempo instance from the OpenTelemetry Collector that uses the service account with RBAC for writing the data.</simpara>
<formalpara>
<title>Sample OpenTelemetry CR configuration</title>
<para>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: cluster-collector
  namespace: tracing-system
spec:
  mode: deployment
  serviceAccount: otel-collector
  config: |
      extensions:
        bearertokenauth:
          filename: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      exporters:
        otlp/dev:
          endpoint: tempo-simplest-gateway.tempo.svc.cluster.local:8090
          tls:
            insecure: false
            ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
          auth:
            authenticator: bearertokenauth
          headers:
            X-Scope-OrgID: "dev"
      service:
        extensions: [bearertokenauth]
        pipelines:
          traces:
            exporters: [otlp/dev]</programlisting>
</para>
</formalpara>
</section>
</section>
<section xml:id="setting-up-monitoring-for-tempo">
<title>Setting up monitoring for the distributed tracing platform (Tempo)</title>
<simpara>The Tempo Operator supports monitoring and alerting of each TempoStack component such as distributor, ingester, and so on, and exposes upgrade and operational metrics about the Operator itself.</simpara>
<section xml:id="configuring-tempostack-metrics-and-alerts_distr-tracing-tempo-configuring">
<title>Configuring TempoStack metrics and alerts</title>
<simpara>You can enable metrics and alerts of TempoStack instances.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Monitoring for user-defined projects is enabled in the cluster. See <link xl:href="../../monitoring/enabling-monitoring-for-user-defined-projects.xml#enabling-monitoring-for-user-defined-projects">Enabling monitoring for user-defined projects</link>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>To enable metrics of a TempoStack instance, set the <literal>spec.observability.metrics.createServiceMonitors</literal> field to <literal>true</literal>:</simpara>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: &lt;name&gt;
spec:
  observability:
    metrics:
      createServiceMonitors: true</programlisting>
</listitem>
<listitem>
<simpara>To enable alerts for a TempoStack instance, set the <literal>spec.observability.metrics.createPrometheusRules</literal> field to <literal>true</literal>:</simpara>
<programlisting language="yaml" linenumbering="unnumbered">apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: &lt;name&gt;
spec:
  observability:
    metrics:
      createPrometheusRules: true</programlisting>
</listitem>
</orderedlist>
<formalpara>
<title>Verification</title>
<para>You can use the <emphasis role="strong">Administrator</emphasis> view of the web console to verify successful configuration:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Go to <emphasis role="strong">Observe</emphasis> &#8594; <emphasis role="strong">Targets</emphasis>, filter for <emphasis role="strong">Source: User</emphasis>, and check that <emphasis role="strong">ServiceMonitors</emphasis> in the format <literal>tempo-&lt;instance_name&gt;-&lt;component&gt;</literal> have the <emphasis role="strong">Up</emphasis> status.</simpara>
</listitem>
<listitem>
<simpara>To verify that alerts are set up correctly, go to <emphasis role="strong">Observe</emphasis> &#8594; <emphasis role="strong">Alerting</emphasis> &#8594; <emphasis role="strong">Alerting rules</emphasis>, filter for <emphasis role="strong">Source: User</emphasis>, and check that the <emphasis role="strong">Alert rules</emphasis> for the TempoStack instance components are available.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="configuring-tempooperator-metrics-and-alerts_distr-tracing-tempo-configuring">
<title>Configuring Tempo Operator metrics and alerts</title>
<simpara>When installing the Tempo Operator from the web console, you can select the <emphasis role="strong">Enable Operator recommended cluster monitoring on this Namespace</emphasis> checkbox, which enables creating metrics and alerts of the Tempo Operator.</simpara>
<simpara>If the checkbox was not selected during installation, you can manually enable metrics and alerts even after installing the Tempo Operator.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>Add the <literal>openshift.io/cluster-monitoring: "true"</literal> label in the project where the Tempo Operator is installed, which is <literal>openshift-tempo-operator</literal> by default.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Verification</title>
<para>You can use the <emphasis role="strong">Administrator</emphasis> view of the web console to verify successful configuration:</para>
</formalpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Go to <emphasis role="strong">Observe</emphasis> &#8594; <emphasis role="strong">Targets</emphasis>, filter for <emphasis role="strong">Source: Platform</emphasis>, and search for <literal>tempo-operator</literal>, which must have the <emphasis role="strong">Up</emphasis> status.</simpara>
</listitem>
<listitem>
<simpara>To verify that alerts are set up correctly, go to <emphasis role="strong">Observe</emphasis> &#8594; <emphasis role="strong">Alerting</emphasis> &#8594; <emphasis role="strong">Alerting rules</emphasis>, filter for <emphasis role="strong">Source: Platform</emphasis>, and locate the <emphasis role="strong">Alert rules</emphasis> for the <emphasis role="strong">Tempo Operator</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
</section>
</section>
<section xml:id="dist-tracing-tempo-updating">
<title>Updating the distributed tracing platform (Tempo)</title>

<simpara>For version upgrades, the Tempo Operator uses the Operator Lifecycle Manager (OLM), which controls installation, upgrade, and role-based access control (RBAC) of Operators in a cluster.</simpara>
<simpara>The OLM runs in the {product-title} by default. The OLM queries for available Operators as well as upgrades for installed Operators.</simpara>
<simpara>When the Tempo Operator is upgraded to the new version, it scans for running TempoStack instances that it manages and upgrades them to the version corresponding to the Operator&#8217;s new version.</simpara>
<section xml:id="additional-resources_dist-tracing-tempo-updating" role="_additional-resources">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="../../operators/understanding/olm/olm-understanding-olm.xml#olm-understanding-olm">Operator Lifecycle Manager concepts and resources</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../operators/admin/olm-upgrading-operators.xml#olm-upgrading-operators">Updating installed Operators</link></simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section xml:id="dist-tracing-tempo-removing">
<title>Removing the Red Hat OpenShift distributed tracing platform (Tempo)</title>

<simpara>The steps for removing the Red Hat OpenShift distributed tracing platform (Tempo) from an {product-title} cluster are as follows:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Shut down all distributed tracing platform (Tempo) pods.</simpara>
</listitem>
<listitem>
<simpara>Remove any TempoStack instances.</simpara>
</listitem>
<listitem>
<simpara>Remove the Tempo Operator.</simpara>
</listitem>
</orderedlist>
<section xml:id="distr-tracing-removing-tempo-instance_dist-tracing-tempo-removing">
<title>Removing a TempoStack instance by using the web console</title>
<simpara>You can remove a TempoStack instance in the <emphasis role="strong">Administrator</emphasis> view of the web console.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged in to the {product-title} web console as a cluster administrator with the <literal>cluster-admin</literal> role.</simpara>
</listitem>
<listitem>
<simpara>For Red Hat OpenShift Dedicated, you must be logged in using an account with the <literal>dedicated-admin</literal> role.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Go to <emphasis role="strong">Operators</emphasis> &#8594; <emphasis role="strong">Installed Operators</emphasis> &#8594; <emphasis role="strong">Tempo Operator</emphasis> &#8594; <emphasis role="strong">TempoStack</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To remove the TempoStack instance, select <inlinemediaobject>
<imageobject>
<imagedata fileref="images/kebab.png"/>
</imageobject>
<textobject><phrase>kebab</phrase></textobject>
</inlinemediaobject> &#8594; <emphasis role="strong">Delete TempoStack</emphasis> &#8594; <emphasis role="strong">Delete</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Optional: Remove the Tempo Operator.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="distr-tracing-removing-tempo-instance-cli_dist-tracing-tempo-removing">
<title>Removing a TempoStack instance by using the CLI</title>
<simpara>You can remove a TempoStack instance on the command line.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An active OpenShift CLI (<literal>oc</literal>) session by a cluster administrator with the <literal>cluster-admin</literal> role.</simpara>
<tip>
<itemizedlist>
<listitem>
<simpara>Ensure that your OpenShift CLI (<literal>oc</literal>) version is up to date and matches your {product-title} version.</simpara>
</listitem>
<listitem>
<simpara>Run <literal>oc login</literal>:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc login --username=&lt;your_username&gt;</programlisting>
</listitem>
</itemizedlist>
</tip>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Get the name of the TempoStack instance by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get deployments -n &lt;project_of_tempostack_instance&gt;</programlisting>
</listitem>
<listitem>
<simpara>Remove the TempoStack instance by running the following command:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc delete tempo &lt;tempostack_instance_name&gt; -n &lt;project_of_tempostack_instance&gt;</programlisting>
</listitem>
<listitem>
<simpara>Optional: Remove the Tempo Operator.</simpara>
</listitem>
</orderedlist>
<orderedlist numeration="arabic">
<title>Verification</title>
<listitem>
<simpara>Run the following command to verify that the TempoStack instance is not found in the output, which indicates its successful removal:</simpara>
<programlisting language="terminal" linenumbering="unnumbered">$ oc get deployments -n &lt;project_of_tempostack_instance&gt;</programlisting>
</listitem>
</orderedlist>
</section>
<section xml:id="additional-resources_dist-tracing-tempo-removing" role="_additional-resources">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="../../operators/admin/olm-deleting-operators-from-cluster.xml#olm-deleting-operators-from-a-cluster">Deleting Operators from a cluster</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="../../cli_reference/openshift_cli/getting-started-cli.xml#getting-started-cli">Getting started with the OpenShift CLI</link></simpara>
</listitem>
</itemizedlist>
</section>
</section>
</chapter>
</book>